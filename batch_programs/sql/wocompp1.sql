/*************************************************************************
 NAME                   : WOCOMPP1.SQL

 DATE WRITTEN           : 06/24/02

 AUTHOR                 : PANKAJ BHIDE

 PURPOSE                : PL/SQL SCRIPT READS RECORDS FROM WORKORDER TABLE
                          FOR ALL COMPLETED WORK ORDERS. IT CHECKS WHETHER
                          THE WORK ORDER IS EITHER MASTER, PO/LIEN OR OTHER
                          WORK ORDER(ELIGIBLE FOR WCLOSE) AND INSERT RECORD
                          INTO BATCH_MAXIMO.LBL_W_WOCOMP  WORK TABLE TABLE

DATABASE TABLES         : WORKORDER /WOSTATUS -READ/UPDATE
                          BATCH_MAXIMO.LBL_W_WOCOMP - DELETE / INSERT
                          FMS_LIEN -READ USED VIA DB LINK DWPRD
                          DW_PO_INFO@DWPRD - READ-USED VIA DB LINK DWPRD

MODIFICATION HISTORY    :  08/16/04   CHANGES FOR MAXIMO REL 5.2

                           08/16/09   CHANGES FOR RELEASE 6

                           02/17/12   PANKAJ  - CHANGE TO WCLOSE FOR PMs
***************************************************************************/
WHENEVER SQLERROR EXIT 1 ROLLBACK;
DECLARE

    STARTUP_DATE   WORKORDER.CHANGEDATE%TYPE   := '31-AUG-1998';
    APPROVAL_DATE  WORKORDER.CHANGEDATE%TYPE;
    WONUM_G        WORKORDER.WONUM%TYPE;
    RECTYPE_G      BATCH_MAXIMO.LBL_W_WOCOMP.RECTYPE%TYPE;
    PO_NUMBER_G    BATCH_MAXIMO.LBL_W_WOCOMP.PO_NUMBER%TYPE;
    PO_LINE_NUM_G  BATCH_MAXIMO.LBL_W_WOCOMP.PO_LINE_NUM%TYPE;
    PO_DATE_G      BATCH_MAXIMO.LBL_W_WOCOMP.PO_DATE%TYPE;
    LIEN_AMT_G     BATCH_MAXIMO.LBL_W_WOCOMP.LIEN_AMT%TYPE;

    READ_REC_CNT_T      NUMBER(5) :=0;
    PO_COUNT_T          NUMBER(5) :=0;

    -- MXES
    ORGID_T         WORKORDER.ORGID%TYPE;
    SITEID_T        WORKORDER.SITEID%TYPE;

    /* CURSOR TO READ ALL WORKORDER WITH STATUS AS COMP */

    CURSOR INP_REC_CUR IS
     SELECT WONUM, HASCHILDREN, SUPERVISOR, GLACCOUNT, LOCATION,
            ORGID, SITEID, -- MXES
            WORKTYPE -- ADDED BY PANKAJ ON 2/17/12
     FROM MAXIMO.WORKORDER
     WHERE STATUS='COMP' AND WONUM LIKE 'W%' AND
           WORKTYPE   NOT IN (SELECT WORKTYPE.WORKTYPE FROM WORKTYPE WHERE
                              WORKTYPE.TYPE ='NOCHARGE') -- NON-CHARGEABLE WORK TYPES
           --WORKTYPE NOT IN ('VM','VMH','HW','NW','SW','SW-EN','FOCUS',
           --                 'PSDI', 'MXSW','RPT','SEC','XF','MIS')
           AND STATUSDATE >= STARTUP_DATE
           AND SUPERVISOR IS NOT NULL
           AND GLACCOUNT  IS NOT NULL
           AND LOCATION   IS NOT NULL
           AND ORGID=ORGID_T     -- MXES
           AND SITEID=SITEID_T
     ORDER BY WONUM;

   /* CURSOR FOR READING RECORDS FROM DW.FMS_LIEN TABLE ACCESSIBLE
      FROM DB LINK. IN CASE THE TABLE IS INACCESIBLE, CONTACT DW DEPT */
/*
    CURSOR FMS_LIEN_CUR IS
       SELECT PO_ID, MONETARY_AMOUNT
       FROM   EDW_SHARE.FMS_LIEN@EDW  -- CHANGED BY PANKAJ ON 2/17/12
       WHERE PROJECT_ID=WONUM_G
       ORDER BY PO_ID;
*/
   /***************************************************************
    PROCEDURE TO PROCESS THE WORK ORDER RECORD TO CHANGE ITS STATUS
    TO WCLOSE.
   ***************************************************************/
   PROCEDURE PROCESS_STATUS_CHANGE(ORGID_I  IN WORKORDER.ORGID%TYPE,
                                   SITEID_I IN WORKORDER.SITEID%TYPE,
                                   WONUM_I  IN WORKORDER.WONUM%TYPE,
                                   STATUS_I  IN WORKORDER.STATUS%TYPE)
             IS
              STATUS_NOW WORKORDER.STATUS%TYPE;
              STATUSDATE_T WOSTATUS.CHANGEDATE%TYPE;
              GLACCOUNT_T  WOSTATUS.GLACCOUNT%TYPE;
              WOSTAT_CNT  INTEGER :=0;
     BEGIN

       SELECT STATUS, GLACCOUNT
       INTO   STATUS_NOW, GLACCOUNT_T
       FROM   MAXIMO.WORKORDER
       WHERE  ORGID=ORGID_I
       AND    SITEID=SITEID_I
       AND    WONUM=WONUM_I;

    /* SELECT COUNT(*) INTO WOSTAT_CNT
       FROM   MAXIMO.WOSTATUS
       WHERE  ORGID=ORGID_I
       AND    SITEID=SITEID_I
       AND    WONUM=WONUM_I
       AND    STATUS=STATUS_I;   */


       IF LTRIM(RTRIM(STATUS_NOW)) != LTRIM(RTRIM(STATUS_I))
        THEN

          IF (WOSTAT_CNT = 0)  THEN

              INSERT INTO MAXIMO.WOSTATUS(WONUM, STATUS, CHANGEDATE,
                 CHANGEBY, GLACCOUNT, ORGID, SITEID,
                 WOSTATUS.WOSTATUSID) VALUES   -- REL 5.2, 6
                 (WONUM_I, STATUS_I, SYSDATE,
                 'BATCH_WCLOSE',GLACCOUNT_T, ORGID_I, SITEID_I,
                  WOSTATUSSEQ.NEXTVAL); -- MXES

              UPDATE MAXIMO.WORKORDER SET STATUS=STATUS_I, STATUSDATE=SYSDATE,
                     CHANGEDATE=SYSDATE, CHANGEBY='BATCH_WCLOSE'
              WHERE ORGID=ORGID_I
              AND   SITEID=SITEID_I
              AND   WONUM=WONUM_I;

            END IF;
       END IF;
    END;

   /***********************************************************
    PROCEDURE TO INSERT INTO BATCH_MAXIMO.LBL_W_WOCOMP WORK TABLE
   ************************************************************/
   PROCEDURE INSERT_RECORD(RECTYPE_P IN BATCH_MAXIMO.LBL_W_WOCOMP.RECTYPE%TYPE,
             WONUM_P          IN BATCH_MAXIMO.LBL_W_WOCOMP.WONUM%TYPE,
             PO_NUMBER_P      IN BATCH_MAXIMO.LBL_W_WOCOMP.PO_NUMBER%TYPE,
             PO_LINE_NUM_P    IN BATCH_MAXIMO.LBL_W_WOCOMP.PO_LINE_NUM%TYPE,
             PO_DATE_P        IN BATCH_MAXIMO.LBL_W_WOCOMP.PO_DATE%TYPE,
             LIEN_AMT_P       IN BATCH_MAXIMO.LBL_W_WOCOMP.LIEN_AMT%TYPE,
             ORGID_P          IN WORKORDER.ORGID%TYPE,
             SITEID_P         IN WORKORDER.SITEID%TYPE) IS

   BEGIN

       INSERT INTO BATCH_MAXIMO.LBL_W_WOCOMP(TRANSDATE,RECTYPE,WONUM,
           PO_NUMBER,PO_LINE_NUM, PO_DATE, LIEN_AMT, ORGID, SITEID) VALUES  -- REL 5.2
           (SYSDATE, RECTYPE_P, WONUM_P,
            PO_NUMBER_P, PO_LINE_NUM_P, PO_DATE_P,LIEN_AMT_P, ORGID_P,SITEID_P);
   END;

 /**************************************************************************
   MAIN PROGRAM BEGINS FROM HERE
 **************************************************************************/

BEGIN

    DBMS_OUTPUT.ENABLE(1000000);

    -- GET THE VALUE OF ORG ID AND SITEID FROM THE ARUGEMENTS
    ORGID_T   :=UPPER('&1');
    SITEID_T  :=UPPER('&2');

    IF (ORGID_T IS NULL OR LENGTH(ORGID_T)=0) THEN
       ORGID_T :='LBNL';
    END IF;

    IF (SITEID_T IS NULL OR LENGTH(SITEID_T)=0) THEN
       SITEID_T :='FAC';
    END IF;

 /* START READING RECORDS FROM CURSOR (ALL THE COMPLETED WORKORDERS) */

  FOR INP_REC IN INP_REC_CUR

   LOOP

     READ_REC_CNT_T := READ_REC_CNT_T +1;

     -- DELETE ALL PREVIOUS RECORDS FROM BATCH_MAXIMO.LBL_W_WOCOMP WORK
     -- TABLE BEFORE PROCESSING FURTHER

     IF (READ_REC_CNT_T =1) THEN

       DELETE FROM BATCH_MAXIMO.LBL_W_WOCOMP
       WHERE ORGID=ORGID_T
       AND SITEID=SITEID_T;

     END IF;

     WONUM_G       := INP_REC.WONUM;

     -- GET FIRST APPOROAL DATE
     APPROVAL_DATE := MAXIMO.LBL_MAXIMO_PKG.GET_FRST_APPR_DATE(
                      INP_REC.ORGID, INP_REC.SITEID,
                      WONUM_G);

     -- BYPASS ALL SUCH WORK ORDERS WHOSE FIRST APPROVAL DATE IS LESSER THAN
     -- THE STARTUP DATE

    IF TO_DATE(APPROVAL_DATE,'DD-MON-RR') >=
       TO_DATE(STARTUP_DATE, 'DD-MON-RR')  THEN


        RECTYPE_G     :=NULL;
        PO_NUMBER_G   :=NULL;
        PO_LINE_NUM_G :=NULL;   -- THIS COLUMN IS NOT USED PRESENTLY
        PO_DATE_G     :=NULL;
        LIEN_AMT_G    :=NULL;
        PO_COUNT_T    :=0;

        -- CHECK TO SEE WHETHER PO AND LIEN INFORMATION EXISTS FOR THE
        -- GIVEN WORKORDER NUMBER

        -- PASS THE WORKORDER NUMBER (PROJECT ID) TO THE CURSOR
/*
        FOR FMS_LIEN_REC IN FMS_LIEN_CUR

          LOOP

             PO_NUMBER_G   :=FMS_LIEN_REC.PO_ID;
             LIEN_AMT_G    :=FMS_LIEN_REC.MONETARY_AMOUNT;

             BEGIN

              SELECT PO_CREATE_DT INTO PO_DATE_G
              FROM EDW_SHARE.PO_HEADER@EDW;

             EXCEPTION WHEN OTHERS THEN
               NULL;

            END;

             RECTYPE_G     := '2';  -- WONUM WITH LIENS SHOULD NOT BE WCLOSED


           -- INSERT RECORD  INTO WORK TABLE
           INSERT_RECORD(RECTYPE_G, WONUM_G, PO_NUMBER_G, PO_LINE_NUM_G,
                             PO_DATE_G, LIEN_AMT_G,INP_REC.ORGID, INP_REC.SITEID );

        END LOOP;
        */

        -- TAKE CARE OF PARENTS WORKORDERS WITHOUT LIENS
        -- DO NOT WCLOSE THEM

       IF (RECTYPE_G IS NULL AND INP_REC.HASCHILDREN = 1 AND
           INP_REC.WORKTYPE NOT LIKE 'PM%')

           THEN -- MXES

           RECTYPE_G     := '1';  -- PARENT WONUM SHOULD NOT BE WCLOSED

           PO_NUMBER_G   :=NULL;
           PO_LINE_NUM_G :=NULL;
           PO_DATE_G     :=NULL;
           LIEN_AMT_G    :=NULL;

           INSERT_RECORD(RECTYPE_G, WONUM_G, PO_NUMBER_G, PO_LINE_NUM_G,
                             PO_DATE_G,LIEN_AMT_G, INP_REC.ORGID, INP_REC.SITEID);
        END IF;

        -- IF NO PURCHASE ORDER FOUND FOR THE GIVEN WORKORDER NUMBER AND
        -- IS NOT PARENT WORKORDER
        IF (RECTYPE_G IS NULL)
         THEN

          -- RECORD ELIGIBLE FOR WCLOSE
          RECTYPE_G     :='3';
          PO_NUMBER_G   :=NULL;
          PO_LINE_NUM_G :=NULL;
          PO_DATE_G     :=NULL;
          LIEN_AMT_G    :=NULL;

           INSERT_RECORD(RECTYPE_G, WONUM_G, PO_NUMBER_G, PO_LINE_NUM_G,
                             PO_DATE_G,LIEN_AMT_G, INP_REC.ORGID, INP_REC.SITEID);

           -- NOW PROCESS WORKORDER TO CHANGE ITS STATUS TO WCLOSE
           PROCESS_STATUS_CHANGE(INP_REC.ORGID, INP_REC.SITEID,
                                 WONUM_G, 'WCLOSE');

        END IF;

      END IF;

  END LOOP;

  COMMIT;

  EXCEPTION

     WHEN OTHERS
      THEN
        DBMS_OUTPUT.PUT_LINE('ERROR CODE ' || SQLCODE);
        DBMS_OUTPUT.PUT_LINE('ERROR DESCR ' || SQLERRM);
        DBMS_OUTPUT.PUT_LINE('LAST WO ' || WONUM_G);

 END;

/
