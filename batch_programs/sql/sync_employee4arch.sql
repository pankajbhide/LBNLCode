/************************************************************************
*
* PROGRAM NAME          : SYNC_EMPLOYEE4ARCH.SQL
*
*
* DESCRIPTION           : THIS PL/SQL SCRIPT SYNCHRONIZES EMPLOYEE DATA
*                         FROM DW TO ARCHIBUS.
*                         THIS PROGRAM ASSUMES A DATABASE LINK TITLED "ARCHIBUS"
*                         THAT CONNECT TO AFM@SHRXXX DATABASE ON WHICH ARCHIBUS
                          PPLICATION IS HOSTED ON.
*
* AUTHOR                : PANKAJ BHIDE
*
* DATE WRITTEN          : 03-MAY-2010
*
* DATE MODIFIED         :
*
* MODIFICATION HISTORTY : 15-APR-2011 UPDATE RM.COUNT_EM BASED UPON NUMBER
*                         OF EMPLOYEES OCCUPYING THE ROOM. RT 93418
*
*                         ADD EMPLOYEE CLASS CODE AND CLASS DESCRIPTION
*
*                         07-NOV-11 CHANGED SOURCE OF EMPLOYEE_PUBLIC
*                         (SNAPSHOT ISSUES)
*
*                         27-JAN-12 UPDATE EMAIL FROM EM TABLE
*
*                         21-FEB-12 CHANGE FROM PS_EMPLOYEES_PUBLIC@DWPRD
*                         TO DW.PS_EMPLOYEES_PULIC. THIS REFERS TO MAT VIEW
*                         BASED EDWPRD DATABASE.
*
*                         29-FEB-12 DELETE THE EMPLOYEES WHOSE STATUS IS NOT
*                         ACTIVE
*
*                         03-APR-12 FIND OUT THE FLOOR NUMBER FROM ROOM TABLE
*                         AND UPDATE EM TABLE ACCORDINGLY.
*
*                         20-NOV-13 RESET ALL EM_COUNT TO ZERO FOR ALL
*                         ROOMS BEFORE UPDATING
*
*                         05-MAY-14 BRING APPOINTMENT END DATE AS PER BERNIE C
*
*                         01-JUL-15 INSERT EMPLOYEES IF THE STATUS=V (EF-1362)
*
*                         01-FEB-17 - REVISIONS FOR ARCHIBUS VER 23 UPGRADE 
*
*                         11-JUN-18 - JIRA EF-7828 CALCULATE AREA COMMON ROOM

******************************************************************************/
--WHENEVER SQLERROR EXIT 1 ROLLBACK;

DECLARE CURSOR EMP_CUR IS
 SELECT LTRIM(RTRIM(A.EMPLID)) EMPLID, A.NAME, INITCAP(A.FIRST_NAME) FIRST_NAME,
           INITCAP(A.LAST_NAME) LAST_NAME,
           A.ORG_LEVEL_1_CODE,A.ORG_LEVEL_2_CODE, A.ORG_LEVEL_3_CODE, A.ORG_LEVEL_4_CODE,
           SUBSTR(A.MAIL_DROP,1,10) MAIL_DROP, A.ZZ_BLDG, A.ZZ_ROOM,
           NVL(A.WORK_PHONE,' ') WORK_PHONE, A.HIRE_DT,
           NVL(A.EMAILID,' ') EMAILID, A.JOBCODE, A.EMPL_STATUS, A.EMPL_STATUS_DESC,
           A.SUPERVISOR_ID,
           SUBSTR(A.JOBTITLE,1,30) JOBTITLE,
           A.REG_TEMP, A.FULL_PART_TIME,
           --C.FL_ID,
           A.appointment_end_dt,
           A.EMPL_CLASS, A.EMPL_CLASS_DESC
    --FROM DW.PS_EMPLOYEES_PUBLIC@DWPRD A, BL@archibus23 B, RM@archibus23  C
    FROM EDW_SHARE.PS_EMPLOYEES_PUBLIC A;



 CURSOR EMP_BLDGROOM_CUR IS
  SELECT ZZ_BLDG, ZZ_ROOM, COUNT(*) EMP_COUNT
  FROM EDW_SHARE.PS_EMPLOYEES_PUBLIC A
  WHERE EMPL_STATUS NOT IN ('D','T') -- DECEASED, TERMINATED
  GROUP BY ZZ_BLDG, ZZ_ROOM;


   EM_ID_T VARCHAR2(100);
   FL_ID_T VARCHAR2(100);
   RM_ID_T VARCHAR2(100);
   BL_ID_T VARCHAR2(100);
   ORG_LEVEL_1_CODE_T  VARCHAR2(100);
   ORG_LEVEL_2_CODE_T  VARCHAR2(100);
   ORG_LEVEL_3_CODE_T  VARCHAR2(100);
   ORG_LEVEL_4_CODE_T  VARCHAR2(100);
   SUCCESS_T VARCHAR2(1) :='1';


 FUNCTION IS_ORG_LEVEL_VALID(
    ORG_LEVEL_1_CODE_I IN EDW_SHARE.PS_EMPLOYEES_PUBLIC.ORG_LEVEL_1_CODE%TYPE,
    ORG_LEVEL_2_CODE_I IN EDW_SHARE.PS_EMPLOYEES_PUBLIC.ORG_LEVEL_2_CODE%TYPE,
    ORG_LEVEL_3_CODE_I IN EDW_SHARE.PS_EMPLOYEES_PUBLIC.ORG_LEVEL_3_CODE%TYPE,
    ORG_LEVEL_4_CODE_I IN EDW_SHARE.PS_EMPLOYEES_PUBLIC.ORG_LEVEL_4_CODE%TYPE,
    LEVEL_I IN NUMBER)
RETURN VARCHAR2
 IS
 SUCCESS_T VARCHAR2(1) :='0';
BEGIN

   IF (LEVEL_I=1) THEN
      BEGIN
        SELECT '1' INTO SUCCESS_T
        FROM DV@archibus23  A
        WHERE A.DV_ID=ORG_LEVEL_1_CODE_I;

        RETURN SUCCESS_T;

      EXCEPTION WHEN OTHERS
        THEN
         RETURN '0';
      END;
    END IF;


    IF (LEVEL_I=2) THEN
      BEGIN
        SELECT '1' INTO SUCCESS_T
        FROM DP@archibus23    A
        WHERE A.DV_ID=ORG_LEVEL_1_CODE_I
        AND   A.DP_ID=ORG_LEVEL_2_CODE_I;

        RETURN SUCCESS_T;

      EXCEPTION WHEN OTHERS
        THEN
         RETURN '0';
      END;
    END IF;

    IF (LEVEL_I=3) THEN
      BEGIN
        SELECT '1' INTO SUCCESS_T
        FROM LBL_ORG_LEVEL_3@archibus23    A
        WHERE A.DV_ID=ORG_LEVEL_1_CODE_I
        AND   A.DP_ID=ORG_LEVEL_2_CODE_I
        AND   A.LBL_ORG_LEVEL_3_CODE=ORG_LEVEL_3_CODE_I;

        RETURN SUCCESS_T;

      EXCEPTION WHEN OTHERS
        THEN
         RETURN '0';
      END;
    END IF;

    IF (LEVEL_I=4) THEN
      BEGIN
        SELECT '1' INTO SUCCESS_T
        FROM LBL_ORG_LEVEL_4@archibus23    A
        WHERE A.DV_ID=ORG_LEVEL_1_CODE_I
        AND   A.DP_ID=ORG_LEVEL_2_CODE_I
        AND   A.LBL_ORG_LEVEL_3_CODE=ORG_LEVEL_3_CODE_I
        AND   A.LBL_ORG_LEVEL_4_CODE=ORG_LEVEL_4_CODE_I;

        RETURN SUCCESS_T;

      EXCEPTION WHEN OTHERS
        THEN
         RETURN '0';
      END;
    END IF;

END;



BEGIN

   -- START READING THE RECORDS ABOUT EMPLOYEE. IF RECORD DOES NOT
   -- EXISTS, THEN, INSERT, ELSE UPDATE WITH THE LATEST DETAILS

   FOR EMP_REC IN EMP_CUR

   LOOP

    SUCCESS_T :=IS_ORG_LEVEL_VALID(EMP_REC.ORG_LEVEL_1_CODE,NULL,NULL,NULL,1);

    IF (SUCCESS_T ='1') THEN
       ORG_LEVEL_1_CODE_T :=EMP_REC.ORG_LEVEL_1_CODE;
    ELSE
       ORG_LEVEL_1_CODE_T :=NULL;
    END IF;

    SUCCESS_T :=IS_ORG_LEVEL_VALID(EMP_REC.ORG_LEVEL_1_CODE,
    EMP_REC.ORG_LEVEL_2_CODE, NULL,NULL,2);

    IF (SUCCESS_T ='1') THEN
       ORG_LEVEL_2_CODE_T :=EMP_REC.ORG_LEVEL_2_CODE;
    ELSE
       ORG_LEVEL_2_CODE_T :=NULL;
    END IF;

    SUCCESS_T :=IS_ORG_LEVEL_VALID(EMP_REC.ORG_LEVEL_1_CODE,
    EMP_REC.ORG_LEVEL_2_CODE,
    EMP_REC.ORG_LEVEL_3_CODE, NULL,3);

    IF (SUCCESS_T ='1') THEN
       ORG_LEVEL_3_CODE_T :=EMP_REC.ORG_LEVEL_3_CODE;
    ELSE
       ORG_LEVEL_3_CODE_T :=NULL;
    END IF;

    SUCCESS_T :=IS_ORG_LEVEL_VALID(EMP_REC.ORG_LEVEL_1_CODE,
    EMP_REC.ORG_LEVEL_2_CODE,
    EMP_REC.ORG_LEVEL_3_CODE,
    EMP_REC.ORG_LEVEL_4_CODE, 4);

    IF (SUCCESS_T ='1') THEN
       ORG_LEVEL_4_CODE_T :=EMP_REC.ORG_LEVEL_4_CODE;
    ELSE
       ORG_LEVEL_4_CODE_T :=NULL;
    END IF;

     -- FIND OUT BLDG, FLOOR AND ROOM DETAILS  FROM ROOM TABLE

     FL_ID_T :=NULL;
     BL_ID_T :=NULL;
     RM_ID_T :=NULL;

     BEGIN
       SELECT BL_ID, FL_ID, RM_ID
       INTO   BL_ID_T, FL_ID_T, RM_ID_T
       FROM   RM@archibus23
       WHERE  BL_ID=EMP_REC.ZZ_BLDG
       AND    RM_ID=EMP_REC.ZZ_ROOM;


      EXCEPTION WHEN OTHERS THEN
         NULL;
     END;

    BEGIN
        SELECT EM_ID INTO EM_ID_T
        FROM  EM@archibus23
        WHERE EM_ID=EMP_REC.EMPLID;


       -- ADDED BY PANKAJ ON 2/29/12

       IF (TRIM(EMP_REC.EMPL_STATUS) IN ('D','T')) THEN  -- DECEASED, TERMINATED

         DELETE FROM EM@archibus23
         WHERE EM_ID=EMP_REC.EMPLID;

       ELSE



        UPDATE  EM@archibus23  A
        SET A.EM_NUMBER=UPPER(SUBSTR(EMP_REC.NAME,1,12)),
        A.BL_ID=BL_ID_T,
        A.FL_ID=FL_ID_T,
        A.RM_ID=RM_ID_T,
        A.PHONE=EMP_REC.WORK_PHONE,
        A.MAILSTOP=EMP_REC.MAIL_DROP,
        A.LBL_JOBCODE=EMP_REC.JOBCODE,
        A.LBL_JOBTITLE=EMP_REC.JOBTITLE,
        A.DV_ID=ORG_LEVEL_1_CODE_T,
        A.DP_ID=ORG_LEVEL_2_CODE_T,
        A.LBL_ORG_LEVEL_3_CODE=ORG_LEVEL_3_CODE_T,
        A.LBL_ORG_LEVEL_4_CODE=ORG_LEVEL_4_CODE_T,
        A.STATUS=EMP_REC.EMPL_STATUS,
        A.LBL_STATUS_DESCRIPTION=EMP_REC.EMPL_STATUS_DESC,
        A.NAME_LAST=EMP_REC.LAST_NAME,
        A.NAME_FIRST=EMP_REC.FIRST_NAME,
        A.LBL_REG_TEMP=EMP_REC.REG_TEMP,
        A.LBL_FULL_PART_TIME=EMP_REC.FULL_PART_TIME,
        A.LBL_EMPL_CLASS=EMP_REC.EMPL_CLASS,
        A.LBL_EMPL_CLASS_DESC=EMP_REC.EMPL_CLASS_DESC,
        A.EMAIL=EMP_REC.EMAILID,-- ADDED ON 1/27/12
        A.LBL_DATE_ENDED=EMP_REC.APPOINTMENT_END_DT, -- ADDED ON 5/5/14  AS PER BERNIE C
        A.MANAGER=EMP_REC.SUPERVISOR_ID -- ADDED FOR ARCHIBUS 23
        WHERE A.EM_ID=EMP_REC.EMPLID;

       END IF ;


       EXCEPTION
        WHEN OTHERS THEN

        --IF (EMP_REC.EMPL_STATUS ='A') THEN
         IF (EMP_REC.EMPL_STATUS NOT IN ('D','T')) THEN -- JIRA EF 1362
         INSERT INTO EM@archibus23 A
         (A.EM_ID, A.EM_NUMBER, A.BL_ID, A.FL_ID,
          A.RM_ID,  A.PHONE,  A.MAILSTOP,
           A.LBL_JOBCODE, A.LBL_JOBTITLE,
           A.DV_ID,
           A.DP_ID,
           A.LBL_ORG_LEVEL_3_CODE,
           A.LBL_ORG_LEVEL_4_CODE,
           A.STATUS,
           A.LBL_STATUS_DESCRIPTION,
           A.NAME_LAST,  A.NAME_FIRST,  A.LBL_REG_TEMP,
           A.LBL_FULL_PART_TIME,
           A.LBL_EMPL_CLASS, A.LBL_EMPL_CLASS_DESC,
           A.EMAIL,
           A.LBL_DATE_ENDED,
           A.MANAGER  -- ADDED FOR ARCHIBUS23
           ) -- ADDED ON 1/27/12
          VALUES
         (EMP_REC.EMPLID, UPPER(SUBSTR(EMP_REC.NAME,1,12)), BL_ID_T, FL_ID_T,
          RM_ID_T, EMP_REC.WORK_PHONE, EMP_REC.MAIL_DROP,
          EMP_REC.JOBCODE, EMP_REC.JOBTITLE,
          ORG_LEVEL_1_CODE_T,
          ORG_LEVEL_2_CODE_T,
          ORG_LEVEL_3_CODE_T,
          ORG_LEVEL_4_CODE_T,
          EMP_REC.EMPL_STATUS,
          EMP_REC.EMPL_STATUS_DESC,
          EMP_REC.LAST_NAME, EMP_REC.FIRST_NAME, EMP_REC.REG_TEMP,
          EMP_REC.FULL_PART_TIME,
          EMP_REC.EMPL_CLASS, EMP_REC.EMPL_CLASS_DESC,
          EMP_REC.EMAILID,
          EMP_REC.APPOINTMENT_END_DT,
          EMP_REC.SUPERVISOR_ID -- ADDED FOR ARCHIBUS 23
           );
       END IF;

     END;

    END LOOP;

  -- ADDED BY PANKAJ ON 4/15/11 AS PER RT 93418

   -- FIRSTLY SET COUNT TO ZERO BEFORE UPDATING THE RECORDS
   UPDATE RM@archibus23
   SET   COUNT_EM=0;


   FOR EMP_BLDGROOM_REC IN EMP_BLDGROOM_CUR

    LOOP

       BEGIN
         UPDATE RM@archibus23 A
         SET   A.COUNT_EM=EMP_BLDGROOM_REC.EMP_COUNT,
          a.area_comn_rm=(a.cap_em - emp_bldgroom_rec.emp_count)
         WHERE A.BL_ID=EMP_BLDGROOM_REC.ZZ_BLDG
         AND   A.RM_ID=EMP_BLDGROOM_REC.ZZ_ROOM;
       EXCEPTION WHEN OTHERS THEN
        NULL;

      END;


    END LOOP;


END;
/

COMMIT;
