CREATE OR REPLACE PACKAGE BODY LBL_MISC_QUERY01
 IS

FUNCTION GET_UNIFORMAT_DESC(SITEID_I IN VARCHAR2,
                            UNIFORMAT_I IN VARCHAR2)
                            RETURN VARCHAR2

 IS
    DESCRIPTION_T  VARCHAR2(500) :=NULL;
 BEGIN

   BEGIN
    SELECT DESCRIPTION INTO DESCRIPTION_T
    FROM   LOCATIONS
    WHERE  SITEID=SITEID_I
    AND    LOCATION=UNIFORMAT_I
    AND    TYPE='UNIFORMAT';

   EXCEPTION WHEN OTHERS THEN
     NULL;
   END;

   RETURN DESCRIPTION_T;

 END;



FUNCTION GET_CLASSSTRUCT_DESC(CLASSSTRUCTUREID_I IN VARCHAR2)
                RETURN VARCHAR2

 IS
    DESCRIPTION_T  VARCHAR2(500) :=NULL;
 BEGIN

   BEGIN
    SELECT DESCRIPTION INTO DESCRIPTION_T
    FROM   CLASSSTRUCTURE
    WHERE  CLASSSTRUCTUREID=CLASSSTRUCTUREID_I;

   EXCEPTION WHEN OTHERS THEN
     NULL;
   END;

   RETURN DESCRIPTION_T;

 END;


 FUNCTION GET_PM_INFO(SITEID_I      IN VARCHAR2,
                     ASSETNUM_I    IN VARCHAR2  )
                            RETURN VARCHAR2
  IS

     OUTPUT_T    VARCHAR2(4000);
     TEMP_T      VARCHAR2(4000);
     DELIMITER_T VARCHAR2(1) :=',';
     BLANK_T     VARCHAR2(100) :=',,,,,,,';

     CURSOR PM_CUR IS
       SELECT A.PMNUM, A.DESCRIPTION,
       TO_CHAR(A.LASTCOMPDATE,'YYYY-MM-DD') LASTCOMPDATE,
                      TO_CHAR(A.NEXTDATE,'YYYY-MM-DD') NEXTDATE,
              LTRIM(TO_CHAR(A.FREQUENCY)) FREQUENCY, A.FREQUNIT, A.ROUTE, A.JPNUM,
              LTRIM(TO_CHAR(A.JPSEQINUSE)) JPSEQINUSE
              FROM PM A
              WHERE A.SITEID=SITEID_I
              AND   A.ASSETNUM=ASSETNUM_I;

  BEGIN

       FOR PM_REC IN PM_CUR

        LOOP

          TEMP_T :=PM_REC.PMNUM     || DELIMITER_T  || PM_REC.DESCRIPTION || DELIMITER_T  ||
                   PM_REC.LASTCOMPDATE || DELIMITER_T ||
                   PM_REC.NEXTDATE  || DELIMITER_T  || PM_REC.FREQUENCY    || DELIMITER_T ||
                   PM_REC.FREQUNIT  || DELIMITER_T  || PM_REC.JPNUM        || DELIMITER_T ||
                   PM_REC.JPSEQINUSE || DELIMITER_T || PM_REC.ROUTE;

          IF (OUTPUT_T IS NOT NULL) THEN
            OUTPUT_T := OUTPUT_T || '|'|| TEMP_T;
          ELSE
            OUTPUT_T := TEMP_T;
          END IF;

         END LOOP;

         IF (OUTPUT_T IS NULL) THEN
            OUTPUT_T := BLANK_T;
         END IF;

   RETURN OUTPUT_T;


  END;


  FUNCTION GET_PMWORKORDER_INFO(SITEID_I      IN VARCHAR2,
                           ASSETNUM_I    IN VARCHAR2  )

                            RETURN VARCHAR2
  IS
     OUTPUT_T    VARCHAR2(4000);
     TEMP_T      VARCHAR2(4000);
     DELIMITER_T VARCHAR2(1) :=',';
     BLANK_T     VARCHAR2(100) :=',,,,,,,';

     CURSOR WORKORDER_CUR IS
          SELECT COUNT(*) AS NO_OF_WORKORDERS
          FROM   WORKORDER A
          WHERE  A.SITEID=SITEID_I
          AND    A.ASSETNUM=ASSETNUM_I
          AND    A.REPORTDATE BETWEEN (SYSDATE-1095) AND SYSDATE
          AND    A.STATUS NOT IN ('WAPPR','CAN')
          AND    A.WORKTYPE LIKE 'PM%'
          AND    A.ISTASK=0
          GROUP  BY A.WORKTYPE
          ORDER  BY A.WORKTYPE;
  BEGIN

    FOR WORKORDER_REC IN WORKORDER_CUR

      LOOP

          OUTPUT_T :=LTRIM(TO_CHAR(WORKORDER_REC.NO_OF_WORKORDERS));

      END LOOP;

      RETURN OUTPUT_T;

 END;

FUNCTION GET_NONPMWORKORDER_INFO(SITEID_I      IN VARCHAR2,
                           ASSETNUM_I    IN VARCHAR2  )

                            RETURN VARCHAR2
  IS
     OUTPUT_T    VARCHAR2(4000);
     TEMP_T      VARCHAR2(4000);
     DELIMITER_T VARCHAR2(1) :=',';
     BLANK_T     VARCHAR2(100) :=',,,,,,,';

     CURSOR WORKORDER_CUR IS
          SELECT COUNT(*) AS NO_OF_WORKORDERS
          FROM   WORKORDER A
          WHERE  A.SITEID=SITEID_I
          AND    A.ASSETNUM=ASSETNUM_I
          AND    A.REPORTDATE BETWEEN (SYSDATE-1095) AND SYSDATE
          AND    A.STATUS NOT IN ('WAPPR','CAN')
          AND    A.WORKTYPE NOT LIKE 'PM%'
          AND    A.ISTASK=0
          GROUP  BY A.WORKTYPE
          ORDER  BY A.WORKTYPE;
  BEGIN

    FOR WORKORDER_REC IN WORKORDER_CUR

      LOOP

          OUTPUT_T :=LTRIM(TO_CHAR(WORKORDER_REC.NO_OF_WORKORDERS));

      END LOOP;

      RETURN OUTPUT_T;

 END;

FUNCTION GET_PRIORITY_DESC(PRIORITY_I ASSET.priority%TYPE)
         RETURN VARCHAR2
  IS
     DESCR_T NUMERICDOMAIN.DESCRIPTION%TYPE;

 BEGIN
    BEGIN
      SELECT DESCRIPTION
      INTO DESCR_T
      FROM NUMERICDOMAIN
      WHERE DOMAINID='LBL_EQLOCPRIORITY'
      AND   VALUE=PRIORITY_I;
    EXCEPTION WHEN OTHERS THEN
      NULL;
    END;

     RETURN DESCR_T;


END;


END;
