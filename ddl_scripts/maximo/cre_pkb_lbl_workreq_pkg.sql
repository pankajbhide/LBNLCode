CREATE OR REPLACE PACKAGE BODY lbl_workreq_pkg IS

/*****************************************************************************
 PROGRAM NAME           : LBL_WOREQ_PKG

 DATE WRITTEN           : 01-JUL-2008

 AUTHOR                 : PANKAJ BHIDE

 PURPOSE                : PACKAGE BODY FOR DATABASE INSERT/UPDATE REQUIRED
                          FOR WORK REQUEST APPLICATION

                          MXES - CHANGES FOR NEW DATABASE INSERTS
                          INSTEAD OF POPULATING SCHEDSTART/FINISH, POPULATE
                          TARGSTART AND TARGCOMPDATE.

                          ADD/MODIFY RECORDS IN WORKVIEW TABLE

                          2/17/2010 RT#38369 REMOVE TRAILING SPACES FOR GLACCOUNT
                          WHILE SAVING THE CONTENTS OF THE WORK REQUEST/ORDER.

                          3/08/2010 POPULATE WOGROUP FROM WONUM.

                          04/21/2010 ADDED SERVICE TYPE

                          05/12/2010 ADDED COMMODITY GROUP, COMMODITY

                          08/11/2010 GET EMPLOYEE DETAILS

                          02/28/2011 GET RELEASE STATUS FOR LOCATION

                          01/15/2013 SET LOCATION PRIORITY

                          06/26/2013 - CHANGES FOR WPC PHASE-2 PROJECT

                          10/15/2013 - CHANGES FOR LOCKSHOP/RADIOSHOP DATA
                                       PROTECTION

                          11/20/2013 - CHANGES AFTER WPC PHASE-2 POST
                                       DEPLOYMENT

                          02/03/2015 - CHANGES FOR MAXIMO REL 7.5

                          08/05/2015 - CHANGES FOR MAXIMO REL 7.6.0.1

                          08/14/2015 - INSERT/UPDATE LBL_WORKORDEREXT.GLACCOUNT

                          11/25/2015 - GENERAL WORK REQUST, BRING ESCORT REQD,
                                       CONDITIONAL RELEASE AND COMMENTS ABOUT
                                       COND RELEASE FROM LOCATION TO WORK ORDER.

                          03/29/2016 - INSERT GLACCOUNT IN WOSTATUS TABLE JIRA
                                       EF-3200

                         10/5/2016  - EF-4750 - AUTOFILL WORK TYPE AND SUPERVISOR F
                                       FOR PEST CONTROL

                         3/14/2017  - ESTIMATE WORK REQUEST

                         10/1/2017  - EF-6658 MAKE WORKTYPE=PROJ IF USER SELECTS
                                      SERVICE TYPE =22

                         06/22/2018 - EF-7847 DEF VALUE FOR LBL_WALKDOWN=0

                         11/25/2018 - ADDED PLANNER GROUP

                         2/8/19     - Added LBL_ISPMCRITICAL field.

*****************************************************************************/
LDTEXT_DELIMIT_T VARCHAR2(2000) :=CHR(13) || CHR(10) || CHR(13) || CHR(10);

-- ADDED ON 5/12/10 FOR COMMODITY GROUPS
COMMGROUP_OPS_T  WORKORDER.COMMODITYGROUP%TYPE :='FAOPS';
COMMGROUP_RES_T  WORKORDER.COMMODITYGROUP%TYPE :='FARES';


--****************************************************
-- GET NEXT NUMBER BASED ON PARAMATER (WOREQ OR WONUM)
--****************************************************
FUNCTION GET_NEXT_NUMBER(TYPE_I IN MAXIMO.WORKORDER.DESCRIPTION%TYPE)
 RETURN MAXIMO.WORKORDER.WONUM%TYPE

 IS

   CURSOR LBL_MAXVARS_CUR IS
    SELECT VARNAME, VARVALUE
    --FROM MAXIMO.LBL_MAXVARS
    FROM MAXIMO.LBL_MAXVARS
    WHERE VARNAME IN ('LAST_WOREQ_NUM')
    AND   ORGID='LBNL'
    AND   SITEID='FAC';

    CURRENT_WO_LENGTH_T NUMBER(10);
    SEED_T      MAXIMO.AUTOKEY.SEED%TYPE;
    PREFIX_T    MAXIMO.AUTOKEY.PREFIX%TYPE;
    WONUM_T     MAXIMO.WORKORDER.WONUM%TYPE;
    WOREQ_NUM_T BATCH_MAXIMO.LBL_WORKREQ.WORKREQ_NUM%TYPE;

 BEGIN

  FOR LBL_MAXVARS_REC IN LBL_MAXVARS_CUR

   LOOP
      -- GET THE CURRENTLY SET LENGTH OF THE WORK ORDER NUMBER(SIMILAR SETTING
      -- IN MXSERVER.PROPERTIES FILE

    -- GET THE LAST WORK REQUEST NUMBER FROM LBL_MAXVARS
    -- INCREMENT IT AND UPDATE IT BACK IN THE TABLE

    IF (LBL_MAXVARS_REC.VARNAME='LAST_WOREQ_NUM') THEN
      WOREQ_NUM_T := LBL_MAXVARS_REC.VARVALUE;
    END IF;

  END LOOP;

    -- GET THE LENGTH OF WORK ORDER NUMBER FOR FACILITIES
    -- GET FROM MAXVARS - MXES
    SELECT TO_NUMBER(VARVALUE,'9999') INTO CURRENT_WO_LENGTH_T
    --FROM   MAXIMO.MAXVARS
    FROM   MAXIMO.LBL_MAXVARS
    WHERE  VARNAME='LBL_WOLENGTH'
    AND    NVL(ORGID,'LBNL')='LBNL'
    AND    NVL(SITEID,'FAC')='FAC';

   -- IF IT IS WORK REQUEST NUMBER
  IF (TYPE_I ='WOREQ') THEN

    WOREQ_NUM_T := LTRIM(TO_CHAR((TO_NUMBER(WOREQ_NUM_T)+1)));

    --UPDATE MAXIMO.LBL_MAXVARS
    UPDATE LBL_MAXVARS
    SET VARVALUE=WOREQ_NUM_T
    WHERE VARNAME='LAST_WOREQ_NUM'
    AND   ORGID='LBNL'
    AND   SITEID='FAC';

    RETURN WOREQ_NUM_T;
  END IF; --  IF (TYPE_I ='WOREQ')

  -- IF IT IS WORK ORDER NUMBER
  IF (TYPE_I ='WONUM') THEN

   --IMMEDIATELY UPDATE THE AUTOKEY TABLE WITH THE NEW
   --SEED (THE CUSTOM TRIGGER ON AUTOKEY WILL FORMAT
   --THE VALUES OF THE NEW SEED AND THE PREFIX)

   UPDATE MAXIMO.AUTOKEY
   SET SEED=SEED+1
   WHERE AUTOKEYNAME='WORKORDERNUM'  -- MXES
   AND   NVL(ORGID,'LBNL')='LBNL'
   AND   NVL(SITEID,'FAC')='FAC';

    -- NOW, GET THE VALUES OF THE NEW PREFIX AND THE NEW SEED
    -- SINCE THE CUSTOM TRIGGER HAS ALREADY FORMATTED IT
    SELECT PREFIX, SEED
    INTO PREFIX_T, SEED_T
    FROM MAXIMO.AUTOKEY
    WHERE AUTOKEYNAME='WORKORDERNUM'   -- MXES
    AND   NVL(ORGID,'LBNL')='LBNL'
    AND   NVL(SITEID,'FAC')='FAC';

   -- NOW PRE-PAD THE NEW WORK ORDER NUMBER AS PER THE CURRENT
   -- WORK ORDER NUMBER LENGTH SET IN LBNL

    CURRENT_WO_LENGTH_T := CURRENT_WO_LENGTH_T - LENGTH(PREFIX_T);

    SELECT PREFIX_T || LPAD(LTRIM(TO_CHAR(SEED_T)),CURRENT_WO_LENGTH_T,'0')
    INTO WONUM_T
    FROM DUAL;


    RETURN WONUM_T;
  END IF; -- IF (TYPE_I ='WONUM')

 END;


--****************************************************
-- GET FAM INFORMATION AS PER LOCATION AND WORK TYPE
--****************************************************
FUNCTION GET_FAMINFO(LOCATION_I IN WORKORDER.LOCATION%TYPE,
                     WORKTYPE_I IN WORKORDER.WORKTYPE%TYPE)
RETURN MAXIMO.WORKORDER.DESCRIPTION%TYPE

IS
  RETURN_T WORKORDER.DESCRIPTION%TYPE :=NULL;
  T_LBL_FAMREQD  NUMBER(1) :=1;
  T_FAMID  MAXIMO.LBL_FAM.FAMID%TYPE;
  T_FAMMANAGER MAXIMO.WORKORDER.LBL_FAMMANAGER%TYPE;

BEGIN

  IF (WORKTYPE_I IS NOT NULL) THEN

   BEGIN
     SELECT LBL_FAMREQD
     INTO T_LBL_FAMREQD
     FROM MAXIMO.WORKTYPE
     WHERE WORKTYPE=WORKTYPE_I;
    EXCEPTION WHEN OTHERS THEN
      NULL;
   END;

  END IF;


  IF (T_LBL_FAMREQD=1) THEN

     BEGIN
      SELECT FAMID INTO T_FAMID
      FROM MAXIMO.LBL_FAMLOCATION
      WHERE LOCATION IN (SELECT A.LO1 FROM LOCATIONS A WHERE A.LOCATION=LOCATION_I
      UNION SELECT B.LOCATION FROM MAXIMO.LBL_V_FAMLOCATION B WHERE B.TYPE='I' AND  B.LOCATION IN
      (SELECT C.ANCESTOR FROM MAXIMO.LOCANCESTOR C WHERE C.LOCATION=LOCATION_I ));


      EXCEPTION WHEN OTHERS THEN
        T_FAMID :='FAMTBD';
     END;

    IF (T_FAMID IS NOT NULL) THEN
     BEGIN
      SELECT RESPPARTY
      INTO T_FAMMANAGER
      FROM MAXIMO.PERSONGROUPTEAM
      WHERE PERSONGROUP=T_FAMID
      AND   GROUPDEFAULT=1;

      RETURN_T := T_FAMID || '_' || T_FAMMANAGER;

      EXCEPTION WHEN OTHERS THEN
        RETURN_T :=NULL;
     END;
    END IF;

  END IF;


  RETURN RETURN_T;

 END;

/**********************************************
* FUNCTION TO GET RELEASE STATUS FOR A LOCATION
***********************************************/
FUNCTION GET_RELEASE_LOCATION(
  LOCATION_I             IN LOCATIONS.LOCATION%TYPE)
  RETURN MAXIMO.WORKORDER.DESCRIPTION%TYPE

  IS
   RETURN_T MAXIMO.WORKORDER.DESCRIPTION%TYPE;
   LBL_REL_REQD_T  LOCATIONS.LBL_REL_REQD%TYPE;
   FOUND_T  NUMBER(10) :=0;

  BEGIN

    BEGIN

     SELECT LBL_REL_REQD
     INTO   LBL_REL_REQD_T
     FROM   MAXIMO.LOCATIONS
     WHERE  SITEID='FAC'
     AND    LOCATION=LOCATION_I;

    EXCEPTION WHEN OTHERS  THEN
      NULL;
    END ;

    IF (LBL_REL_REQD_T IS NULL) THEN
       RETURN_T := 'UNKNOWN';
    END IF;

    IF (LBL_REL_REQD_T='N') THEN
       RETURN_T := 'NOT REQUIRED';
    END IF;

    IF (LBL_REL_REQD_T='Y') THEN

       FOUND_T :=0;
       -- AUTHORIZER SHOULD BE ACTIVE
       SELECT COUNT(*) INTO FOUND_T
       FROM  LBL_AUTH_RELEASE A
       WHERE A.LOCATION=LOCATION_I
       AND   A.SITEID='FAC'
       AND   A.PERSONID IN (SELECT B.PERSONID FROM PERSON B WHERE
       B.PERSONID=A.PERSONID AND B.LBL_STATUS ='A');

       IF (FOUND_T  > 0) THEN
         RETURN_T := 'REQUIRED';
       ELSE
         RETURN_T := 'UNKNOWN';
       END IF;

    END IF; -- IF (LBL_REL_REQD_T='Y') THEN

    RETURN RETURN_T;

 END;

/**********************************************
* FUNCTION TO PRIORITY FOR THE LOCATION
***********************************************/
FUNCTION GET_LOC_PRIORITY(
  LOCATION_I             IN LOCATIONS.LOCATION%TYPE)
  RETURN MAXIMO.WORKORDER.ASSETLOCPRIORITY%TYPE

IS
   T_LOCPRIORITY LOCOPER.locpriority%TYPE :=NULL;
 BEGIN

   BEGIN
     SELECT A.locpriority INTO T_LOCPRIORITY
     FROM MAXIMO.LOCOPER A
     WHERE A.location=LOCATION_I;

    EXCEPTION WHEN OTHERS THEN
       T_LOCPRIORITY :=NULL;
   END;

   RETURN   T_LOCPRIORITY;

 END;




/************************************************************************
 FUNCTION TO INSERT GENERAL WORK REQUEST TO THE WORKORDER RELATED TABLES
   AFTER SUCCESSFUL INSERT, IT RETURNS WORK ORDER NUMBER
************************************************************************/
FUNCTION INSERT_GEN_WORKREQ(
    I_REPORTEDBY                IN    WORKORDER.REPORTEDBY%TYPE,
    I_PHONE                     IN    WORKORDER.PHONE%TYPE,
    I_WO1                       IN    WORKORDER.WO1%TYPE,
    I_WO1_PHONE                 IN    LBL_WORKORDEREXT.WO1_PHONE%TYPE,
    I_BUILDING                  IN    LBL_WORKORDEREXT.BUILDING%TYPE,
    I_ROOM                      IN    LBL_WORKORDEREXT.ROOM%TYPE,
    I_LOCATION_NOTES            IN    LBL_WORKORDEREXT.LOCATION_NOTES%TYPE,
    I_FIRST_AVL_DATETIME        IN    LBL_WORKORDEREXT.FIRST_AVL_DATETIME%TYPE,
    I_TARGSTARTDATE             IN    VARCHAR2, --LBL_WORKORDEREXT.TARGSTARTDATE%TYPE,
    I_TARGCOMPDATE              IN    VARCHAR2, --LBL_WORKORDEREXT.TARGCOMPDATE%TYPE,
    I_SCHED_ISSUES              IN    LBL_WORKORDEREXT.SCHED_ISSUES%TYPE,
    I_SCHED_ISSUES_DTL          IN    LBL_WORKORDEREXT.SCHED_ISSUES_DTL%TYPE,
    I_BUILDING_MAINT            IN    LBL_WORKORDEREXT.BUILDING_MAINT%TYPE,
    I_GLACCOUNT                 IN    WORKORDER.GLACCOUNT%TYPE,
    I_DESCRIPTION               IN    WORKORDER.DESCRIPTION%TYPE,
    I_ACCOMP_COND_PROB          IN    LBL_WORKORDEREXT.ACCOMP_COND_PROB%TYPE,
    I_COMMODITYGROUP            IN    WORKORDER.COMMODITYGROUP%TYPE,
    I_COMMODITY                 IN    WORKORDER.COMMODITY%TYPE,
    I_PRIOR_WO                  IN    LBL_WORKORDEREXT.PRIOR_WO%TYPE,
    I_PRIOR_WONUM               IN    LBL_WORKORDEREXT.PRIOR_WONUM%TYPE,
    I_ASSET_DESC                IN    LBL_WORKORDEREXT.ASSET_DESC%TYPE,
    I_WARRANTY_ISSUE            IN    LBL_WORKORDEREXT.WARRANTY_ISSUE%TYPE,
    I_WARRANTY_ISS_DTL          IN    LBL_WORKORDEREXT.WARRANTY_ISS_DTL%TYPE,
    I_ESTIMATE_REQD             IN    LBL_WORKORDEREXT.ESTIMATE_REQD%TYPE,
    I_SAFETY_ISSUE              IN    LBL_WORKORDEREXT.SAFETY_ISSUE%TYPE,
    I_HAZARDS                   IN    LBL_WORKORDEREXT.HAZARDS%TYPE,
    I_HAZARDS_DTL               IN    LBL_WORKORDEREXT.HAZARDS_DTL%TYPE,
    I_FOLLOW_STOP_WO            IN    LBL_WORKORDEREXT.FOLLOW_STOP_WO%TYPE,
    I_FOLLOW_STOP_WONUM         IN    LBL_WORKORDEREXT.FOLLOW_STOP_WONUM%TYPE,
    I_FOLLOW_STOP_DTL           IN    LBL_WORKORDEREXT.FOLLOW_STOP_DTL%TYPE,
    I_SELF_WO                   IN    LBL_WORKORDEREXT.SELF_WO%TYPE,
    I_EST_HRS                   IN    LBL_WORKORDEREXT.EST_HRS%TYPE,
    I_PARENT_WO_EXISTS          IN    LBL_WORKORDEREXT.PARENT_WO_EXISTS%TYPE,
    I_PARENT_WONUM              IN    LBL_WORKORDEREXT.PARENT_WONUM%TYPE,
    I_WORKREQ_TYPE              IN    LBL_WORKORDEREXT.WORKREQ_TYPE%TYPE,
    I_CHANGEBY                  IN    LBL_WORKORDEREXT.CHANGEBY%TYPE,
    I_REPORTEDBY_MOBILE         IN    LBL_WORKORDEREXT.REPORTEDBY_MOBILE%TYPE,
    I_WO1_MOBILE                IN    LBL_WORKORDEREXT.wo1_mobile%TYPE
    )
RETURN MAXIMO.WORKORDER.WONUM%TYPE

IS

   WONUM_T   MAXIMO.WORKORDER.WONUM%TYPE;
   LDKEY_T   MAXIMO.LONGDESCRIPTION.LDKEY%TYPE;
   LOCATION_T MAXIMO.WORKORDER.LOCATION%TYPE;
   WOREQ_NUM_T LBL_WORKORDEREXT.WORKREQ_NUM%TYPE;
   LDTEXT_T  MAXIMO.LONGDESCRIPTION.LDTEXT%TYPE;
   TARGSTARTDATE_T MAXIMO.WORKORDER.TARGSTARTDATE%TYPE;
   CURRENTDATE_T   MAXIMO.WORKORDER.TARGSTARTDATE%TYPE;
   TARGCOMPDATE_T  MAXIMO.WORKORDER.TARGCOMPDATE%TYPE;
   HASLD_T         MAXIMO.WORKORDER.HASLD%TYPE :=0;
   COMMODITY_T    MAXIMO.WORKORDER.COMMODITY%TYPE;
   T_LBL_RELEASE_STATUS  MAXIMO.WORKORDER.LBL_RELEASE_STATUS%TYPE;
   T_SUPERVISOR   MAXIMO.WORKORDER.SUPERVISOR%TYPE;
   CONTENTUID_T   MAXIMO.LONGDESCRIPTION.CONTENTUID%TYPE;
   LDSEQ_T        MAXIMO.LONGDESCRIPTION.LDKEY%TYPE;

   -- ADDED BY PANKAJ ON 11/25/15

   T_LBL_ESCORT_REQD    MAXIMO.WORKORDER.LBL_ESCORT_REQD%TYPE;
   T_LBL_CONDITION_REL  MAXIMO.WORKORDER.LBL_CONDITION_REL%TYPE;
   T_LBL_COMMENTS_CONDR MAXIMO.LOCATIONS.LBL_COMMENTS_CONDR%TYPE;

  -- ADDED BY PANKAJ ON 8/6/15
  T_FAMID      MAXIMO.WORKORDER.LBL_FAMID%TYPE;
  T_FAMMANAGER MAXIMO.WORKORDER.LBL_FAMMANAGER%TYPE;

  T_FAMMANAGERNAME VARCHAR2(100) :=NULL;
  T_APPENV         VARCHAR2(100) :=NULL;
  T_REPORTEDBYNAME VARCHAR2(100):=NULL;
  T_MAILHOST       VARCHAR2(100) :=NULL;
  T_FOOTER         VARCHAR2(2000) :='';
  T_SUBJECT        VARCHAR2(2000) :='';
  T_BODY           VARCHAR2(30000) :=NULL;
  T_REPORTDATE     VARCHAR2(20):= NULL;
  T_CLOB           CLOB :=NULL;
  T_POSITION       NUMBER(5) :=0;
  T_FACWPCEMAIL    VARCHAR2(100);
  T_FAMEMAIL       VARCHAR2(100) :=NULL;

  T_WORKTYPE       MAXIMO.WORKORDER.WORKTYPE%TYPE  :=NULL;
  T_PLANNER_GROUP  MAXIMO.WORKORDER.lbl_planner_group%TYPE := NULL;

  CURSOR EMAILTO_CUR IS
    SELECT MAXIMO.LBL_WORKREQ_PKG.GET_EMPLOYEE_DETAILS(RESPPARTYGROUP,'EMAIL') TO_EMAIL
    FROM MAXIMO.PERSONGROUPTEAM
    WHERE persongroup='FASUPERTEST';


BEGIN

  WONUM_T     := MAXIMO.LBL_WORKREQ_PKG.GET_NEXT_NUMBER('WONUM');
  WOREQ_NUM_T := I_WORKREQ_TYPE || '7-'||  --  FOR MAXIMO 7.5 NEWER SERIES
                 LPAD(MAXIMO.LBL_WORKREQ_PKG.GET_NEXT_NUMBER('WOREQ'),6,'0');

  -- PREPARE VALUES REQUIRED FOR TABLES (COMMON FOR ADD AND MODIFY)
  PREPARE_GENWORK_VALUES
  (
    I_REPORTEDBY                ,
    I_PHONE                     ,
    I_WO1                       ,
    I_WO1_PHONE                 ,
    I_BUILDING                  ,
    I_ROOM                      ,
    I_LOCATION_NOTES            ,
    I_FIRST_AVL_DATETIME        ,
    I_TARGSTARTDATE             ,
    I_TARGCOMPDATE              ,
    I_SCHED_ISSUES              ,
    I_SCHED_ISSUES_DTL          ,
    I_BUILDING_MAINT            ,
    I_GLACCOUNT                 ,
    I_DESCRIPTION               ,
    I_ACCOMP_COND_PROB          ,
    I_COMMODITYGROUP            ,
    I_COMMODITY                 ,
    I_PRIOR_WO                  ,
    I_PRIOR_WONUM               ,
    I_ASSET_DESC                ,
    I_WARRANTY_ISSUE            ,
    I_WARRANTY_ISS_DTL          ,
    I_ESTIMATE_REQD             ,
    I_SAFETY_ISSUE              ,
    I_HAZARDS                   ,
    I_HAZARDS_DTL               ,
    I_FOLLOW_STOP_WO            ,
    I_FOLLOW_STOP_WONUM         ,
    I_FOLLOW_STOP_DTL           ,
    I_SELF_WO                   ,
    I_EST_HRS                   ,
    I_PARENT_WO_EXISTS          ,
    I_PARENT_WONUM              ,
    LOCATION_T                  ,
    TARGSTARTDATE_T             ,
    TARGCOMPDATE_T              ,
    T_LBL_RELEASE_STATUS        ,
    LDTEXT_T                    ,
    CURRENTDATE_T );



  LDTEXT_T :=LTRIM(RTRIM(LDTEXT_T));

  --SELECT MAXSEQ.NEXTVAL
  LDKEY_T :=NULL;



  SELECT MAXIMO.WORKORDERSEQ.NEXTVAL
  INTO LDKEY_T
  FROM SYS.DUAL;

  IF (LDTEXT_T IS NOT NULL AND LENGTH(LDTEXT_T) > 0)
   THEN
     HASLD_T :=1;
  END IF;

  -- ADDED BY PANKAJ ON 12/3/13 AS PER TAMMY T
  -- DERIVE SUPERVISOR BASED UPON COMMODITY VALUES
  T_SUPERVISOR :=NULL;

  -- RADIO SHOP
  IF (I_COMMODITY='03') THEN
    BEGIN
      SELECT VARVALUE INTO T_SUPERVISOR
      FROM MAXIMO.LBL_MAXVARS
      WHERE VARNAME='RADIOSHOP_SUPERVISOR'
      AND   ORGID='LBNL'
      AND   SITEID='FAC';
     EXCEPTION WHEN OTHERS  THEN
      NULL;
    END;

  END IF;

  -- LOCKSHOP
  IF (I_COMMODITY='09') THEN
   BEGIN
      SELECT VARVALUE INTO T_SUPERVISOR
      FROM MAXIMO.LBL_MAXVARS
      WHERE VARNAME='LOCKSHOP_SUPERVISOR'
      AND   ORGID='LBNL'
      AND   SITEID='FAC';
     EXCEPTION WHEN OTHERS  THEN
      NULL;
    END;

  END IF;

   -- PEST CONTROL JIRA EF-4750

  T_WORKTYPE  :=NULL;

  IF (I_COMMODITY='19') THEN -- PEST CONTRL
   BEGIN
      SELECT VARVALUE INTO T_SUPERVISOR
      FROM MAXIMO.LBL_MAXVARS
      WHERE VARNAME='WOPESTREQ_SUPERVISOR'
      AND   ORGID='LBNL'
      AND   SITEID='FAC';
     EXCEPTION WHEN OTHERS  THEN
      NULL;
    END;

  END IF;

  IF (I_COMMODITY='19') THEN -- PEST CONTRL
   BEGIN
      SELECT VARVALUE INTO T_WORKTYPE
      FROM MAXIMO.LBL_MAXVARS
      WHERE VARNAME='WOPESTREQ_WORKTYPE'
      AND   ORGID='LBNL'
      AND   SITEID='FAC';
     EXCEPTION WHEN OTHERS  THEN
      NULL;
    END;
 END IF;


IF (I_COMMODITY='22') THEN -- PROJECT

    --T_WORKTYPE :='PROJ' ; -- EF-6658

    T_WORKTYPE :=NULL ; -- EF-7104

END IF;

  -- ADDED BY PANKAJ ON 11/25/15
  IF (LOCATION_T IS NOT NULL) THEN
    BEGIN
      SELECT LBL_ESCORT_REQD, LBL_COND_RELEASE, LBL_COMMENTS_CONDR
      INTO T_LBL_ESCORT_REQD, T_LBL_CONDITION_REL, T_LBL_COMMENTS_CONDR
      FROM MAXIMO.LOCATIONS
      WHERE SITEID='FAC'
      AND   LOCATION=LOCATION_T;

    EXCEPTION WHEN OTHERS THEN
      NULL;
    END;
  END IF;

  -- DO NOT DERIVE FAM FOR PEST CONTROL, LOCKSHOP AND RADIO SHOP
  IF (I_COMMODITY !='03' AND I_COMMODITY !='09' AND I_COMMODITY !='19'  ) THEN

    -- ADDED BY PANKAJ ON 8/6/16
    SELECT SUBSTR(LBL_WORKREQ_PKG.GET_FAMINFO(LOCATION_T,NULL),1,INSTR(LBL_WORKREQ_PKG.GET_FAMINFO(LOCATION_T,NULL),'_')-1) ,
         SUBSTR(LBL_WORKREQ_PKG.GET_FAMINFO(LOCATION_T,NULL),INSTR(LBL_WORKREQ_PKG.GET_FAMINFO(LOCATION_T,NULL),'_')+1)
    INTO T_FAMID, T_FAMMANAGER
    FROM DUAL;

   T_PLANNER_GROUP := NULL;
   BEGIN
     SELECT PLANNER_GROUP INTO T_PLANNER_GROUP
     FROM LBL_FAM WHERE FAMID=T_FAMID;
   EXCEPTION WHEN OTHERS then
      NULL;
   END;

  END IF;
  -- CHANGES AS PER MXES

  INSERT INTO MAXIMO.WORKORDER
  (ORGID, SITEID, WONUM, STATUS, STATUSDATE,
   DESCRIPTION, CHANGEBY, CHANGEDATE,
   WORKTYPE,  --  USEFUL for pest control , project etc
   WO4,
   ESTDUR, ESTLABHRS, ESTLABCOST, ESTMATCOST, ESTTOOLCOST,
   ACTLABHRS, ACTLABCOST, ACTMATCOST, ACTTOOLCOST,
   HASCHILDREN, OUTLABCOST, OUTMATCOST, OUTTOOLCOST,
   HISTORYFLAG,
   WO1, WO5, REPORTEDBY, REPORTDATE, PHONE,
   DOWNTIME, CHARGESTORE, GLACCOUNT,
   ESTSERVCOST,ACTSERVCOST,DISABLED,ESTATAPPRLABHRS,
   ESTATAPPRLABCOST,ESTATAPPRMATCOST,ESTATAPPRTOOLCOST,
   ESTATAPPRSERVCOST, HASFOLLOWUPWORK,
   ISTASK, LOCATION, HASLD,
   TARGSTARTDATE, TARGCOMPDATE,
   -- MXES
   WORKORDERID, WOCLASS, WOACCEPTSCHARGES,
   --PERFORMMOVETO,  -- NOT REQD  IN REL 7.5
   PARENTCHGSSTATUS,
   LANGCODE, INTERRUPTIBLE,
   WOGROUP,
   COMMODITY,COMMODITYGROUP,
   LBL_RELEASE_STATUS,
   CALCPRIORITY,
   ASSETLOCPRIORITY,
   SUPERVISOR,
   WOISSWAP ,  --   REVISIONS FOR REL 7.5
   LASTCOPYLINKDATE,
   FLOWCONTROLLED,
   IGNOREDIAVAIL,
   PLUSCLOOP,
   SUSPENDFLOW,
   FLOWACTIONASSIST,
   AOS ,
   NESTEDJPINPROCESS,
   AMS,
   REQASSTDWNTIME,
   ACTINTLABCOST,
   PLUSCISMOBILE,
   APPTREQUIRED,
   INCTASKSINSCHED,
   ACTINTLABHRS,
   IGNORESRMAVAIL ,
   LMS,
   NEWCHILDCLASS,
   LOS,
   REPAIRLOCFLAG,
   LBL_ESCORT_REQD, -- ADDED BY PANKAJ ON 11/25/15
   LBL_CONDITION_REL,
   LBL_FAMID,           -- ADDED BY PANKAJ ON 8/6/16
   LBL_FAMMANAGER,
   LBL_WALKDOWN,
   LBL_PLANNER_GROUP,
   LBL_CODECOMPLIANCE,
   LBL_ISPMCRITICAL,
   DJPAPPLIED -- 7.6.1.1
   )
   VALUES
  ('LBNL','FAC',WONUM_T, 'WAPPR', CURRENTDATE_T,
   I_DESCRIPTION, I_CHANGEBY, CURRENTDATE_T,
   T_WORKTYPE, -- PEST CONTROL
   WOREQ_NUM_T,
   0,0,0,0,0,
   0,0,0,0,
   0, 0,0,0,
   0,
    LTRIM(RTRIM(I_WO1)), '3',I_REPORTEDBY, CURRENTDATE_T, I_PHONE,
    0,0,RTRIM(LTRIM(I_GLACCOUNT)),
    0,0,0,0,
    0,0,0,
    0,0,
    0,LOCATION_T, HASLD_T,
    TARGSTARTDATE_T, TARGCOMPDATE_T,
    LDKEY_T, 'WORKORDER', 1,
    --0, -- NOT REQD for MAXIMO 7.5
    0,  -- CHANGED ON 7/18/17
     'EN',0,
    WONUM_T,
    I_COMMODITY, I_COMMODITYGROUP,
    T_LBL_RELEASE_STATUS,
    LBL_WORKREQ_PKG.GET_LOC_PRIORITY(LOCATION_T),
    LBL_WORKREQ_PKG.GET_LOC_PRIORITY(LOCATION_T),
   -- DECODE(I_COMMODITY,'09','PSSO-L','03','PSSO-R',NULL) --09 LOCKSHOP, 03-RADIO SHOP
   T_SUPERVISOR,
   0,             --WOISSWAP
   SYSDATE,       --LASTCOPYLINKDATE
   0,             -- FLOWCONTROLLED
   0,             --IGNOREDIAVAIL
   0,             --PLUSCLOOP
   0,             --SUSPENDFLOW
   0,             --FLOWACTIONASSIST
   0,             --AOS
   0,             -- NESTEDJPINPROCESS
   0,             -- AMS
   0,             -- REQASSTDWNTIME
   0,             -- ACTINTLABCOST
   0,             --PLUSCISMOBILE
   0,             --APPTREQUIRED
   0,             --INCTASKSINSCHED
   0,             --ACTINTLABHRS
   1,             --IGNORESRMAVAIL
   0,             --LMS
   'WORKORDER',    --   NEWCHILDCLASS
   0,               --   LOS
   0,               --REPAIRLOCFLA,
   T_LBL_ESCORT_REQD,
   T_LBL_CONDITION_REL,
   T_FAMID,
   T_FAMMANAGER,
   0,
   T_PLANNER_GROUP,
   0,  -- code compliance
   0, -- pm critical,
   'NO'
   --LBL_ORGCODE)
   );

    -- REQUIRED FOR RELEASE 7.5
    SELECT MAXIMO.LONGDESCRIPTIONSEQ.NEXTVAL
    INTO   LDSEQ_T
    FROM DUAL;

    CONTENTUID_T :='BMXAA' || LTRIM(TO_CHAR(LDSEQ_T));

    IF (HASLD_T =1) THEN
       INSERT INTO MAXIMO.LONGDESCRIPTION
       (LDKEY, LDOWNERTABLE, LDOWNERCOL, LDTEXT, LONGDESCRIPTION.LONGDESCRIPTIONID,
       LONGDESCRIPTION.LANGCODE, CONTENTUID)
        VALUES (LDKEY_T, 'WORKORDER','DESCRIPTION',
        TO_CLOB(LDTEXT_T), LDSEQ_T,
        'EN', CONTENTUID_T);
    END IF;




    -- ADDED BY PANKAJ ON 11/25/15
    IF (T_LBL_COMMENTS_CONDR IS NOT NULL AND LENGTH(T_LBL_COMMENTS_CONDR) >0) THEN
      SELECT MAXIMO.LONGDESCRIPTIONSEQ.NEXTVAL
      INTO   LDSEQ_T
      FROM DUAL;

      CONTENTUID_T :='BMXAA' || LTRIM(TO_CHAR(LDSEQ_T));
      HASLD_T :=1 ;


       INSERT INTO MAXIMO.LONGDESCRIPTION
       (LDKEY, LDOWNERTABLE, LDOWNERCOL, LDTEXT, LONGDESCRIPTION.LONGDESCRIPTIONID,
       LONGDESCRIPTION.LANGCODE, CONTENTUID)
        VALUES (LDKEY_T, 'WORKORDER','LBL_CONDITION_REL',
        TO_CLOB(T_LBL_COMMENTS_CONDR), LDSEQ_T,
        'EN', CONTENTUID_T);
    END IF;

    INSERT INTO MAXIMO.WOSTATUS
    (WONUM, STATUS, CHANGEDATE, CHANGEBY,
     ORGID, SITEID, WOSTATUS.WOSTATUSID, GLACCOUNT)
     VALUES
     (WONUM_T, 'WAPPR',CURRENTDATE_T, I_CHANGEBY,
     'LBNL','FAC', MAXIMO.WOSTATUSSEQ.NEXTVAL, RTRIM(LTRIM(I_GLACCOUNT)));


     INSERT INTO MAXIMO.WOANCESTOR WOANCESTOR
     (ORGID,SITEID, WONUM, ANCESTOR,
      HIERARCHYLEVELS, WOANCESTOR.WOANCESTORID) VALUES
      ('LBNL','FAC',WONUM_T,WONUM_T,
      0, WOANCESTORSEQ.NEXTVAL);

   -- ADDED BY PANKAJ 7/8/09 FOR MXES

   INSERT INTO MAXIMO.WORKVIEW(
   APP, CLASS, DESCRIPTION, HISTORYFLAG, ISTASK, ORGID,
   RECORDKEY, REPORTDATE, REPORTEDBY,
   REPORTEDBYNAME,
   SITEID, STATUS, WORKVIEWID,
   PRIORITY) -- ADDED BY PANKAJ ON 1/15/13
   VALUES
   ('WOTRACK','WORKORDER', I_DESCRIPTION, 0, 0, 'LBNL',
     WONUM_T, CURRENTDATE_T, I_REPORTEDBY,
     MAXIMO.LBL_MAXIMO_PKG.GET_EMPLOYEE_NAME(I_REPORTEDBY),
     'FAC','WAPPR', WORKVIEWSEQ.NEXTVAL,
      LBL_WORKREQ_PKG.GET_LOC_PRIORITY(LOCATION_T)
   );
     INSERT INTO BATCH_MAXIMO.LBL_WORKREQ(
     WORKREQ_NUM, WORKREQ_TYPE,REPORTEDBY, PHONE,
     WO1, BUILDING, ROOM,LOCATION_NOTES,
     BUILDING_MAINT,GLACCOUNT,DESCRIPTION,
     ESTIMATE_REQD,TARGSTARTDATE, TARGCOMPDATE ,
     CHANGEBY,CHANGEDATE, WONUM,
     DATEFIRSTINSERTED,
     ORGID,SITEID,
     COMMODITY, COMMODITYGROUP,
      --) VALUES -- ADDED ON 4/21/10
      -- ADDED ON 7/11/13 FOR WPC-2 PROJECT
      WO1_PHONE,
      FIRST_AVL_DATETIME ,
      SCHED_ISSUES,
      SCHED_ISSUES_DTL ,
      ACCOMP_COND_PROB,
      PRIOR_WO,
      PRIOR_WONUM,
      ASSET_DESC ,
      WARRANTY_ISSUE,
      WARRANTY_ISS_DTL,
      SAFETY_ISSUE,
      HAZARDS,-- NUMBER (1),
      HAZARDS_DTL,
      FOLLOW_STOP_WO,
      FOLLOW_STOP_WONUM,
      FOLLOW_STOP_DTL,
      SELF_WO,
      EST_HRS,
      PARENT_WO_EXISTS,
      PARENT_WONUM,
      REPORTEDBY_MOBILE,
      wo1_mobile

      ) VALUES
     (WOREQ_NUM_T, I_WORKREQ_TYPE, I_REPORTEDBY, I_PHONE,
      LTRIM(RTRIM(I_WO1)),  I_BUILDING, I_ROOM,I_LOCATION_NOTES,
      I_BUILDING_MAINT,RTRIM(LTRIM(I_GLACCOUNT)),I_DESCRIPTION,
      I_ESTIMATE_REQD,TARGSTARTDATE_T, TARGCOMPDATE_T,
      I_CHANGEBY, CURRENTDATE_T, WONUM_T,
      SYSDATE,
      'LBNL','FAC',
      I_COMMODITY, I_COMMODITYGROUP,
      -- ADDED BY PANKAJ ON 7/11/13 FOR WPC PHASE-2 PROJECT
      I_WO1_PHONE,
      I_FIRST_AVL_DATETIME ,
      I_SCHED_ISSUES,
      I_SCHED_ISSUES_DTL ,
      I_ACCOMP_COND_PROB,
      I_PRIOR_WO ,
      I_PRIOR_WONUM ,
      I_ASSET_DESC,
      I_WARRANTY_ISSUE ,
      I_WARRANTY_ISS_DTL,
      I_SAFETY_ISSUE ,
      DECODE(I_HAZARDS,0,'N','Y'),
      I_HAZARDS_DTL ,
      I_FOLLOW_STOP_WO ,
      I_FOLLOW_STOP_WONUM ,
      I_FOLLOW_STOP_DTL,
      I_SELF_WO ,
      I_EST_HRS,
      I_PARENT_WO_EXISTS,
      I_PARENT_WONUM,
      I_REPORTEDBY_MOBILE,
      I_WO1_MOBILE
      );

    INSERT INTO LBL_WORKORDEREXT
     ( WONUM,
        --REPORTEDBY,
        --PHONE,
        --WO1,
        WO1_PHONE,
        BUILDING,
        ROOM,
        LOCATION_NOTES,
        FIRST_AVL_DATETIME,
        --TARGSTARTDATE,
        --TARGCOMPDATE,
        SCHED_ISSUES,
        SCHED_ISSUES_DTL,
        BUILDING_MAINT,
        --GLACCOUNT,
        --DESCRIPTION,
        ACCOMP_COND_PROB,
        --COMMODITYGROUP,
        --COMMODITY,
        PRIOR_WO,
        PRIOR_WONUM,
        ASSET_DESC,
        WARRANTY_ISSUE,
        WARRANTY_ISS_DTL,
        ESTIMATE_REQD,
        SAFETY_ISSUE,
        HAZARDS,
        HAZARDS_DTL,
        FOLLOW_STOP_WO,
        FOLLOW_STOP_WONUM,
        FOLLOW_STOP_DTL,
        SELF_WO,
        EST_HRS,
        PARENT_WO_EXISTS,
        PARENT_WONUM,
        WORKREQ_TYPE,
        WORKREQ_NUM,
        CHANGEBY,
        CHANGEDATE,
        LBL_WORKORDEREXTID,
        ORGID,
        SITEID,
        REPORTEDBY_MOBILE,
        wo1_mobile,
        GLACCOUNT
        ) VALUES
        (WONUM_T
        --I_REPORTEDBY
        --,  I_PHONE
        --,  I_WO1
        ,  I_WO1_PHONE
        ,  I_BUILDING
        ,  I_ROOM
        ,  I_LOCATION_NOTES
        ,  I_FIRST_AVL_DATETIME
        --,  TARGSTARTDATE_T
        --,  TARGCOMPDATE_T
        ,  I_SCHED_ISSUES
        ,  I_SCHED_ISSUES_DTL
        ,  I_BUILDING_MAINT
        --,  I_GLACCOUNT
        --,  I_DESCRIPTION
        ,  I_ACCOMP_COND_PROB
        --,  I_COMMODITYGROUP
        --,  I_COMMODITY
        ,  I_PRIOR_WO
        ,  I_PRIOR_WONUM
        ,  I_ASSET_DESC
        ,  I_WARRANTY_ISSUE
        ,  I_WARRANTY_ISS_DTL
        ,  I_ESTIMATE_REQD
        ,  I_SAFETY_ISSUE
        ,  I_HAZARDS
        ,  I_HAZARDS_DTL
        ,  I_FOLLOW_STOP_WO
        ,  I_FOLLOW_STOP_WONUM
        ,  I_FOLLOW_STOP_DTL
        ,  I_SELF_WO
        ,  I_EST_HRS
        ,  I_PARENT_WO_EXISTS
        ,  I_PARENT_WONUM
        ,  I_WORKREQ_TYPE
        ,  WOREQ_NUM_T
        ,  I_CHANGEBY
        ,  CURRENTDATE_T
        ,  LBL_WORKORDEREXTSEQ.NEXTVAL
        ,  'LBNL'
        ,  'FAC'
        ,  I_REPORTEDBY_MOBILE
        ,  I_WO1_MOBILE
        ,  I_GLACCOUNT);

        --  REVISIONS FOR MAXIMO 7.5
        INSERT INTO WOSERVICEADDRESS (ADDRESSISCHANGED,
        SITEID,
        WOSERVICEADDRESSID,
        LANGCODE,
        WONUM,
        HASLD,
        ORGID) values
        (0,
         'FAC',
         WOSERVICEADDRESSSEQ.NEXTVAL,
         'EN',
          WONUM_T,
          0,
         'LBNL');

        IF (LOCATION_T IS NOT NULL) THEN
          INSERT INTO MULTIASSETLOCCI
          (RECORDKEY,
           PROGRESS,
          LOCATION,
          REPLACEMENTSITE,
          LANGCODE,
          HASLD,
          ISPRIMARY,
          WORKORGID,
          MULTIID,
          PERFORMMOVETO,
          WORKSITEID,
          ORGID,
          SITEID,
          RECORDCLASS,
          TOTALWORKUNITS -- 7.6.1.1
          ) VALUES
          (WONUM_T,
           0,
           LOCATION_T,
           'FAC',
           'EN',
           0,
           1,
           'LBNL',

           MULTIASSETLOCCISEQ.NEXTVAL,
           0,
           'FAC',
           'LBNL',
           'FAC',
           'WORKORDER',
           1);
       END IF;


 ---- EMAIL TO FAM ADDED BY PANKAJ ON 8/7/16

 IF (T_FAMID IS NOT NULL) THEN

  SELECT VARVALUE INTO  T_APPENV
  FROM MAXIMO.LBL_MAXVARS
  WHERE VARNAME='APPLICATION_ENV';

  SELECT VARVALUE INTO  T_FACWPCEMAIL
  FROM MAXIMO.LBL_MAXVARS
  WHERE VARNAME='FACWPC_EMAIL';

  SELECT MAXIMO.LBL_MAXIMO_PKG.GET_EMPLOYEE_NAME(I_REPORTEDBY),
         MAXIMO.LBL_MAXIMO_PKG.GET_EMPLOYEE_NAME(T_FAMMANAGER),
         MAXIMO.LBL_WORKREQ_PKG.GET_EMPLOYEE_DETAILS(T_FAMMANAGER,'EMAIL')
  INTO   T_REPORTEDBYNAME, T_FAMMANAGERNAME,  T_FAMEMAIL
  FROM DUAL;

  SELECT PROPVALUE
   INTO T_MAILHOST
   FROM MAXIMO.MAXPROPVALUE
   WHERE UPPER(PROPNAME)=UPPER('MAIL.SMTP.HOST');

   T_REPORTDATE := TO_CHAR(CURRENTDATE_T,'MM/DD/YYYY');

  IF (T_APPENV != 'PRODUCTION') THEN
     T_SUBJECT  := '[TEST] ';
     T_FOOTER   := '<TR><TD>&nbsp;</TD></TR><TR><TD><B>[This email is generated from the TEST data and it does not represent the actual data.]</TD></TR>';
  END IF;

  T_SUBJECT  := T_SUBJECT || ' Facilities Area Manager ' ||T_FAMMANAGERNAME || ' assigned to the Work Order ' || WONUM_T;

  T_BODY := '<HTML><HEAD><TITLE> ' || ' Facilities Area Manager ' || T_FAMMANAGERNAME || ' assigned to the Work Order '|| WONUM_T || '</TITLE></HEAD>';
  T_BODY := T_BODY || '<BODY>';
  T_BODY := T_BODY || '<TABLE>';
  T_BODY := T_BODY || '<TR><TD>';
  T_BODY := T_BODY || '<TR><TD>&nbsp;</TD></TR>';
  T_BODY := T_BODY || ' The following work order was entered by ' || T_REPORTEDBYNAME || ' and is awaiting your approval for planning.';
  T_BODY := T_BODY || '<TR><TD>&nbsp;</TD></TR>';
  T_BODY := T_BODY || '<TR><TD>&nbsp;</TD></TR>';
  T_BODY := T_BODY || '<TABLE BORDER=1 ALIGN=LEFT>';
  T_BODY := T_BODY || '<TR><TD><B>Work Order Number</B></TD><TD><B>'  || WONUM_T || '</B></TD></TR>';
  T_BODY := T_BODY || '<TR><TD><B>Requested work</B></TD><TD><B>' || I_DESCRIPTION || '</B></TD></TR>';
  T_BODY := T_BODY || '<TR><TD><B>Reported By</B></TD><TD><B>' || I_REPORTEDBY  || ' - ' || T_REPORTEDBYNAME ||'</B></TD></TR>';
  T_BODY := T_BODY || '<TR><TD><B>Date Reported</B></TD><TD><B>' || T_REPORTDATE || '</B></TD></TR>';
  T_BODY := T_BODY || '<TR><TD><B>Location</B></TD><TD><B>'  || LOCATION_T ||'</B></TD></TR>';
  T_BODY := T_BODY || '</TABLE>';
  T_BODY := T_BODY || '</TD></TR>';
  T_BODY := T_BODY || '<TR><TD>&nbsp;</TD></TR>';
  T_BODY := T_BODY || '<TR><TD>';
  T_BODY := T_BODY || '</TD></TR>';
  T_BODY := T_BODY || '<TR><TD>&nbsp;</TD></TR>';
  T_BODY := T_BODY || T_FOOTER;
  T_BODY := T_BODY || '</TD></TR>';
  T_BODY := T_BODY || '</TABLE></BODY></HTML>';

  DBMS_LOB.CREATETEMPORARY(T_CLOB, TRUE, dbms_lob.session);

  T_POSITION :=LENGTH(T_BODY);
  DBMS_LOB.WRITE (T_CLOB,T_POSITION,1,T_BODY);


  -- NOW SEND EMAIL

  IF (T_APPENV='PRODUCTION' AND T_FAMEMAIL IS NOT NULL) THEN

       MAXIMO.LBL_MAXIMO_PKG.SEND_MAIL_HTML_CLOB(T_FAMEMAIL,
                                          T_FACWPCEMAIL,     -- FROM
                                          T_SUBJECT,
                                          T_CLOB,
                                          T_MAILHOST,
                                          25);
  ELSE -- NON PROD
     FOR EMAILTO_REC IN EMAILTO_CUR

       LOOP
        MAXIMO.LBL_MAXIMO_PKG.SEND_MAIL_HTML_CLOB(EMAILTO_REC.TO_EMAIL,
                                          T_FACWPCEMAIL,     -- FROM
                                          T_SUBJECT,
                                          T_CLOB,
                                          T_MAILHOST,
                                          25);
    END LOOP;
  END IF;

END IF; -- T_FAMID IS NOT NULL



 RETURN WONUM_T;

END;

--*********************************************
-- FUNCTION TO INSERT TRANSPORTATION WORK ORDER
--*********************************************
FUNCTION INSERT_TRANSP_WORKREQ(
  WORKREQ_TYPE_I     IN BATCH_MAXIMO.LBL_WORKREQ.WORKREQ_TYPE%TYPE,
  REPORTEDBY_I       IN BATCH_MAXIMO.LBL_WORKREQ.REPORTEDBY%TYPE,
  PHONE_I            IN BATCH_MAXIMO.LBL_WORKREQ.PHONE%TYPE,
  WO1_I              IN BATCH_MAXIMO.LBL_WORKREQ.WO1%TYPE,
  BUILDING_I         IN MAXIMO.LOCATIONS.LOCATION%TYPE,
  ROOM_I             IN MAXIMO.LOCATIONS.LOCATION%TYPE,
  FROM_BUILDING_I    IN MAXIMO.LOCATIONS.LOCATION%TYPE,
  FROM_ROOM_I        IN MAXIMO.LOCATIONS.LOCATION%TYPE,
  TO_BUILDING_I      IN MAXIMO.LOCATIONS.LOCATION%TYPE,
  TO_ROOM_I          IN MAXIMO.LOCATIONS.LOCATION%TYPE,
  LOCATION_NOTES_I   IN BATCH_MAXIMO.LBL_WORKREQ.LOCATION_NOTES%TYPE,
  NUMBER_OF_ITEMS_I  IN BATCH_MAXIMO.LBL_WORKREQ.NUMBER_OF_ITEMS%TYPE,
  TYPE_OF_ITEM_I     IN BATCH_MAXIMO.LBL_WORKREQ.TYPE_OF_ITEM%TYPE,
  ITEM_WEIGHT_I      IN BATCH_MAXIMO.LBL_WORKREQ.ITEM_WEIGHT%TYPE,
  RECYCLE_PICKUP_I   IN BATCH_MAXIMO.LBL_WORKREQ.RECYCLE_PICKUP%TYPE,
  HAZARDS_I          IN BATCH_MAXIMO.LBL_WORKREQ.HAZARDS%TYPE,
  GLACCOUNT_I        IN BATCH_MAXIMO.LBL_WORKREQ.GLACCOUNT%TYPE,
  DESCRIPTION_I      IN BATCH_MAXIMO.LBL_WORKREQ.DESCRIPTION%TYPE,
  COMMENTS_I         IN VARCHAR2,
  TARGCOMPDATE_I     IN VARCHAR2,
  CLEANUP_I          IN BATCH_MAXIMO.LBL_WORKREQ.CLEANUP%TYPE,
  CHANGEBY_I         IN BATCH_MAXIMO.LBL_WORKREQ.CHANGEBY%TYPE)
  RETURN MAXIMO.WORKORDER.WONUM%TYPE

IS

   WONUM_T   MAXIMO.WORKORDER.WONUM%TYPE;
   LDKEY_T   MAXIMO.LONGDESCRIPTION.LDKEY%TYPE;
   LDKEY_T2   MAXIMO.LONGDESCRIPTION.LDKEY%TYPE :=NULL;
   LOCATION_T MAXIMO.WORKORDER.LOCATION%TYPE;
   WOREQ_NUM_T BATCH_MAXIMO.LBL_WORKREQ.WORKREQ_NUM%TYPE;
   LDTEXT_T  MAXIMO.LONGDESCRIPTION.LDTEXT%TYPE;
   TARGSTARTDATE_T MAXIMO.WORKORDER.TARGSTARTDATE%TYPE;
   CURRENTDATE_T   MAXIMO.WORKORDER.TARGSTARTDATE%TYPE;
   TARGCOMPDATE_T  MAXIMO.WORKORDER.TARGCOMPDATE%TYPE;
   PICKUP_FROM_T  MAXIMO.WORKORDER.DESCRIPTION%TYPE :=NULL;
   DELIVER_TO_T   MAXIMO.WORKORDER.DESCRIPTION%TYPE :=NULL;
   LEADCRAFT_T    MAXIMO.WORKORDER.LEADCRAFT%TYPE :=NULL;
   SUPERVISOR_T   MAXIMO.WORKORDER.SUPERVISOR%TYPE :=NULL;
   DESCRIPTION_T  MAXIMO.WORKORDER.DESCRIPTION%TYPE;
   HASLD_T         MAXIMO.WORKORDER.HASLD%TYPE :=0;
   T_LBL_RELEASE_STATUS MAXIMO.WORKORDER.lbl_release_status%TYPE;
   CONTENTUID_T   MAXIMO.LONGDESCRIPTION.CONTENTUID%TYPE;
   LDSEQ_T        MAXIMO.LONGDESCRIPTION.LDKEY%TYPE;

BEGIN

  WONUM_T     := MAXIMO.LBL_WORKREQ_PKG.GET_NEXT_NUMBER('WONUM');


  WOREQ_NUM_T := WORKREQ_TYPE_I || '7-'||
                 LPAD(MAXIMO.LBL_WORKREQ_PKG.GET_NEXT_NUMBER('WOREQ'),6,'0');


  SELECT TO_DATE(TARGCOMPDATE_I,'MM/DD/YYYY'),
         TO_DATE(TARGCOMPDATE_I,'MM/DD/YYYY'),
         SYSDATE
  INTO  TARGSTARTDATE_T, TARGCOMPDATE_T, CURRENTDATE_T
  FROM DUAL;
  -- NOW START INSERTING RECORD INTO THE WORK ORDER RELATED TABLES

  -- PREPARE LOCATION OF THE REQUESTOR
  IF (BUILDING_I IS NOT NULL)  THEN
    LOCATION_T := BUILDING_I;
  END IF;

  IF (BUILDING_I IS NOT NULL AND ROOM_I IS NOT NULL AND LTRIM(ROOM_I) != '--SELECT--') THEN
    LOCATION_T := RTRIM(LTRIM(LOCATION_T || '-' || ROOM_I));
  END IF;

   IF (LOCATION_T IS NOT NULL) THEN
      T_lbl_release_status := LBL_WORKREQ_PKG.GET_RELEASE_LOCATION(LOCATION_T);
   ELSE
     T_lbl_release_status := 'UNKNOWN';
   END IF;

  -- PREPARE LONG DESCRIPTION
  LDTEXT_T :=' ';

  LDTEXT_T :=LDTEXT_T || 'NUMBER OF ITEMS BEING MOVED: '
              || NVL(NUMBER_OF_ITEMS_I,'NOT SPECIFIED') || LDTEXT_DELIMIT_T;

  LDTEXT_T :=LDTEXT_T || 'TYPE OF ITEMS BEING MOVED: '
              || NVL(TYPE_OF_ITEM_I,'NOT SPECIFIED') || LDTEXT_DELIMIT_T;

  LDTEXT_T :=LDTEXT_T || 'APPROXIMATE WEIGHT OF THE ITEMS BEING MOVED: '
              || NVL(ITEM_WEIGHT_I,'NOT SPECIFIED') || LDTEXT_DELIMIT_T;

  PICKUP_FROM_T := NULL;
  DELIVER_TO_T  := NULL;



  IF (NVL(LTRIM(FROM_BUILDING_I),'--SELECT--') != '--SELECT--') THEN
       PICKUP_FROM_T := FROM_BUILDING_I;
  END IF;

  IF  (NVL(LTRIM(FROM_ROOM_I),'--SELECT--') != '--SELECT--') THEN
      PICKUP_FROM_T := FROM_BUILDING_I || '-' || FROM_ROOM_I;
  END IF;

  IF (NVL(LTRIM(TO_BUILDING_I),'--SELECT--') != '--SELECT--') THEN
       DELIVER_TO_T := TO_BUILDING_I;
  END IF;

  IF  (NVL(LTRIM(TO_ROOM_I),'--SELECT--') != '--SELECT--') THEN
      DELIVER_TO_T := TO_BUILDING_I || '-' || TO_ROOM_I;
  END IF;

 LDTEXT_T :=LDTEXT_T || 'PICK UP FROM :'
          || NVL(PICKUP_FROM_T,'NOT SPECIFIED') || LDTEXT_DELIMIT_T;

 LDTEXT_T := LDTEXT_T || 'DELIVER TO  :'
          || NVL(DELIVER_TO_T,'NOT SPECIFIED') || LDTEXT_DELIMIT_T;

  IF (NVL(RECYCLE_PICKUP_I,'N') ='Y') THEN
      LDTEXT_T :=LDTEXT_T || 'RECYCLE PICKUP: YES ' || LDTEXT_DELIMIT_T;
  ELSE
      LDTEXT_T :=LDTEXT_T || 'RECYCLE PICKUP: NO '  || LDTEXT_DELIMIT_T;
  END IF;

  IF (NVL(HAZARDS_I,'Y') ='Y') THEN
      LDTEXT_T :=LDTEXT_T || 'HAZARDS EXIST: YES ' || LDTEXT_DELIMIT_T;
  ELSE
      LDTEXT_T :=LDTEXT_T || 'HAZARDS EXISTS: NO '  || LDTEXT_DELIMIT_T;
  END IF;


  IF (LOCATION_NOTES_I IS NOT NULL) THEN
    LDTEXT_T :=LDTEXT_T || 'LOCATION NOTES: '  || LOCATION_NOTES_I || LDTEXT_DELIMIT_T;
  ELSE
    LDTEXT_T :=LDTEXT_T || 'LOCATION NOTES: NOT SPECIFIED' || LDTEXT_DELIMIT_T;
  END IF;

  LDTEXT_T :=LDTEXT_T || 'DATE NEEDED: ' || TO_CHAR(TARGCOMPDATE_T,'MM/DD/YYYY') || LDTEXT_DELIMIT_T;

  IF (COMMENTS_I IS NOT NULL) THEN
     LDTEXT_T :=LDTEXT_T || 'COMMENTS: ' || COMMENTS_I || LDTEXT_DELIMIT_T;
  END IF;

  LDTEXT_T :=LTRIM(RTRIM(LDTEXT_T));

  LDKEY_T :=NULL;

  SELECT MAXIMO.WORKORDERSEQ.NEXTVAL
  INTO LDKEY_T
  FROM SYS.DUAL;

  IF (LDTEXT_T IS NOT NULL AND LENGTH(LDTEXT_T) > 0)
   THEN
     HASLD_T :=1;
  END IF;

  IF (COMMENTS_I IS NOT NULL) THEN
    LDKEY_T2 :=LDKEY_T;
  END IF;

 -- FIND OUT SUPERVISOR AND LEADCRAFT BASED ON
 -- APPROXIMATE WEIGHT OF THE ITEM


 IF (ITEM_WEIGHT_I NOT IN ('> 250 LBS')) THEN

    SELECT VARVALUE  INTO LEADCRAFT_T
    FROM MAXIMO.LBL_MAXVARS
    WHERE VARNAME='WOREQ_TRANSP_<250_LEADCRAFT';

    SELECT VARVALUE  INTO SUPERVISOR_T
    FROM MAXIMO.LBL_MAXVARS
    WHERE VARNAME='WOREQ_TRANSP_<250_SUPERVISOR';


ELSE

    SELECT VARVALUE  INTO LEADCRAFT_T
    FROM MAXIMO.LBL_MAXVARS
    WHERE VARNAME='WOREQ_TRANSP_>250_LEADCRAFT';


    SELECT VARVALUE  INTO SUPERVISOR_T
    FROM MAXIMO.LBL_MAXVARS
    WHERE VARNAME='WOREQ_TRANSP_>250_SUPERVISOR';

END IF;

  DESCRIPTION_T :=SUBSTR(('MOVE'
          || ' ' || NUMBER_OF_ITEMS_I
          || ' ' || TYPE_OF_ITEM_I
          || ' FROM '
          || NVL(PICKUP_FROM_T,'N/A')
          || ' TO '
          || NVL(DELIVER_TO_T,'N/A')),1, 50) ;

  -- TRIMMED THE COLUMN WO1 BEFORE INSERT (RT# 58753)
  INSERT INTO MAXIMO.WORKORDER
  (ORGID, SITEID, WONUM, STATUS, STATUSDATE,
   DESCRIPTION, CHANGEBY, CHANGEDATE,WORKTYPE, WO4,
   ESTDUR, ESTLABHRS, ESTLABCOST, ESTMATCOST, ESTTOOLCOST,
   ACTLABHRS, ACTLABCOST, ACTMATCOST, ACTTOOLCOST,
   HASCHILDREN, OUTLABCOST, OUTMATCOST, OUTTOOLCOST,
   HISTORYFLAG,
   WO1, WO5, REPORTEDBY, REPORTDATE, PHONE,
   DOWNTIME, CHARGESTORE, GLACCOUNT,
   ESTSERVCOST,ACTSERVCOST,DISABLED,ESTATAPPRLABHRS,
   ESTATAPPRLABCOST,ESTATAPPRMATCOST,ESTATAPPRTOOLCOST,
   ESTATAPPRSERVCOST, HASFOLLOWUPWORK ,
   ISTASK, LOCATION, HASLD,
   SUPERVISOR, LEADCRAFT,
   TARGSTARTDATE, TARGCOMPDATE,
   -- MXES
   WORKORDERID, WOCLASS, WOACCEPTSCHARGES,
   --PERFORMMOVETO, -- NOT REQD IN 7.5
   PARENTCHGSSTATUS,
   LANGCODE, INTERRUPTIBLE,
   WOGROUP,
   COMMODITYGROUP, -- ADDED ON 5/12
   LBL_RELEASE_STATUS,  -- ADDED BY PANKAJ ON 2/28/11
   LBL_DESTGROUP, --  ADDED BY PANKAJ ON 1/17/12
   LBL_WCD_STATUS,  -- ADDED BY PANKAJ ON 1/17/12
   CALCPRIORITY,    -- ADDED BY PANKAJ ON 1/15/13
   ASSETLOCPRIORITY,
    WOISSWAP ,  --   REVISIONS FOR REL 7.5
   LASTCOPYLINKDATE,
   FLOWCONTROLLED,
   IGNOREDIAVAIL,
   PLUSCLOOP,
   SUSPENDFLOW,
   FLOWACTIONASSIST,
   AOS ,
   NESTEDJPINPROCESS,
   AMS,
   REQASSTDWNTIME,
   ACTINTLABCOST,
   PLUSCISMOBILE,
   APPTREQUIRED,
   INCTASKSINSCHED,
   ACTINTLABHRS,
   IGNORESRMAVAIL ,
   LMS,
   NEWCHILDCLASS,
   LOS,
   REPAIRLOCFLAG,
   LBL_WALKDOWN,
   LBL_CODECOMPLIANCE,
   LBL_ISPMCRITICAL,
   DJPAPPLIED -- 7.6.1.1
   )
VALUES
  ('LBNL','FAC',WONUM_T, 'WAPPR', CURRENTDATE_T,
   DESCRIPTION_T, CHANGEBY_I, CURRENTDATE_T, 'TM', WOREQ_NUM_T,
   0,0,0,0,0,
   0,0,0,0,
   0, 0,0,0,
   0,
    LTRIM(RTRIM(WO1_I)), '3',REPORTEDBY_I, CURRENTDATE_T, PHONE_I,
    0,0,RTRIM(LTRIM(GLACCOUNT_I)),
    0,0,0,0,
    0,0,0,
    0,0,
    0,LOCATION_T, HASLD_T,
    SUPERVISOR_T, LEADCRAFT_T ,
    TARGSTARTDATE_T, TARGCOMPDATE_T,
    LDKEY_T, 'WORKORDER', 1,
    -- 0, -- PERFORMMOVETO, -- NOT REQD IN 7.5
    0,  --  CHANGED ON 7/18/17
   'EN',0,
   WONUM_T,  -- PANKAJ ON 3/08/10
   COMMGROUP_RES_T, --ADDED ON 5/12/10
   T_LBL_RELEASE_STATUS,  -- ADDED BY PANKAJ ON 2/28/11
   'OTH', -- DEST GROUP
   'NOT REQUIRED', -- WCD_TATUS
   LBL_WORKREQ_PKG.get_loc_priority(LOCATION_T),
   LBL_WORKREQ_PKG.get_loc_priority(LOCATION_T),
   0,             --WOISSWAP                 --- MAXIMO 7.5
   SYSDATE,       --LASTCOPYLINKDATE
   0,             -- FLOWCONTROLLED
   0,             --IGNOREDIAVAIL
   0,             --PLUSCLOOP
   0,             --SUSPENDFLOW
   0,             --FLOWACTIONASSIST
   0,             --AOS
   0,             -- NESTEDJPINPROCESS
   0,             -- AMS
   0,             -- REQASSTDWNTIME
   0,             -- ACTINTLABCOST
   0,             --PLUSCISMOBILE
   0,             --APPTREQUIRED
   0,             --INCTASKSINSCHED
   0,             --ACTINTLABHRS
   1,             --IGNORESRMAVAIL
   0,             --LMS
   'WORKORDER',    --NEWCHILDCLASS
   0,               --LOS
   0,               -- REPAIRLOCFLAG
   0,
   0, -- code compliance
   0,
   'NO' -- pm critical
   );

    IF (HASLD_T=1) THEN

      -- REQUIRED FOR RELEASE 7.5
      SELECT MAXIMO.LONGDESCRIPTIONSEQ.NEXTVAL
      INTO   LDSEQ_T
      FROM DUAL;

      CONTENTUID_T :='BMXAA' || LTRIM(TO_CHAR(LDSEQ_T));
       INSERT INTO MAXIMO.LONGDESCRIPTION
       (LDKEY, LDOWNERTABLE, LDOWNERCOL, LDTEXT, LONGDESCRIPTION.LONGDESCRIPTIONID,
       LONGDESCRIPTION.LANGCODE, LONGDESCRIPTION.contentuid)
        VALUES (LDKEY_T, 'WORKORDER','DESCRIPTION',
        TO_CLOB(LDTEXT_T),LDSEQ_T,
        'EN', CONTENTUID_T);
    END IF;

    INSERT INTO MAXIMO.WOSTATUS
    (WONUM, STATUS, CHANGEDATE, CHANGEBY,
     ORGID, SITEID, WOSTATUS.WOSTATUSID, GLACCOUNT)
     VALUES
     (WONUM_T, 'WAPPR',CURRENTDATE_T, CHANGEBY_I,
     'LBNL','FAC', MAXIMO.WOSTATUSSEQ.NEXTVAL,  RTRIM(LTRIM(GLACCOUNT_I)));

    -- ADDED BY PANKAJ ON 5/19/09 AS PER RT#66016

     INSERT INTO MAXIMO.WOANCESTOR WOANCESTOR
     (ORGID,SITEID, WONUM, ANCESTOR,
      HIERARCHYLEVELS, WOANCESTOR.WOANCESTORID) VALUES
      ('LBNL','FAC',WONUM_T,WONUM_T,
      0, WOANCESTORSEQ.NEXTVAL);

      -- ADDED BY PANKAJ 7/8/09 FOR MXES

   INSERT INTO MAXIMO.WORKVIEW(
   APP, CLASS, DESCRIPTION, HISTORYFLAG, ISTASK, ORGID,
   PRIORITY, RECORDKEY, REPORTDATE, REPORTEDBY,
   REPORTEDBYNAME,
   SITEID, STATUS, WORKVIEWID)
   VALUES
   ('WOTRACK','WORKORDER', DESCRIPTION_I, 0, 0, 'LBNL',
      LBL_WORKREQ_PKG.get_loc_priority(LOCATION_T), WONUM_T, CURRENTDATE_T, REPORTEDBY_I,
     MAXIMO.LBL_MAXIMO_PKG.GET_EMPLOYEE_NAME(REPORTEDBY_I),
     'FAC','WAPPR', WORKVIEWSEQ.NEXTVAL);

     INSERT INTO BATCH_MAXIMO.LBL_WORKREQ(
     WORKREQ_NUM, WORKREQ_TYPE,REPORTEDBY, PHONE,
     WO1, BUILDING, ROOM,LOCATION_NOTES,
     RECYCLE_PICKUP,GLACCOUNT,DESCRIPTION,LDKEY,
     HAZARDS,TARGSTARTDATE, TARGCOMPDATE ,
     NUMBER_OF_ITEMS, TYPE_OF_ITEM, ITEM_WEIGHT,
     FROM_BUILDING, FROM_ROOM, TO_BUILDING, TO_ROOM,
     CHANGEBY,CHANGEDATE, WONUM,   CLEANUP,
     DATEFIRSTINSERTED,
     ORGID,SITEID, COMMODITYGROUP) VALUES
     (WOREQ_NUM_T,WORKREQ_TYPE_I, REPORTEDBY_I, PHONE_I,
      LTRIM(RTRIM(WO1_I)),  BUILDING_I, ROOM_I,LOCATION_NOTES_I,
      RECYCLE_PICKUP_I,RTRIM(LTRIM(GLACCOUNT_I)),DESCRIPTION_T,LDKEY_T2,
      HAZARDS_I,TARGCOMPDATE_T, TARGCOMPDATE_T,
      NUMBER_OF_ITEMS_I, TYPE_OF_ITEM_I,ITEM_WEIGHT_I,
      FROM_BUILDING_I, FROM_ROOM_I, TO_BUILDING_I, TO_ROOM_I,
      CHANGEBY_I, CURRENTDATE_T, WONUM_T, CLEANUP_I,
      SYSDATE,
      'LBNL','FAC', COMMGROUP_RES_T); -- ADDED ON 5/12/10

     IF (COMMENTS_I IS NOT NULL) THEN
        INSERT INTO BATCH_MAXIMO.LBL_LONGDESCRIPTION
        (LDKEY,LDOWNERTABLE, LDOWNERCOL,LDTEXT)
        VALUES
        (LDKEY_T2,'LBL_WORKREQ','DESCRIPTION',TO_CLOB(COMMENTS_I));
    END IF;

     --  REVISIONS FOR MAXIMO 7.5
        INSERT INTO WOSERVICEADDRESS (ADDRESSISCHANGED,
        SITEID,
        WOSERVICEADDRESSID,
        LANGCODE,
        WONUM,
        HASLD,
        ORGID) values
        (0,
         'FAC',
         WOSERVICEADDRESSSEQ.NEXTVAL,
         'EN',
          WONUM_T,
          0,
         'LBNL');

        IF (LOCATION_T IS NOT NULL) THEN
          INSERT INTO MULTIASSETLOCCI
          (RECORDKEY,
           PROGRESS,
          LOCATION,
          REPLACEMENTSITE,
          LANGCODE,
          HASLD,
          ISPRIMARY,
          WORKORGID,
          MULTIID,
          PERFORMMOVETO,
          WORKSITEID,
          ORGID,
          SITEID,
          RECORDCLASS,
          TOTALWORKUNITS
          ) VALUES
          (WONUM_T,
           0,
           LOCATION_T,
           'FAC',
           'EN',
           0,
           1,
           'LBNL',
           MULTIASSETLOCCISEQ.NEXTVAL,
           0,
           'FAC',
           'LBNL',
           'FAC',
           'WORKORDER',
           1);
       END IF;



   RETURN WONUM_T;

END;

--****************************************************************************
--* FUNCTION TO INSERT PEOPLE MOVE WORK REQUEST TO THE WORKORDER RELATED TABLES.
--  AFTER SUCCESSFUL INSERT, IT RETURNS WORK ORDER NUMBER
--****************************************************************************
FUNCTION INSERT_PEOPLE_WORKREQ(
  WORKREQ_TYPE_I     IN BATCH_MAXIMO.LBL_WORKREQ.WORKREQ_TYPE%TYPE,
  REPORTEDBY_I       IN BATCH_MAXIMO.LBL_WORKREQ.REPORTEDBY%TYPE,
  PHONE_I            IN BATCH_MAXIMO.LBL_WORKREQ.PHONE%TYPE,
  WO1_I              IN BATCH_MAXIMO.LBL_WORKREQ.WO1%TYPE,
  BUILDING_I         IN MAXIMO.LOCATIONS.LOCATION%TYPE,
  ROOM_I             IN MAXIMO.LOCATIONS.LOCATION%TYPE,
  TO_BUILDING_I      IN MAXIMO.LOCATIONS.LOCATION%TYPE,
  TO_ROOM_I          IN MAXIMO.LOCATIONS.LOCATION%TYPE,
  LOCATION_NOTES_I   IN BATCH_MAXIMO.LBL_WORKREQ.LOCATION_NOTES%TYPE,
  HAZARDS_I          IN BATCH_MAXIMO.LBL_WORKREQ.HAZARDS%TYPE,
  GLACCOUNT_I        IN BATCH_MAXIMO.LBL_WORKREQ.GLACCOUNT%TYPE,
  DESCRIPTION_I      IN BATCH_MAXIMO.LBL_WORKREQ.DESCRIPTION%TYPE,
  COMMENTS_I         IN VARCHAR2,
  TARGCOMPDATE_I     IN VARCHAR2,
  CHANGEBY_I         IN BATCH_MAXIMO.LBL_WORKREQ.CHANGEBY%TYPE)
RETURN MAXIMO.WORKORDER.WONUM%TYPE

IS


   WONUM_T   MAXIMO.WORKORDER.WONUM%TYPE;
   LDKEY_T   MAXIMO.LONGDESCRIPTION.LDKEY%TYPE;
   LDKEY_T2  MAXIMO.LONGDESCRIPTION.LDKEY%TYPE := NULL;
   LOCATION_T MAXIMO.WORKORDER.LOCATION%TYPE;
   WOREQ_NUM_T BATCH_MAXIMO.LBL_WORKREQ.WORKREQ_NUM%TYPE;
   LDTEXT_T  MAXIMO.LONGDESCRIPTION.LDTEXT%TYPE;
   TARGSTARTDATE_T MAXIMO.WORKORDER.TARGSTARTDATE%TYPE;
   CURRENTDATE_T   MAXIMO.WORKORDER.TARGSTARTDATE%TYPE;
   TARGCOMPDATE_T  MAXIMO.WORKORDER.TARGCOMPDATE%TYPE;
   LEADCRAFT_T    MAXIMO.WORKORDER.LEADCRAFT%TYPE :=NULL;
   SUPERVISOR_T   MAXIMO.WORKORDER.SUPERVISOR%TYPE :=NULL;
   DESCRIPTION_T  MAXIMO.WORKORDER.DESCRIPTION%TYPE :=NULL;
   HASLD_T        MAXIMO.WORKORDER.HASLD%TYPE :=0;
   T_LBL_RELEASE_STATUS MAXIMO.WORKORDER.lbl_release_status%TYPE;
   CONTENTUID_T   MAXIMO.LONGDESCRIPTION.CONTENTUID%TYPE;
   LDSEQ_T        MAXIMO.LONGDESCRIPTION.LDKEY%TYPE;


BEGIN

  WONUM_T     := MAXIMO.LBL_WORKREQ_PKG.GET_NEXT_NUMBER('WONUM');
  WOREQ_NUM_T := WORKREQ_TYPE_I || '7-'||
                 LPAD(MAXIMO.LBL_WORKREQ_PKG.GET_NEXT_NUMBER('WOREQ'),6,'0');

  SELECT TO_DATE(TARGCOMPDATE_I,'MM/DD/YYYY'),
         TO_DATE(TARGCOMPDATE_I,'MM/DD/YYYY'),
         SYSDATE
  INTO  TARGSTARTDATE_T, TARGCOMPDATE_T, CURRENTDATE_T
  FROM DUAL;

  -- NOW START INSERTING R
  -- PREPARE LOCATION ECORD INTO THE WORK ORDER RELATED TABLES

  IF (BUILDING_I IS NOT NULL AND LTRIM(BUILDING_I) !='--SELECT--' ) THEN
    LOCATION_T := BUILDING_I;
  END IF;


  IF (BUILDING_I IS NOT NULL AND LTRIM(BUILDING_I) !='--SELECT--' AND
      ROOM_I     IS NOT NULL AND LTRIM(ROOM_I)     !='--SELECT--' ) THEN
    LOCATION_T := RTRIM(LTRIM(LOCATION_T || '-' || ROOM_I));
  END IF;

   IF (LOCATION_T IS NOT NULL) THEN
      T_lbl_release_status := LBL_WORKREQ_PKG.GET_RELEASE_LOCATION(LOCATION_T);
   ELSE
     T_lbl_release_status := 'UNKNOWN';
   END IF;


  -- PREPARE LONG DESCRIPTION
  LDTEXT_T :=' ';

  LDTEXT_T := LDTEXT_T || 'FROM BUILDING: ' || BUILDING_I ||LDTEXT_DELIMIT_T;
  LDTEXT_T := LDTEXT_T || 'FROM ROOM: '     || ROOM_I ||LDTEXT_DELIMIT_T;
  LDTEXT_T := LDTEXT_T || 'TO BUILDING: '   || TO_BUILDING_I ||LDTEXT_DELIMIT_T;
  LDTEXT_T := LDTEXT_T || 'TO ROOM: '       || TO_ROOM_I ||LDTEXT_DELIMIT_T;

  IF LOCATION_NOTES_I IS NOT NULL
   THEN
    LDTEXT_T := LDTEXT_T || 'LOCATION NOTES: ' || LOCATION_NOTES_I ||LDTEXT_DELIMIT_T;
  END IF;

  IF (NVL(HAZARDS_I,'Y') ='Y') THEN
      LDTEXT_T :=LDTEXT_T || 'HAZARDS EXIST: YES ' || LDTEXT_DELIMIT_T;
  ELSE
      LDTEXT_T :=LDTEXT_T || 'HAZARDS EXISTS: NO '  || LDTEXT_DELIMIT_T;
  END IF;

 LDTEXT_T :=LDTEXT_T || 'DATE NEEDED: ' || TO_CHAR(TARGCOMPDATE_T,'MM/DD/YYYY') || LDTEXT_DELIMIT_T;

  IF (COMMENTS_I IS NOT NULL) THEN
     LDTEXT_T :=LDTEXT_T || 'COMMENTS: ' || COMMENTS_I || LDTEXT_DELIMIT_T;
  END IF;

  LDTEXT_T :=LTRIM(RTRIM(LDTEXT_T));

  SELECT MAXIMO.WORKORDERSEQ.NEXTVAL
  INTO LDKEY_T
  FROM SYS.DUAL;

  IF (LDTEXT_T IS NOT NULL AND LENGTH(LDTEXT_T) > 0)
   THEN
     HASLD_T :=1;
  END IF;

  IF (COMMENTS_I IS NOT NULL) THEN
    LDKEY_T2 :=LDKEY_T;
  END IF;

   SELECT VARVALUE  INTO LEADCRAFT_T
    FROM MAXIMO.LBL_MAXVARS
    WHERE VARNAME='WOREQ_PEOPLE_LEADCRAFT';


    SELECT VARVALUE  INTO SUPERVISOR_T
    FROM MAXIMO.LBL_MAXVARS
    WHERE VARNAME='WOREQ_PEOPLE_SUPERVISOR';

   -- PREPARE SHORT DESCRIPTION
   DESCRIPTION_T :='PEOPLE MOVE REQUEST FROM  ' || LOCATION_T;

   IF (TO_BUILDING_I IS NOT NULL AND LTRIM(TO_BUILDING_I) !='--SELECT--' ) THEN
      DESCRIPTION_T := DESCRIPTION_T || ' TO ' || TO_BUILDING_I;
   END IF;

  IF (TO_BUILDING_I IS NOT NULL AND LTRIM(TO_BUILDING_I) !='--SELECT--' AND
      TO_ROOM_I     IS NOT NULL AND LTRIM(TO_ROOM_I)     !='--SELECT--' ) THEN
      DESCRIPTION_T := DESCRIPTION_T || '-' || TO_ROOM_I;
  END IF;


  INSERT INTO MAXIMO.WORKORDER
  (ORGID, SITEID, WONUM, STATUS, STATUSDATE,
   DESCRIPTION, CHANGEBY, CHANGEDATE,
   -- WORKTYPE,  --  NOT TO BE PRE-FILLED AS PER HEATHER
   WO4,
   ESTDUR, ESTLABHRS, ESTLABCOST, ESTMATCOST, ESTTOOLCOST,
   ACTLABHRS, ACTLABCOST, ACTMATCOST, ACTTOOLCOST,
   HASCHILDREN, OUTLABCOST, OUTMATCOST, OUTTOOLCOST,
   HISTORYFLAG,
   WO1, WO5, REPORTEDBY, REPORTDATE, PHONE,
   DOWNTIME, CHARGESTORE, GLACCOUNT,
   ESTSERVCOST,ACTSERVCOST,DISABLED,ESTATAPPRLABHRS,
   ESTATAPPRLABCOST,ESTATAPPRMATCOST,ESTATAPPRTOOLCOST,
   ESTATAPPRSERVCOST, HASFOLLOWUPWORK,
   ISTASK, LOCATION, HASLD,
   LEADCRAFT, SUPERVISOR,
   TARGSTARTDATE, TARGCOMPDATE,
   -- MXES
  WORKORDERID, WOCLASS, WOACCEPTSCHARGES,
  -- PERFORMMOVETO,  -- NOT REQD IN MAXIMO 7.5
  PARENTCHGSSTATUS,
  LANGCODE, INTERRUPTIBLE,
  WOGROUP,
  COMMODITYGROUP,  -- ADDED ON 5/12/10
  LBL_RELEASE_STATUS, -- ADDED BY PANKAJ ON 2/28/11
  LBL_DESTGROUP, --  ADDED BY PANKAJ ON 1/17/12
  LBL_WCD_STATUS,  -- ADDED BY PANKAJ ON 1/17/12
  CALCPRIORITY,
  ASSETLOCPRIORITY,
  WOISSWAP ,  --   REVISIONS FOR REL 7.5
  LASTCOPYLINKDATE,
  FLOWCONTROLLED,
  IGNOREDIAVAIL,
  PLUSCLOOP,
  SUSPENDFLOW,
  FLOWACTIONASSIST,
  AOS ,
  NESTEDJPINPROCESS,
  AMS,
  REQASSTDWNTIME,
  ACTINTLABCOST,
  PLUSCISMOBILE,
  APPTREQUIRED,
  INCTASKSINSCHED,
  ACTINTLABHRS,
  IGNORESRMAVAIL ,
  LMS,
  NEWCHILDCLASS,
  LOS,
  REPAIRLOCFLAG,
  LBL_WALKDOWN,
  LBL_CODECOMPLIANCE,
  LBL_ISPMCRITICAL,
  DJPAPPLIED -- 7.6.1.1
   )
   VALUES
  ('LBNL','FAC',WONUM_T, 'WAPPR', CURRENTDATE_T,
   DESCRIPTION_T, CHANGEBY_I, CURRENTDATE_T,
   -- 'TM', --  NOT TO BE PRE-FILLED AS PER HEATHER
   WOREQ_NUM_T,
   0,0,0,0,0,
   0,0,0,0,
   0, 0,0,0,
   0,
    LTRIM(RTRIM(WO1_I)), '3',REPORTEDBY_I, CURRENTDATE_T, PHONE_I,
    0,0,RTRIM(LTRIM(GLACCOUNT_I)),
    0,0,0,0,
    0,0,0,
    0,0,
    0,LOCATION_T, HASLD_T,
    LEADCRAFT_T, SUPERVISOR_T ,
    TARGSTARTDATE_T, TARGCOMPDATE_T,
    LDKEY_T, 'WORKORDER', 1,
    --0,  -- PERFORMMOVETO,  -- NOT REQD IN MAXIMO 7.5
    0,  -- CHANGED ON 7/18/17
    'EN',0,
    WONUM_T,  -- PANKAJ ON 3/8/10
    COMMGROUP_RES_T, -- PANKAJ ON 5/12/10
    T_LBL_RELEASE_STATUS, -- ADDED BY PANKAJ ON 2/28/11
    'OTH', -- DEST GROUP
    'NOT REQUIRED',
     LBL_WORKREQ_PKG.get_loc_priority(LOCATION_T),
     LBL_WORKREQ_PKG.get_loc_priority(LOCATION_T),
      0,             --WOISSWAP
     SYSDATE,       --LASTCOPYLINKDATE
     0,             -- FLOWCONTROLLED
     0,             --IGNOREDIAVAIL
     0,             --PLUSCLOOP
     0,             --SUSPENDFLOW
     0,             --FLOWACTIONASSIST
     0,             --AOS
     0,             -- NESTEDJPINPROCESS
     0,             -- AMS
     0,             -- REQASSTDWNTIME
     0,             -- ACTINTLABCOST
     0,             --PLUSCISMOBILE
     0,             --APPTREQUIRED
     0,             --INCTASKSINSCHED
     0,             --ACTINTLABHRS
     1,             --IGNORESRMAVAIL
     0,             --LMS
     'WORKORDER',    --  NEWCHILDCLASS
     0, --  LOS
     0,              -- REPAIRLOCFLAG
     0,
     0,  -- code compliance
     0, -- pm critical
     'NO'
    );

    IF (HASLD_T =1)THEN

       -- REQUIRED FOR RELEASE 7.5
      SELECT MAXIMO.LONGDESCRIPTIONSEQ.NEXTVAL
      INTO   LDSEQ_T
      FROM DUAL;

      CONTENTUID_T :='BMXAA' || LTRIM(TO_CHAR(LDSEQ_T));


       INSERT INTO MAXIMO.LONGDESCRIPTION
       (LDKEY, LDOWNERTABLE, LDOWNERCOL, LDTEXT,
        LONGDESCRIPTION.LANGCODE, LONGDESCRIPTION.LONGDESCRIPTIONID,
        LONGDESCRIPTION.contentuid)
        VALUES (LDKEY_T, 'WORKORDER','DESCRIPTION',
        TO_CLOB(LDTEXT_T),
        'EN',LDSEQ_T,
        CONTENTUID_T );
    END IF;

    INSERT INTO MAXIMO.WOSTATUS
    (WONUM, STATUS, CHANGEDATE, CHANGEBY,
     ORGID, SITEID, WOSTATUS.WOSTATUSID, GLACCOUNT)
     VALUES
     (WONUM_T, 'WAPPR',CURRENTDATE_T, CHANGEBY_I,
     'LBNL','FAC', MAXIMO.WOSTATUSSEQ.NEXTVAL, GLACCOUNT_I);

     -- ADDED BY PANKAJ ON 5/19/09 AS PER RT#66016

     INSERT INTO MAXIMO.WOANCESTOR WOANCESTOR
     (ORGID,SITEID, WONUM, ANCESTOR,
      HIERARCHYLEVELS, WOANCESTOR.WOANCESTORID) VALUES
      ('LBNL','FAC',WONUM_T,WONUM_T,
      0, WOANCESTORSEQ.NEXTVAL);

      -- ADDED BY PANKAJ 7/8/09 FOR MXES

   INSERT INTO MAXIMO.WORKVIEW(
   APP, CLASS, DESCRIPTION, HISTORYFLAG, ISTASK, ORGID,
   PRIORITY, RECORDKEY, REPORTDATE, REPORTEDBY,
   REPORTEDBYNAME,
   SITEID, STATUS, WORKVIEWID)
   VALUES
   ('WOTRACK','WORKORDER', DESCRIPTION_I, 0, 0, 'LBNL',
     LBL_WORKREQ_PKG.get_loc_priority(LOCATION_T), WONUM_T, CURRENTDATE_T, REPORTEDBY_I,
     MAXIMO.LBL_MAXIMO_PKG.GET_EMPLOYEE_NAME(REPORTEDBY_I),
     'FAC','WAPPR', WORKVIEWSEQ.NEXTVAL);

     INSERT INTO BATCH_MAXIMO.LBL_WORKREQ(
     WORKREQ_NUM, WORKREQ_TYPE,REPORTEDBY, PHONE,
     WO1, BUILDING, ROOM,
     FROM_BUILDING, FROM_ROOM, TO_BUILDING, TO_ROOM,
     LOCATION_NOTES, HAZARDS,
     GLACCOUNT,DESCRIPTION,LDKEY,
     TARGSTARTDATE, TARGCOMPDATE ,
     CHANGEBY,CHANGEDATE, WONUM,
     DATEFIRSTINSERTED,
     ORGID,SITEID, COMMODITYGROUP) VALUES
     (WOREQ_NUM_T,WORKREQ_TYPE_I, REPORTEDBY_I, PHONE_I,
      LTRIM(RTRIM(WO1_I)),  BUILDING_I, ROOM_I,
      BUILDING_I, ROOM_I, TO_BUILDING_I, TO_ROOM_I,
      LOCATION_NOTES_I, HAZARDS_I,
      GLACCOUNT_I,DESCRIPTION_T,LDKEY_T2,
      TARGCOMPDATE_T, TARGCOMPDATE_T,
      CHANGEBY_I, CURRENTDATE_T, WONUM_T,
      SYSDATE,
      'LBNL','FAC',COMMGROUP_RES_T); -- ADDED ON 5/12/10

     IF (COMMENTS_I IS NOT NULL) THEN
        INSERT INTO BATCH_MAXIMO.LBL_LONGDESCRIPTION
        (LDKEY,LDOWNERTABLE, LDOWNERCOL,LDTEXT)
        VALUES
        (LDKEY_T2,'LBL_WORKREQ','DESCRIPTION',TO_CLOB(COMMENTS_I));
    END IF;

          --  REVISIONS FOR MAXIMO 7.5
        INSERT INTO WOSERVICEADDRESS (ADDRESSISCHANGED,
        SITEID,
        WOSERVICEADDRESSID,
        LANGCODE,
        WONUM,
        HASLD,
        ORGID) values
        (0,
         'FAC',
         WOSERVICEADDRESSSEQ.NEXTVAL,
         'EN',
          WONUM_T,
          0,
         'LBNL');

     IF (LOCATION_T IS NOT NULL) THEN
          INSERT INTO MULTIASSETLOCCI
          (RECORDKEY,
           PROGRESS,
          LOCATION,
          REPLACEMENTSITE,
          LANGCODE,
          HASLD,
          ISPRIMARY,
          WORKORGID,
          MULTIID,
          PERFORMMOVETO,
          WORKSITEID,
          ORGID,
          SITEID,
          RECORDCLASS,
          TOTALWORKUNITS
          ) VALUES
          (WONUM_T,
           0,
           LOCATION_T,
           'FAC',
           'EN',
           0,
           1,
           'LBNL',
           MULTIASSETLOCCISEQ.NEXTVAL,
           0,
           'FAC',
           'LBNL',
           'FAC',
           'WORKORDER',
           1);
       END IF;




   RETURN WONUM_T;

END;

--****************************************************************************
-- FUNCTION TO INSERT CONF ROOM WORK REQUEST TO THE WORKORDER RELATED TABLES.
-- AFTER SUCCESSFUL INSERT, IT RETURNS WORK ORDER NUMBER
--****************************************************************************
FUNCTION INSERT_CONF_WORKREQ(
  WORKREQ_TYPE_I     IN BATCH_MAXIMO.LBL_WORKREQ.WORKREQ_TYPE%TYPE,
  REPORTEDBY_I       IN BATCH_MAXIMO.LBL_WORKREQ.REPORTEDBY%TYPE,
  PHONE_I            IN BATCH_MAXIMO.LBL_WORKREQ.PHONE%TYPE,
  WO1_I              IN BATCH_MAXIMO.LBL_WORKREQ.WO1%TYPE,
  BUILDING_I         IN MAXIMO.LOCATIONS.LOCATION%TYPE,
  ROOM_I             IN MAXIMO.LOCATIONS.LOCATION%TYPE,
  GLACCOUNT_I        IN BATCH_MAXIMO.LBL_WORKREQ.GLACCOUNT%TYPE,
  DESCRIPTION_I      IN BATCH_MAXIMO.LBL_WORKREQ.DESCRIPTION%TYPE,
  COMMENTS_I         IN VARCHAR2,
  TARGSTARTDATE_I    IN VARCHAR2,
  TARGSTARTTIME_I    IN VARCHAR2,
  TARGCOMPDATE_I     IN VARCHAR2,
  TARGCOMPTIME_I     IN VARCHAR2,
  CONF_BUILDING_I    IN BATCH_MAXIMO.LBL_WORKREQ.CONF_BUILDING%TYPE,
  CONF_ROOM_NUMBER_I IN BATCH_MAXIMO.LBL_WORKREQ.CONF_ROOM_NUMBER%TYPE,
  NUMBER_OF_TABLES_I IN BATCH_MAXIMO.LBL_WORKREQ.NUMBER_OF_TABLES%TYPE,
  NUMBER_OF_CHAIRS_I IN BATCH_MAXIMO.LBL_WORKREQ.NUMBER_OF_CHAIRS%TYPE,
  CONF_ROOM_OPTION_I IN BATCH_MAXIMO.LBL_WORKREQ.CONF_ROOM_OPTION%TYPE,
  TABLES_CHAIRS_REQD_I IN BATCH_MAXIMO.LBL_WORKREQ.TABLES_CHAIRS_REQD%TYPE,
  CHANGEBY_I         IN BATCH_MAXIMO.LBL_WORKREQ.CHANGEBY%TYPE)
RETURN MAXIMO.WORKORDER.WONUM%TYPE

IS


   WONUM_T   MAXIMO.WORKORDER.WONUM%TYPE;
   LDKEY_T   MAXIMO.LONGDESCRIPTION.LDKEY%TYPE;
   LDKEY_T2  MAXIMO.LONGDESCRIPTION.LDKEY%TYPE := NULL;
   LOCATION_T MAXIMO.WORKORDER.LOCATION%TYPE;
   WOREQ_NUM_T BATCH_MAXIMO.LBL_WORKREQ.WORKREQ_NUM%TYPE;
   LDTEXT_T  MAXIMO.LONGDESCRIPTION.LDTEXT%TYPE;
   TARGSTARTDATE_T MAXIMO.WORKORDER.TARGSTARTDATE%TYPE;
   TARGCOMPDATE_T  MAXIMO.WORKORDER.TARGCOMPDATE%TYPE;
   CURRENTDATE_T   MAXIMO.WORKORDER.TARGSTARTDATE%TYPE;
   LEADCRAFT_T     MAXIMO.WORKORDER.LEADCRAFT%TYPE :=NULL;
   SUPERVISOR_T    MAXIMO.WORKORDER.SUPERVISOR%TYPE :=NULL;
   SELECTLIST1_T   MAXIMO.MAXVARS.VARVALUE%TYPE;
   SELECTLIST2_T   MAXIMO.MAXVARS.VARVALUE%TYPE;
   SELECTLIST3_T   MAXIMO.MAXVARS.VARVALUE%TYPE;
   DESCRIPTION_T   MAXIMO.WORKORDER.DESCRIPTION%TYPE;
   HASLD_T         MAXIMO.WORKORDER.HASLD%TYPE :=0;
   T_LBL_RELEASE_STATUS MAXIMO.WORKORDER.LBL_RELEASE_STATUS%TYPE;
   CONTENTUID_T   MAXIMO.LONGDESCRIPTION.CONTENTUID%TYPE;
   LDSEQ_T        MAXIMO.LONGDESCRIPTION.LDKEY%TYPE;

BEGIN

  WONUM_T     := MAXIMO.LBL_WORKREQ_PKG.GET_NEXT_NUMBER('WONUM');
  WOREQ_NUM_T := WORKREQ_TYPE_I || '-'||
                 LPAD(MAXIMO.LBL_WORKREQ_PKG.GET_NEXT_NUMBER('WOREQ'),6,'0');

  -- PREPARE TARGET START AND TARGET COMPLETE DATE BASED ON
  -- TIME COMPONENTS

  IF (TARGSTARTTIME_I IS NOT NULL AND LENGTH(TARGSTARTTIME_I)>0)
   THEN
      SELECTLIST1_T := ' TO_DATE(' || '''' || TARGSTARTDATE_I || ' ' || TARGSTARTTIME_I
                      || '''' || ',' || '''' || 'MM/DD/YYYY HH:MI AM' || '''' ||  ')';
  ELSE
      SELECTLIST1_T := ' TO_DATE(' || '''' || TARGSTARTDATE_I ||
                       '''' ||  ','  || '''' || 'MM/DD/YYYY' || '''' || ')';
  END IF;

  IF (TARGCOMPTIME_I IS NOT NULL AND LENGTH(TARGCOMPTIME_I)>0)
   THEN
      SELECTLIST2_T := ' TO_DATE(' || '''' || TARGCOMPDATE_I ||
                       ' ' || TARGCOMPTIME_I || ''''||
                       ',' || '''' || 'MM/DD/YYYY HH:MI AM' || '''' ||
                       ')';
  ELSE
      SELECTLIST2_T := ' TO_DATE(' || '''' || TARGCOMPDATE_I ||
                       '''' ||  ','  || '''' || 'MM/DD/YYYY' || '''' || ')';
  END IF;


  SELECTLIST3_T   :=' SELECT ' || SELECTLIST1_T || ' , ' || SELECTLIST2_T ;
  SELECTLIST3_T   := SELECTLIST3_T  || ' FROM DUAL';

  EXECUTE IMMEDIATE SELECTLIST3_T INTO TARGSTARTDATE_T, TARGCOMPDATE_T;

  SELECT SYSDATE
  INTO CURRENTDATE_T
  FROM DUAL;


  -- NOW START INSERTING INTO TABLES
  -- PREPARE LOCATION ECORD INTO THE WORK ORDER RELATED TABLES

  IF (CONF_BUILDING_I IS NOT NULL AND LTRIM(CONF_BUILDING_I) !='--SELECT--' ) THEN
    LOCATION_T := CONF_BUILDING_I;
  END IF;

  IF (CONF_BUILDING_I IS NOT NULL     AND LTRIM(CONF_BUILDING_I) !='--SELECT--' AND
      CONF_ROOM_NUMBER_I  IS NOT NULL AND LTRIM(CONF_ROOM_NUMBER_I)  !='--SELECT--' ) THEN
    LOCATION_T := RTRIM(LTRIM(LOCATION_T || '-' || CONF_ROOM_NUMBER_I));
  END IF;


  IF (LOCATION_T IS NOT NULL) THEN
      T_lbl_release_status := LBL_WORKREQ_PKG.GET_RELEASE_LOCATION(LOCATION_T);
   ELSE
     T_lbl_release_status := 'UNKNOWN';
   END IF;


  -- PREPARE LONG DESCRIPTION
  LDTEXT_T :=' ';

   IF (CONF_BUILDING_I IS NOT NULL) THEN
     LDTEXT_T :=LDTEXT_T || 'CONFERENCE BUILDING: ' || CONF_BUILDING_I || LDTEXT_DELIMIT_T;
  END IF;

  IF (LTRIM(CONF_ROOM_NUMBER_I) !='--SELECT--') THEN
     LDTEXT_T :=LDTEXT_T || 'CONFERENCE ROOM: ' || CONF_ROOM_NUMBER_I || LDTEXT_DELIMIT_T;
  ELSE
     LDTEXT_T :=LDTEXT_T || 'CONFERENCE ROOM: NOT SPECIFIED' || LDTEXT_DELIMIT_T;
  END IF;

  IF (CONF_ROOM_OPTION_I IS NOT NULL) THEN
     LDTEXT_T :=LDTEXT_T || 'CONFERENCE ROOM OPTION: ' || CONF_ROOM_OPTION_I || LDTEXT_DELIMIT_T;
  END IF;

  IF (TABLES_CHAIRS_REQD_I='Y') THEN
     LDTEXT_T :=LDTEXT_T || 'TABLES AND CHAIRS REQUIRED : ' || 'YES' || LDTEXT_DELIMIT_T;
  ELSE
     LDTEXT_T :=LDTEXT_T || 'TABLES AND CHAIRS REQUIRED : ' || 'NO'  || LDTEXT_DELIMIT_T;
  END IF;

  IF (NUMBER_OF_TABLES_I IS NOT NULL) THEN
     LDTEXT_T :=LDTEXT_T || 'NUMBER OF TABLES : ' || NUMBER_OF_TABLES_I || LDTEXT_DELIMIT_T;
  ELSE
     LDTEXT_T :=LDTEXT_T || 'NUMBER OF TABLES : ' || 'NOT SPECIFIED'  || LDTEXT_DELIMIT_T;
  END IF;


  IF (NUMBER_OF_CHAIRS_I IS NOT NULL) THEN
     LDTEXT_T :=LDTEXT_T || 'NUMBER OF CHAIRS : ' || NUMBER_OF_CHAIRS_I || LDTEXT_DELIMIT_T;
  ELSE
     LDTEXT_T :=LDTEXT_T || 'NUMBER OF CHAIRS : ' || 'NOT SPECIFIED'  || LDTEXT_DELIMIT_T;
  END IF;

 IF (TARGSTARTDATE_I IS NOT NULL) THEN
    LDTEXT_T := LDTEXT_T ||'CONFERENCE ROOM SETUP START DATE/TIME: ' ||
                TARGSTARTDATE_I || ' '|| NVL(TARGSTARTTIME_I,' ')
                || LDTEXT_DELIMIT_T;
 END IF;

 IF (TARGCOMPDATE_I IS NOT NULL) THEN
    LDTEXT_T := LDTEXT_T ||  'CONFERENCE ROOM BREAKUP DATE/TIME: ' ||
                TARGCOMPDATE_I || ' '|| NVL(TARGCOMPTIME_I,' ')
                || LDTEXT_DELIMIT_T;
 END IF;

  IF (COMMENTS_I IS NOT NULL) THEN
     LDTEXT_T :=LDTEXT_T || 'COMMENTS: ' || COMMENTS_I || LDTEXT_DELIMIT_T;
  END IF;

  LDTEXT_T :=LTRIM(RTRIM(LDTEXT_T));

  LDKEY_T :=NULL;

  SELECT MAXIMO.WORKORDERSEQ.NEXTVAL
  INTO LDKEY_T
  FROM SYS.DUAL;

  IF (LDTEXT_T IS NOT NULL AND LENGTH(LDTEXT_T) > 0)
   THEN
    HASLD_T :=1;
  END IF;

  IF (COMMENTS_I IS NOT NULL) THEN
    LDKEY_T2 :=LDKEY_T;
  END IF;

  DESCRIPTION_T :='CONFERENCE ROOM SETUP FOR ' || LOCATION_T;


  IF (TABLES_CHAIRS_REQD_I ='Y') THEN

    SELECT VARVALUE  INTO LEADCRAFT_T
    FROM MAXIMO.LBL_MAXVARS
    WHERE VARNAME='WOREQ_CONF_TABLES_LEADCRAFT';


    SELECT VARVALUE  INTO SUPERVISOR_T
    FROM MAXIMO.LBL_MAXVARS
    WHERE VARNAME='WOREQ_CONF_TABLES_SUPERVISOR';

  ELSE
    SELECT VARVALUE  INTO LEADCRAFT_T
    FROM MAXIMO.LBL_MAXVARS
    WHERE VARNAME='WOREQ_CONF_NON_TABLES_LEADCRAFT';

    SELECT VARVALUE  INTO SUPERVISOR_T
    FROM MAXIMO.LBL_MAXVARS
    WHERE VARNAME='WOREQ_CONF_NON_TABLES_SUPERVISOR';

  END IF;


  INSERT INTO MAXIMO.WORKORDER
  (ORGID, SITEID, WONUM, STATUS, STATUSDATE,
   DESCRIPTION, CHANGEBY, CHANGEDATE,
   -- WORKTYPE,  --  NOT TO BE PRE-FILLED AS PER HEATHER
   WO4,
   ESTDUR, ESTLABHRS, ESTLABCOST, ESTMATCOST, ESTTOOLCOST,
   ACTLABHRS, ACTLABCOST, ACTMATCOST, ACTTOOLCOST,
   HASCHILDREN, OUTLABCOST, OUTMATCOST, OUTTOOLCOST,
   HISTORYFLAG,
   WO1, WO5, REPORTEDBY, REPORTDATE, PHONE,
   DOWNTIME, CHARGESTORE, GLACCOUNT,
   ESTSERVCOST,ACTSERVCOST,DISABLED,ESTATAPPRLABHRS,
   ESTATAPPRLABCOST,ESTATAPPRMATCOST,ESTATAPPRTOOLCOST,
   ESTATAPPRSERVCOST, HASFOLLOWUPWORK,
   ISTASK, LOCATION, HASLD,
   LEADCRAFT, SUPERVISOR,
   TARGSTARTDATE, TARGCOMPDATE,
   -- MXES
   WORKORDERID, WOCLASS, WOACCEPTSCHARGES,
   --PERFORMMOVETO,  -- NOT REQD FOR MAXIMO 7.5
   PARENTCHGSSTATUS,
   LANGCODE, INTERRUPTIBLE,
   WOGROUP,
   COMMODITYGROUP, -- ADDED ON 5/12/10
   LBL_RELEASE_STATUS,
   LBL_DESTGROUP, --  ADDED BY PANKAJ ON 1/17/12
   LBL_WCD_STATUS,  -- ADDED BY PANKAJ ON 1/17/12
   CALCPRIORITY,
   ASSETLOCPRIORITY,
   WOISSWAP ,  --   REVISIONS FOR REL 7.5
   LASTCOPYLINKDATE,
   FLOWCONTROLLED,
   IGNOREDIAVAIL,
   PLUSCLOOP,
   SUSPENDFLOW,
   FLOWACTIONASSIST,
   AOS ,
   NESTEDJPINPROCESS,
   AMS,
   REQASSTDWNTIME,
   ACTINTLABCOST,
   PLUSCISMOBILE,
   APPTREQUIRED,
   INCTASKSINSCHED,
   ACTINTLABHRS,
   IGNORESRMAVAIL ,
   LMS,
   NEWCHILDCLASS,
   LOS,
   REPAIRLOCFLAG,
   LBL_WALKDOWN,
   LBL_CODECOMPLIANCE,
   LBL_ISPMCRITICAL,
   DJPAPPLIED
   )
   VALUES
  ('LBNL','FAC',WONUM_T, 'WAPPR', CURRENTDATE_T,
   DESCRIPTION_T, CHANGEBY_I, CURRENTDATE_T,
   -- 'TM', --  NOT TO BE PRE-FILLED AS PER HEATHER
   WOREQ_NUM_T,
   0,0,0,0,0,
   0,0,0,0,
   0, 0,0,0,
   0,
    LTRIM(RTRIM(WO1_I)), '3',REPORTEDBY_I, CURRENTDATE_T, PHONE_I,
    0,0,RTRIM(LTRIM(GLACCOUNT_I)),
    0,0,0,0,
    0,0,0,
    0,0,
    0,LOCATION_T, HASLD_T,
    LEADCRAFT_T, SUPERVISOR_T   ,
    TARGSTARTDATE_T, TARGCOMPDATE_T,
    LDKEY_T, 'WORKORDER', 1,
    -- 0,--PERFORMMOVETO,  -- NOT REQD FOR MAXIMO 7.5
    0,  -- CHANGED on 7/18/17
    'EN',0,
    WONUM_T,
    COMMGROUP_RES_T ,  -- ADDED 5/12/10
    T_lbl_release_status , -- ADDED BY PANKAJ ON 2/28/11
    'OTH', -- DEST GROUP
    'NOT REQUIRED', -- WCD STATUS
     LBL_WORKREQ_PKG.get_loc_priority(LOCATION_T),
     LBL_WORKREQ_PKG.get_loc_priority(LOCATION_T),
     0,             --WOISSWAP
    SYSDATE,       --LASTCOPYLINKDATE
    0,             -- FLOWCONTROLLED
    0,             --IGNOREDIAVAIL
    0,             --PLUSCLOOP
    0,             --SUSPENDFLOW
    0,             --FLOWACTIONASSIST
    0,             --AOS
    0,             -- NESTEDJPINPROCESS
    0,             -- AMS
    0,             -- REQASSTDWNTIME
    0,             -- ACTINTLABCOST
    0,             --PLUSCISMOBILE
    0,             --APPTREQUIRED
    0,             --INCTASKSINSCHED
    0,             --ACTINTLABHRS
    1,             --IGNORESRMAVAIL
    0,             --LMS
    'WORKORDER',    --   NEWCHILDCLASS
    0,              --    LOS
    0,               -- REPAIRLOCFLAG
    0,
    0,  -- code compliance
    0, -- pm critical
    'NO'
    );

    IF (HASLD_T =1) THEN

       -- REQUIRED FOR RELEASE 7.5
      SELECT MAXIMO.LONGDESCRIPTIONSEQ.NEXTVAL
      INTO   LDSEQ_T
      FROM DUAL;

      CONTENTUID_T :='BMXAA' || LTRIM(TO_CHAR(LDSEQ_T));

       INSERT INTO MAXIMO.LONGDESCRIPTION
       (LDKEY, LDOWNERTABLE, LDOWNERCOL, LDTEXT,
        LONGDESCRIPTION.LANGCODE, LONGDESCRIPTION.LONGDESCRIPTIONID,
        LONGDESCRIPTION.contentuid)
        VALUES (LDKEY_T, 'WORKORDER','DESCRIPTION',
        TO_CLOB(LDTEXT_T),
        'EN', LDSEQ_T,
        CONTENTUID_T);

    END IF;

   INSERT INTO MAXIMO.WOSTATUS
    (WONUM, STATUS, CHANGEDATE, CHANGEBY,
     ORGID, SITEID, WOSTATUS.WOSTATUSID, GLACCOUNT)
     VALUES
     (WONUM_T, 'WAPPR',CURRENTDATE_T, CHANGEBY_I,
     'LBNL','FAC',MAXIMO.WOSTATUSSEQ.NEXTVAL, RTRIM(LTRIM(GLACCOUNT_I)));

      -- ADDED BY PANKAJ ON 5/19/09 AS PER RT#66016

     INSERT INTO MAXIMO.WOANCESTOR WOANCESTOR
     (ORGID,SITEID, WONUM, ANCESTOR,
      HIERARCHYLEVELS, WOANCESTOR.WOANCESTORID) VALUES
      ('LBNL','FAC',WONUM_T,WONUM_T,
      0, WOANCESTORSEQ.NEXTVAL);

   -- ADDED BY PANKAJ 7/8/09 FOR MXES

   INSERT INTO MAXIMO.WORKVIEW(
   APP, CLASS, DESCRIPTION, HISTORYFLAG, ISTASK, ORGID,
   PRIORITY, RECORDKEY, REPORTDATE, REPORTEDBY,
   REPORTEDBYNAME,
   SITEID, STATUS, WORKVIEWID)
   VALUES
   ('WOTRACK','WORKORDER', DESCRIPTION_I, 0, 0, 'LBNL',
      LBL_WORKREQ_PKG.get_loc_priority(LOCATION_T), WONUM_T, CURRENTDATE_T, REPORTEDBY_I,
     MAXIMO.LBL_MAXIMO_PKG.GET_EMPLOYEE_NAME(REPORTEDBY_I),
     'FAC','WAPPR', WORKVIEWSEQ.NEXTVAL);
     INSERT INTO BATCH_MAXIMO.LBL_WORKREQ(
     WORKREQ_NUM, WORKREQ_TYPE,REPORTEDBY, PHONE,
     WO1, BUILDING,
     ROOM,
     GLACCOUNT,DESCRIPTION,LDKEY,
     TARGSTARTDATE, TARGCOMPDATE ,TARGSTARTTIME, TARGCOMPTIME,
     CHANGEBY,CHANGEDATE, WONUM,
     CONF_ROOM_NUMBER,
     CONF_ROOM_OPTION,TABLES_CHAIRS_REQD,
     DATEFIRSTINSERTED,
     CONF_BUILDING, NUMBER_OF_TABLES, NUMBER_OF_CHAIRS,
     ORGID,SITEID, COMMODITYGROUP) VALUES  -- ADDED 5/12/10
     (WOREQ_NUM_T,WORKREQ_TYPE_I, REPORTEDBY_I, PHONE_I,
      LTRIM(RTRIM(WO1_I)),  BUILDING_I,
      DECODE(LTRIM(CONF_ROOM_NUMBER_I),'--SELECT--',NULL,CONF_ROOM_NUMBER_I),
      RTRIM(LTRIM(GLACCOUNT_I)),DESCRIPTION_T,LDKEY_T2,
      TARGSTARTDATE_T, TARGCOMPDATE_T, TARGSTARTTIME_I, TARGCOMPTIME_I,
      CHANGEBY_I, CURRENTDATE_T, WONUM_T,
      DECODE(LTRIM(CONF_ROOM_NUMBER_I),'--SELECT--','NOT SPECIFIED',CONF_ROOM_NUMBER_I),
      CONF_ROOM_OPTION_I,TABLES_CHAIRS_REQD_I,
      SYSDATE,
      CONF_BUILDING_I, NUMBER_OF_TABLES_I, NUMBER_OF_CHAIRS_I,
      'LBNL','FAC', COMMGROUP_RES_T);

     IF (COMMENTS_I IS NOT NULL) THEN
        INSERT INTO BATCH_MAXIMO.LBL_LONGDESCRIPTION
        (LDKEY,LDOWNERTABLE, LDOWNERCOL,LDTEXT)
        VALUES
        (LDKEY_T2,'LBL_WORKREQ','DESCRIPTION',TO_CLOB(COMMENTS_I));
     END IF;

      --  REVISIONS FOR MAXIMO 7.5
        INSERT INTO WOSERVICEADDRESS (ADDRESSISCHANGED,
        SITEID,
        WOSERVICEADDRESSID,
        LANGCODE,
        WONUM,
        HASLD,
        ORGID) values
        (0,
         'FAC',
         WOSERVICEADDRESSSEQ.NEXTVAL,
         'EN',
          WONUM_T,
          0,
         'LBNL');

        IF (LOCATION_T IS NOT NULL) THEN
          INSERT INTO MULTIASSETLOCCI
          (RECORDKEY,
           PROGRESS,
          LOCATION,
          REPLACEMENTSITE,
          LANGCODE,
          HASLD,
          ISPRIMARY,
          WORKORGID,
          MULTIID,
          PERFORMMOVETO,
          WORKSITEID,
          ORGID,
          SITEID,
          RECORDCLASS,
          TOTALWORKUNITS
          ) VALUES
          (WONUM_T,
           0,
           LOCATION_T,
           'FAC',
           'EN',
           0,
           1,
           'LBNL',
           MULTIASSETLOCCISEQ.NEXTVAL,
           0,
           'FAC',
           'LBNL',
           'FAC',
           'WORKORDER',
           1);
       END IF;

   RETURN WONUM_T;

END;


--***************************************************************************
-- FUNCTION TO INSERT CUSTODIAL WORK REQUEST TO THE WORKORDER RELATED TABLES
--   AFTER SUCCESSFUL INSERT, IT RETURNS WORK ORDER NUMBER
--**************************************************************************
FUNCTION INSERT_CUSTD_WORKREQ(
  WORKREQ_TYPE_I     IN BATCH_MAXIMO.LBL_WORKREQ.WORKREQ_TYPE%TYPE,
  REPORTEDBY_I       IN BATCH_MAXIMO.LBL_WORKREQ.REPORTEDBY%TYPE,
  PHONE_I            IN BATCH_MAXIMO.LBL_WORKREQ.PHONE%TYPE,
  WO1_I              IN BATCH_MAXIMO.LBL_WORKREQ.WO1%TYPE,
  BUILDING_I         IN MAXIMO.LOCATIONS.LOCATION%TYPE,
  ROOM_I             IN MAXIMO.LOCATIONS.LOCATION%TYPE,
  LOCATION_NOTES_I    IN BATCH_MAXIMO.LBL_WORKREQ.LOCATION_NOTES%TYPE,
  ROUTINE_CUSTODIAL_I IN BATCH_MAXIMO.LBL_WORKREQ.ROUTINE_CUSTODIAL%TYPE,
  GLACCOUNT_I        IN BATCH_MAXIMO.LBL_WORKREQ.GLACCOUNT%TYPE,
  DESCRIPTION_I      IN BATCH_MAXIMO.LBL_WORKREQ.DESCRIPTION%TYPE,
  COMMENTS_I         IN VARCHAR2,
  TARGCOMPDATE_I     IN VARCHAR2,
  CHANGEBY_I         IN BATCH_MAXIMO.LBL_WORKREQ.CHANGEBY%TYPE)
RETURN MAXIMO.WORKORDER.WONUM%TYPE

IS

   WONUM_T   MAXIMO.WORKORDER.WONUM%TYPE;
   LDKEY_T   MAXIMO.LONGDESCRIPTION.LDKEY%TYPE;
   LDKEY_T2   MAXIMO.LONGDESCRIPTION.LDKEY%TYPE := NULL;
   LOCATION_T MAXIMO.WORKORDER.LOCATION%TYPE;
   WOREQ_NUM_T BATCH_MAXIMO.LBL_WORKREQ.WORKREQ_NUM%TYPE;
   LDTEXT_T  MAXIMO.LONGDESCRIPTION.LDTEXT%TYPE;
   TARGSTARTDATE_T MAXIMO.WORKORDER.TARGSTARTDATE%TYPE;
   CURRENTDATE_T   MAXIMO.WORKORDER.TARGSTARTDATE%TYPE;
   TARGCOMPDATE_T  MAXIMO.WORKORDER.TARGCOMPDATE%TYPE;
   LEADCRAFT_T     MAXIMO.WORKORDER.LEADCRAFT%TYPE :=NULL;
   SUPERVISOR_T    MAXIMO.WORKORDER.SUPERVISOR%TYPE :=NULL;
   DESCRIPTION_T   MAXIMO.WORKORDER.DESCRIPTION%TYPE :=NULL;
   HASLD_T         MAXIMO.WORKORDER.HASLD%TYPE :=0;
   T_LBL_RELEASE_STATUS MAXIMO.WORKORDER.lbl_release_status%TYPE;
   CONTENTUID_T   MAXIMO.LONGDESCRIPTION.CONTENTUID%TYPE;
   LDSEQ_T        MAXIMO.LONGDESCRIPTION.LDKEY%TYPE;

  -- ADDED BY PANKAJ ON 8/6/15
  T_FAMID      MAXIMO.WORKORDER.LBL_FAMID%TYPE;
  T_FAMMANAGER MAXIMO.WORKORDER.LBL_FAMMANAGER%TYPE;

BEGIN

  WONUM_T     := MAXIMO.LBL_WORKREQ_PKG.GET_NEXT_NUMBER('WONUM');
  WOREQ_NUM_T := WORKREQ_TYPE_I || '-'||
                 LPAD(MAXIMO.LBL_WORKREQ_PKG.GET_NEXT_NUMBER('WOREQ'),6,'0');

  SELECT TO_DATE(TARGCOMPDATE_I,'MM/DD/YYYY'),
         TO_DATE(TARGCOMPDATE_I,'MM/DD/YYYY'),
         SYSDATE
  INTO  TARGSTARTDATE_T, TARGCOMPDATE_T, CURRENTDATE_T
  FROM DUAL;

  -- NOW START INSERTING RECORD INTO THE WORK ORDER RELATED TABLES

  -- PREPARE LOCATION
  IF (BUILDING_I IS NOT NULL AND LTRIM(BUILDING_I) !='--SELECT--' ) THEN
    LOCATION_T := BUILDING_I;
  END IF;

  IF (BUILDING_I IS NOT NULL AND LTRIM(BUILDING_I) !='--SELECT--' AND
      ROOM_I     IS NOT NULL AND LTRIM(ROOM_I)     !='--SELECT--' ) THEN
    LOCATION_T := RTRIM(LTRIM(LOCATION_T || '-' || ROOM_I));
  END IF;


  IF (LOCATION_T IS NOT NULL) THEN
      T_lbl_release_status := LBL_WORKREQ_PKG.GET_RELEASE_LOCATION(LOCATION_T);
   ELSE
     T_lbl_release_status := 'UNKNOWN';
   END IF;

  -- GET LEADCRAFT AND SUPERVISOR

   SELECT VARVALUE  INTO LEADCRAFT_T
    FROM MAXIMO.LBL_MAXVARS
    WHERE VARNAME='WOREQ_CUSTODIAL_LEADCRAFT';

    SELECT VARVALUE  INTO SUPERVISOR_T
    FROM MAXIMO.LBL_MAXVARS
    WHERE VARNAME='WOREQ_CUSTODIAL_SUPERVISOR';


  -- PREPARE LONG DESCRIPTION
  LDTEXT_T :=' ';

  IF (NVL(ROUTINE_CUSTODIAL_I,' ') ='Y') THEN
      LDTEXT_T :=LDTEXT_T || 'ROUTINE CUSTODIAL SERVICES: YES ' || LDTEXT_DELIMIT_T;
  ELSE
      LDTEXT_T :=LDTEXT_T || 'ROUTINE CUSTODIAL SERVICES: NO '  || LDTEXT_DELIMIT_T;
  END IF;

  IF (LOCATION_NOTES_I IS NOT NULL) THEN
    LDTEXT_T :=LDTEXT_T || 'LOCATION NOTES: '  || LOCATION_NOTES_I || LDTEXT_DELIMIT_T;
  ELSE
    LDTEXT_T :=LDTEXT_T || 'LOCATION NOTES: NOT SPECIFIED' || LDTEXT_DELIMIT_T;
  END IF;

  LDTEXT_T :=LDTEXT_T || 'DATE NEEDED: ' || TO_CHAR(TARGCOMPDATE_T,'MM/DD/YYYY') || LDTEXT_DELIMIT_T;

  IF (COMMENTS_I IS NOT NULL) THEN
     LDTEXT_T :=LDTEXT_T || 'COMMENTS: ' || COMMENTS_I || LDTEXT_DELIMIT_T;
  END IF;

  LDTEXT_T :=LTRIM(RTRIM(LDTEXT_T));

  LDKEY_T :=NULL;

  SELECT MAXIMO.WORKORDERSEQ.NEXTVAL
  INTO LDKEY_T
  FROM SYS.DUAL;

  IF (LDTEXT_T IS NOT NULL AND LENGTH(LDTEXT_T) > 0)
   THEN
     HASLD_T :=1;
  END IF;

  IF (COMMENTS_I IS NOT NULL) THEN
    LDKEY_T2 :=LDKEY_T;
  END IF;

  DESCRIPTION_T :=SUBSTR(('CUSTODIAL WORK REQUESTED BY ' ||
                  UPPER(CHANGEBY_I) || ' ON ' ||  CURRENTDATE_T)
                  ,1,50);

  -- ADDED BY PANKAJ ON 8/6/16
  SELECT SUBSTR(LBL_WORKREQ_PKG.GET_FAMINFO(LOCATION_T,NULL),1,INSTR(LBL_WORKREQ_PKG.GET_FAMINFO(LOCATION_T,NULL),'_')-1) ,
         SUBSTR(LBL_WORKREQ_PKG.GET_FAMINFO(LOCATION_T,NULL),INSTR(LBL_WORKREQ_PKG.GET_FAMINFO(LOCATION_T,NULL),'_')+1)
  INTO T_FAMID, T_FAMMANAGER
  FROM DUAL;


  INSERT INTO MAXIMO.WORKORDER
  (ORGID, SITEID, WONUM, STATUS, STATUSDATE,
   DESCRIPTION, CHANGEBY, CHANGEDATE,
   -- WORKTYPE,
   WO4,
   ESTDUR, ESTLABHRS, ESTLABCOST, ESTMATCOST, ESTTOOLCOST,
   ACTLABHRS, ACTLABCOST, ACTMATCOST, ACTTOOLCOST,
   HASCHILDREN, OUTLABCOST, OUTMATCOST, OUTTOOLCOST,
   HISTORYFLAG,
   WO1, WO5, REPORTEDBY, REPORTDATE, PHONE,
   DOWNTIME, CHARGESTORE, GLACCOUNT,
   ESTSERVCOST,ACTSERVCOST,DISABLED,ESTATAPPRLABHRS,
   ESTATAPPRLABCOST,ESTATAPPRMATCOST,ESTATAPPRTOOLCOST,
   ESTATAPPRSERVCOST, HASFOLLOWUPWORK,
   ISTASK, LOCATION, HASLD,
   LEADCRAFT,SUPERVISOR,
   TARGSTARTDATE, TARGCOMPDATE,
   -- MXES
   WORKORDERID, WOCLASS, WOACCEPTSCHARGES,
   --PERFORMMOVETO, -NOT REQUIRED FOR MAXIMO 7.5
   PARENTCHGSSTATUS,
   LANGCODE, INTERRUPTIBLE,
   WOGROUP,
   COMMODITYGROUP, -- ADDED 5/12/10
   LBL_RELEASE_STATUS,  -- ADDED BY PANKAJ ON 2/28/11
   CALCPRIORITY,
   ASSETLOCPRIORITY,
   WOISSWAP ,  --   REVISIONS FOR REL 7.5
   LASTCOPYLINKDATE,
   FLOWCONTROLLED,
   IGNOREDIAVAIL,
   PLUSCLOOP,
   SUSPENDFLOW,
   FLOWACTIONASSIST,
   AOS ,
   NESTEDJPINPROCESS,
   AMS,
   REQASSTDWNTIME,
   ACTINTLABCOST,
   PLUSCISMOBILE,
   APPTREQUIRED,
   INCTASKSINSCHED,
   ACTINTLABHRS,
   IGNORESRMAVAIL ,
   LMS,
   NEWCHILDCLASS,
   LOS,
   REPAIRLOCFLAG,
   LBL_FAMID,
   LBL_FAMMANAGER,
   LBL_WALKDOWN,
   LBL_CODECOMPLIANCE,
   LBL_ISPMCRITICAL,
   DJPAPPLIED
      )
   VALUES
  ('LBNL','FAC',WONUM_T, 'WAPPR', CURRENTDATE_T,
   DESCRIPTION_T, CHANGEBY_I, CURRENTDATE_T,
   -- 'CM', --  NOT TO BE PRE-FILLED AS PER HEATHER
   WOREQ_NUM_T,
   0,0,0,0,0,
   0,0,0,0,
   0, 0,0,0,
   0,
    LTRIM(RTRIM(WO1_I)), '3',REPORTEDBY_I, CURRENTDATE_T, PHONE_I,
    0,0,RTRIM(LTRIM(GLACCOUNT_I)),
    0,0,0,0,
    0,0,0,
    0,0,
    0,LOCATION_T, HASLD_T,
    LEADCRAFT_T, SUPERVISOR_T,
    TARGSTARTDATE_T, TARGCOMPDATE_T,
    LDKEY_T, 'WORKORDER', 1,
    -- 0,--PERFORMMOVETO, -NOT REQUIRED FOR MAXIMO 7.5
    0,  -- CHANGED on 7/18/17
    'EN',0,
    WONUM_T,
    COMMGROUP_OPS_T, -- ADDED 5/12/10
    T_LBL_RELEASE_STATUS , -- ADDED BY PANKAJ ON 2/28/11
    LBL_WORKREQ_PKG.get_loc_priority(LOCATION_T),
    LBL_WORKREQ_PKG.get_loc_priority(LOCATION_T),
      0,             --WOISSWAP
    SYSDATE,       --LASTCOPYLINKDATE
    0,             -- FLOWCONTROLLED
    0,             --IGNOREDIAVAIL
    0,             --PLUSCLOOP
    0,             --SUSPENDFLOW
    0,             --FLOWACTIONASSIST
    0,             --AOS
    0,             -- NESTEDJPINPROCESS
    0,             -- AMS
    0,             -- REQASSTDWNTIME
    0,             -- ACTINTLABCOST
    0,             --PLUSCISMOBILE
    0,             --APPTREQUIRED
    0,             --INCTASKSINSCHED
    0,             --ACTINTLABHRS
    1,             --IGNORESRMAVAIL
    0,             --LMS
    'WORKORDER',    --  NEWCHILDCLASS
    0, --   LOS
    0,   -- REPAIRLOCFLAG
    T_FAMID,
    T_FAMMANAGER,
    0,
    0,  -- code compliance
    0, -- pm critical
    'NO'
    );

    IF (HASLD_T =1) THEN

        -- REQUIRED FOR RELEASE 7.5
      SELECT MAXIMO.LONGDESCRIPTIONSEQ.NEXTVAL
      INTO   LDSEQ_T
      FROM DUAL;

      CONTENTUID_T :='BMXAA' || LTRIM(TO_CHAR(LDSEQ_T));



       INSERT INTO MAXIMO.LONGDESCRIPTION
       (LDKEY, LDOWNERTABLE, LDOWNERCOL, LDTEXT,
        LONGDESCRIPTION.LANGCODE, LONGDESCRIPTION.LONGDESCRIPTIONID,
        LONGDESCRIPTION.contentuid)
        VALUES (LDKEY_T, 'WORKORDER','DESCRIPTION',
        TO_CLOB(LDTEXT_T),
        'EN', LDSEQ_T,
        CONTENTUID_T);

    END IF;

    INSERT INTO MAXIMO.WOSTATUS
    (WONUM, STATUS, CHANGEDATE, CHANGEBY,
     ORGID, SITEID, WOSTATUS.WOSTATUSID, GLACCOUNT)
     VALUES
     (WONUM_T, 'WAPPR',CURRENTDATE_T, CHANGEBY_I,
     'LBNL','FAC', MAXIMO.WOSTATUSSEQ.NEXTVAL, RTRIM(LTRIM(GLACCOUNT_I)));

     -- ADDED BY PANKAJ ON 5/19/09 AS PER RT#66016

     INSERT INTO MAXIMO.WOANCESTOR WOANCESTOR
     (ORGID,SITEID, WONUM, ANCESTOR,
      HIERARCHYLEVELS, WOANCESTOR.WOANCESTORID) VALUES
      ('LBNL','FAC',WONUM_T,WONUM_T,
      0, WOANCESTORSEQ.NEXTVAL);

      -- ADDED BY PANKAJ 7/8/09 FOR MXES

     INSERT INTO MAXIMO.WORKVIEW(
     APP, CLASS, DESCRIPTION, HISTORYFLAG, ISTASK, ORGID,
     PRIORITY, RECORDKEY, REPORTDATE, REPORTEDBY,
     REPORTEDBYNAME,
     SITEID, STATUS, WORKVIEWID)
     VALUES
     ('WOTRACK','WORKORDER', DESCRIPTION_T, 0, 0, 'LBNL',
      LBL_WORKREQ_PKG.get_loc_priority(LOCATION_T), WONUM_T, CURRENTDATE_T, REPORTEDBY_I,
     MAXIMO.LBL_MAXIMO_PKG.GET_EMPLOYEE_NAME(REPORTEDBY_I),
     'FAC','WAPPR', WORKVIEWSEQ.NEXTVAL);

     INSERT INTO BATCH_MAXIMO.LBL_WORKREQ(
     WORKREQ_NUM, WORKREQ_TYPE,REPORTEDBY, PHONE,
     WO1, BUILDING, ROOM,LOCATION_NOTES,
     ROUTINE_CUSTODIAL, GLACCOUNT,DESCRIPTION,LDKEY,
     TARGSTARTDATE, TARGCOMPDATE ,
     CHANGEBY,CHANGEDATE, WONUM,
     DATEFIRSTINSERTED,
     ORGID,SITEID, COMMODITYGROUP) VALUES  -- ADDED 5/12/10
     (WOREQ_NUM_T,WORKREQ_TYPE_I, REPORTEDBY_I, PHONE_I,
      LTRIM(RTRIM(WO1_I)),  BUILDING_I, ROOM_I,LOCATION_NOTES_I,
      ROUTINE_CUSTODIAL_I, RTRIM(LTRIM(GLACCOUNT_I)),DESCRIPTION_T,LDKEY_T,
      TARGCOMPDATE_T, TARGCOMPDATE_T,
      CHANGEBY_I, CURRENTDATE_T, WONUM_T,
      SYSDATE,
      'LBNL','FAC', COMMGROUP_OPS_T); -- ADDED 5/12/10

     IF (COMMENTS_I IS NOT NULL) THEN
        INSERT INTO BATCH_MAXIMO.LBL_LONGDESCRIPTION
        (LDKEY,LDOWNERTABLE, LDOWNERCOL,LDTEXT)
        VALUES
        (LDKEY_T2,'LBL_WORKREQ','DESCRIPTION',TO_CLOB(COMMENTS_I));
    END IF;

      --  REVISIONS FOR MAXIMO 7.5
        INSERT INTO WOSERVICEADDRESS (ADDRESSISCHANGED,
        SITEID,
        WOSERVICEADDRESSID,
        LANGCODE,
        WONUM,
        HASLD,
        ORGID) values
        (0,
         'FAC',
         WOSERVICEADDRESSSEQ.NEXTVAL,
         'EN',
          WONUM_T,
          0,
         'LBNL');
        IF (LOCATION_T IS NOT NULL) THEN
          INSERT INTO MULTIASSETLOCCI
          (RECORDKEY,
           PROGRESS,
          LOCATION,
          REPLACEMENTSITE,
          LANGCODE,
          HASLD,
          ISPRIMARY,
          WORKORGID,
          MULTIID,
          PERFORMMOVETO,
          WORKSITEID,
          ORGID,
          SITEID,
          RECORDCLASS,
          TOTALWORKUNITS
          ) VALUES
          (WONUM_T,
           0,
           LOCATION_T,
           'FAC',
           'EN',
           0,
           1,
           'LBNL',
           MULTIASSETLOCCISEQ.NEXTVAL,
           0,
           'FAC',
           'LBNL',
           'FAC',
           'WORKORDER',
           1);
       END IF;



   RETURN WONUM_T;

END;


--**********************************************************************
--*************************** UPDATES **********************************
--**********************************************************************

FUNCTION UPDATE_GEN_WORKREQ(
    I_MODE                      IN VARCHAR2,
    I_WONUM                     IN MAXIMO.WORKORDER.WONUM%TYPE,
    I_REPORTEDBY                IN    WORKORDER.REPORTEDBY%TYPE,
    I_PHONE                     IN    WORKORDER.PHONE%TYPE,
    I_WO1                       IN    WORKORDER.WO1%TYPE,
    I_WO1_PHONE                 IN    LBL_WORKORDEREXT.WO1_PHONE%TYPE,
    I_BUILDING                  IN    LBL_WORKORDEREXT.BUILDING%TYPE,
    I_ROOM                      IN    LBL_WORKORDEREXT.ROOM%TYPE,
    I_LOCATION_NOTES            IN    LBL_WORKORDEREXT.LOCATION_NOTES%TYPE,
    I_FIRST_AVL_DATETIME        IN    LBL_WORKORDEREXT.FIRST_AVL_DATETIME%TYPE,
    I_TARGSTARTDATE             IN    VARCHAR2, --LBL_WORKORDEREXT.TARGSTARTDATE%TYPE,
    I_TARGCOMPDATE              IN    VARCHAR2, --LBL_WORKORDEREXT.TARGCOMPDATE%TYPE,
    I_SCHED_ISSUES              IN    LBL_WORKORDEREXT.SCHED_ISSUES%TYPE,
    I_SCHED_ISSUES_DTL          IN    LBL_WORKORDEREXT.SCHED_ISSUES_DTL%TYPE,
    I_BUILDING_MAINT            IN    LBL_WORKORDEREXT.BUILDING_MAINT%TYPE,
    I_GLACCOUNT                 IN    WORKORDER.GLACCOUNT%TYPE,
    I_DESCRIPTION               IN    WORKORDER.DESCRIPTION%TYPE,
    I_ACCOMP_COND_PROB          IN    LBL_WORKORDEREXT.ACCOMP_COND_PROB%TYPE,
    I_COMMODITYGROUP            IN    WORKORDER.COMMODITYGROUP%TYPE,
    I_COMMODITY                 IN    WORKORDER.COMMODITY%TYPE,
    I_PRIOR_WO                  IN    LBL_WORKORDEREXT.PRIOR_WO%TYPE,
    I_PRIOR_WONUM               IN    LBL_WORKORDEREXT.PRIOR_WONUM%TYPE,
    I_ASSET_DESC                IN    LBL_WORKORDEREXT.ASSET_DESC%TYPE,
    I_WARRANTY_ISSUE            IN    LBL_WORKORDEREXT.WARRANTY_ISSUE%TYPE,
    I_WARRANTY_ISS_DTL          IN    LBL_WORKORDEREXT.WARRANTY_ISS_DTL%TYPE,
    I_ESTIMATE_REQD             IN    LBL_WORKORDEREXT.ESTIMATE_REQD%TYPE,
    I_SAFETY_ISSUE              IN    LBL_WORKORDEREXT.SAFETY_ISSUE%TYPE,
    I_HAZARDS                   IN    LBL_WORKORDEREXT.HAZARDS%TYPE,
    I_HAZARDS_DTL               IN    LBL_WORKORDEREXT.HAZARDS_DTL%TYPE,
    I_FOLLOW_STOP_WO            IN    LBL_WORKORDEREXT.FOLLOW_STOP_WO%TYPE,
    I_FOLLOW_STOP_WONUM         IN    LBL_WORKORDEREXT.FOLLOW_STOP_WONUM%TYPE,
    I_FOLLOW_STOP_DTL           IN    LBL_WORKORDEREXT.FOLLOW_STOP_DTL%TYPE,
    I_SELF_WO                   IN    LBL_WORKORDEREXT.SELF_WO%TYPE,
    I_EST_HRS                   IN    LBL_WORKORDEREXT.EST_HRS%TYPE,
    I_PARENT_WO_EXISTS          IN    LBL_WORKORDEREXT.PARENT_WO_EXISTS%TYPE,
    I_PARENT_WONUM              IN    LBL_WORKORDEREXT.PARENT_WONUM%TYPE,
    I_WORKREQ_TYPE              IN    LBL_WORKORDEREXT.WORKREQ_TYPE%TYPE,
    I_CHANGEBY                  IN    LBL_WORKORDEREXT.CHANGEBY%TYPE,
    I_REPORTEDBY_MOBILE         IN    LBL_WORKORDEREXT.REPORTEDBY_MOBILE%TYPE,
    I_WO1_MOBILE                IN    LBL_WORKORDEREXT.wo1_mobile%TYPE)

 RETURN MAXIMO.WORKORDER.WONUM%TYPE

 IS

 TARGSTARTDATE_T MAXIMO.WORKORDER.TARGSTARTDATE%TYPE;
 CURRENTDATE_T   MAXIMO.WORKORDER.TARGSTARTDATE%TYPE;
 TARGCOMPDATE_T  MAXIMO.WORKORDER.TARGCOMPDATE%TYPE;
 BUILDING_MAINT_T    LBL_WORKORDEREXT.BUILDING_MAINT%TYPE;
 GLACCOUNT_T         WORKORDER.GLACCOUNT%TYPE;
 STATUS_T            MAXIMO.WORKORDER.STATUS%TYPE;
 LDKEY_T             MAXIMO.LONGDESCRIPTION.LDKEY%TYPE;
 T_LBL_RELEASE_STATUS  MAXIMO.WORKORDER.LBL_RELEASE_STATUS%TYPE;
 LDTEXT_T            MAXIMO.LONGDESCRIPTION.LDTEXT%TYPE;
 LOCATION_T          MAXIMO.WORKORDER.LOCATION%TYPE;
 T_SUPERVISOR        MAXIMO.WORKORDER.SUPERVISOR%TYPE;
 OLD_LOCATION_T      MAXIMO.WORKORDER.LOCATION%TYPE;

 -- ADDED BY PANKAJ ON 11/25/15

   T_LBL_ESCORT_REQD    MAXIMO.WORKORDER.LBL_ESCORT_REQD%TYPE;
   T_LBL_CONDITION_REL  MAXIMO.WORKORDER.LBL_CONDITION_REL%TYPE;
   T_LBL_COMMENTS_CONDR MAXIMO.LOCATIONS.LBL_COMMENTS_CONDR%TYPE;


 BEGIN

 SELECT SYSDATE INTO CURRENTDATE_T FROM DUAL;


  IF UPPER(I_MODE)='DELETE' THEN

      -- CANCEL THE WORK ORDER
     INSERT INTO MAXIMO.WOSTATUS
     (WONUM, STATUS, CHANGEDATE, CHANGEBY,
      ORGID, SITEID, WOSTATUS.WOSTATUSID)
     VALUES
     (I_WONUM, 'CAN',CURRENTDATE_T, I_CHANGEBY,
     'LBNL','FAC', MAXIMO.WOSTATUSSEQ.NEXTVAL);

     UPDATE MAXIMO.WORKORDER
     SET STATUS='CAN', STATUSDATE=CURRENTDATE_T,
     CHANGEDATE=CURRENTDATE_T,
     CHANGEBY=I_CHANGEBY, HISTORYFLAG=1
     WHERE   ORGID='LBNL'
     AND     SITEID='FAC'
     AND     WONUM=I_WONUM;

     -- MXES 7/9/09
    UPDATE MAXIMO.WORKVIEW
    SET STATUS='CAN',HISTORYFLAG=1
    WHERE RECORDKEY=I_WONUM
    AND   CLASS='WORKORDER'
    AND   SITEID='FAC'
    AND   ORGID='LBNL';


  END IF;   --  IF UPPER(IMODE)='DELETE' THEN

 IF UPPER(I_MODE) !='DELETE' THEN

   -- PREPARE VALUES REQUIRED FOR TABLES (COMMON FOR ADD AND MODIFY)
  PREPARE_GENWORK_VALUES
  (
    I_REPORTEDBY                ,
    I_PHONE                     ,
    I_WO1                       ,
    I_WO1_PHONE                 ,
    I_BUILDING                  ,
    I_ROOM                      ,
    I_LOCATION_NOTES            ,
    I_FIRST_AVL_DATETIME        ,
    I_TARGSTARTDATE             ,
    I_TARGCOMPDATE              ,
    I_SCHED_ISSUES              ,
    I_SCHED_ISSUES_DTL          ,
    I_BUILDING_MAINT            ,
    I_GLACCOUNT                 ,
    I_DESCRIPTION               ,
    I_ACCOMP_COND_PROB          ,
    I_COMMODITYGROUP            ,
    I_COMMODITY                 ,
    I_PRIOR_WO                  ,
    I_PRIOR_WONUM               ,
    I_ASSET_DESC                ,
    I_WARRANTY_ISSUE            ,
    I_WARRANTY_ISS_DTL          ,
    I_ESTIMATE_REQD             ,
    I_SAFETY_ISSUE              ,
    I_HAZARDS                   ,
    I_HAZARDS_DTL               ,
    I_FOLLOW_STOP_WO            ,
    I_FOLLOW_STOP_WONUM         ,
    I_FOLLOW_STOP_DTL           ,
    I_SELF_WO                   ,
    I_EST_HRS                   ,
    I_PARENT_WO_EXISTS          ,
    I_PARENT_WONUM              ,
    LOCATION_T                  ,
    TARGSTARTDATE_T             ,
    TARGCOMPDATE_T              ,
    T_LBL_RELEASE_STATUS        ,
    LDTEXT_T                    ,
    CURRENTDATE_T );


    LDTEXT_T :=LTRIM(RTRIM(LDTEXT_T));

   --********************************
   -- NOW START UPDATING TABLES
   --********************************

   UPDATE BATCH_MAXIMO.LBL_WORKREQ
   SET WO1=LTRIM(RTRIM(I_WO1)), BUILDING=I_BUILDING, ROOM=I_ROOM,
   LOCATION_NOTES=I_LOCATION_NOTES,
   BUILDING_MAINT=I_BUILDING_MAINT, GLACCOUNT=RTRIM(LTRIM(I_GLACCOUNT)),
   DESCRIPTION=I_DESCRIPTION, ESTIMATE_REQD=I_ESTIMATE_REQD,
   TARGSTARTDATE=TARGSTARTDATE_T, TARGCOMPDATE=TARGCOMPDATE_T,
   CHANGEDATE=CURRENTDATE_T, CHANGEBY=I_CHANGEBY,
   COMMODITYGROUP=I_COMMODITYGROUP,COMMODITY=I_COMMODITY,
   WO1_PHONE                     =I_WO1_PHONE,
   FIRST_AVL_DATETIME            =I_FIRST_AVL_DATETIME,
   SCHED_ISSUES                 =I_SCHED_ISSUES,
   SCHED_ISSUES_DTL              =I_SCHED_ISSUES_DTL,
   ACCOMP_COND_PROB              =I_ACCOMP_COND_PROB,
   PRIOR_WO                      =I_PRIOR_WO,
   PRIOR_WONUM                  =I_PRIOR_WONUM,
   ASSET_DESC                   =I_ASSET_DESC ,
   WARRANTY_ISSUE               =I_WARRANTY_ISSUE,
   WARRANTY_ISS_DTL             =I_WARRANTY_ISS_DTL,
    --ESTIMATE_REQD NUMBER (1),   --ESTIMATE_REQD NUMBER (1),
   SAFETY_ISSUE                 =I_SAFETY_ISSUE,
   HAZARDS =DECODE(I_HAZARDS,0,'N','Y'),
   HAZARDS_DTL                   =I_HAZARDS_DTL,
   FOLLOW_STOP_WO                =I_FOLLOW_STOP_WO,
   FOLLOW_STOP_WONUM             =I_FOLLOW_STOP_WONUM,
   FOLLOW_STOP_DTL               =I_FOLLOW_STOP_DTL ,
   SELF_WO                       =I_SELF_WO,
   EST_HRS                       =I_EST_HRS,
   PARENT_WO_EXISTS= I_PARENT_WO_EXISTS,
   PARENT_WONUM=     I_PARENT_WONUM
   WHERE WONUM=I_WONUM;


   UPDATE MAXIMO.LONGDESCRIPTION
   SET LDTEXT=TO_CLOB(LDTEXT_T)
   WHERE LDKEY IN (SELECT B.WORKORDERID FROM WORKORDER B
   WHERE ORGID='LBNL' AND SITEID='FAC' AND WONUM=I_WONUM)
   AND  LDOWNERTABLE='WORKORDER'
   AND  LDOWNERCOL='DESCRIPTION';


   -- ADDED BY PANKAJ ON 12/3/13 AS PER TAMMY T
   -- DERIVE SUPERVISOR BASED UPON COMMODITY VALUES
   T_SUPERVISOR :=NULL;

   -- RADIO SHOP
   IF (I_COMMODITY='03') THEN
    BEGIN
      SELECT VARVALUE INTO T_SUPERVISOR
      FROM MAXIMO.LBL_MAXVARS
      WHERE VARNAME='RADIOSHOP_SUPERVISOR'
      AND   ORGID='LBNL'
      AND   SITEID='FAC';
     EXCEPTION WHEN OTHERS  THEN
      NULL;
    END;

  END IF;

  -- LOCKSHOP
  IF (I_COMMODITY='09') THEN
   BEGIN
      SELECT VARVALUE INTO T_SUPERVISOR
      FROM MAXIMO.LBL_MAXVARS
      WHERE VARNAME='LOCKSHOP_SUPERVISOR'
      AND   ORGID='LBNL'
      AND   SITEID='FAC';
     EXCEPTION WHEN OTHERS  THEN
      NULL;
    END;

  END IF;



  -- ADDED BY PANKAJ ON 11/25/15
  IF (LOCATION_T IS NOT NULL) THEN
    BEGIN
      SELECT LBL_ESCORT_REQD, LBL_COND_RELEASE, LBL_COMMENTS_CONDR
      INTO T_LBL_ESCORT_REQD, T_LBL_CONDITION_REL, T_LBL_COMMENTS_CONDR
      FROM MAXIMO.LOCATIONS
      WHERE SITEID='FAC'
      AND   LOCATION=LOCATION_T;

    EXCEPTION WHEN OTHERS THEN
      NULL;
    END;
  END IF;


   UPDATE MAXIMO.WORKORDER
   SET WO1=LTRIM(RTRIM(I_WO1)),
   TARGSTARTDATE=TARGSTARTDATE_T, TARGCOMPDATE=TARGCOMPDATE_T,
   PHONE=I_PHONE, GLACCOUNT=RTRIM(LTRIM(I_GLACCOUNT)), LOCATION=LOCATION_T,
   DESCRIPTION=I_DESCRIPTION,CHANGEDATE=CURRENTDATE_T, CHANGEBY=I_CHANGEBY,
   COMMODITYGROUP=I_COMMODITYGROUP,COMMODITY=I_COMMODITY,
   LBL_RELEASE_STATUS=LBL_WORKREQ_PKG.GET_RELEASE_LOCATION(LOCATION_T),
   CALCPRIORITY= LBL_WORKREQ_PKG.GET_LOC_PRIORITY(LOCATION_T),
   ASSETLOCPRIORITY=LBL_WORKREQ_PKG.GET_LOC_PRIORITY(LOCATION_T),
   SUPERVISOR=T_SUPERVISOR,
   LBL_ESCORT_REQD=T_LBL_ESCORT_REQD, LBL_CONDITION_REL=T_LBL_CONDITION_REL
   --LBL_ORGCODE=DECODE(I_COMMODITY,'09','PSSO-L','03','PSSO-R',NULL) --09 LOCKSHOP, 03-RADIO SHOP
   WHERE ORGID='LBNL'
   AND   SITEID='FAC'
   AND   WONUM=I_WONUM;

   -- MXES 7/9/09
   UPDATE MAXIMO.WORKVIEW
   SET DESCRIPTION=I_DESCRIPTION,
   PRIORITY= LBL_WORKREQ_PKG.GET_LOC_PRIORITY(LOCATION_T)
   WHERE RECORDKEY=I_WONUM
   AND   CLASS='WORKORDER'
   AND   SITEID='FAC'
   AND   ORGID='LBNL';


   UPDATE LBL_WORKORDEREXT SET
    -- PHONE=             I_PHONE
    --,WO1=               I_WO1
    WO1_PHONE=         I_WO1_PHONE
    ,BUILDING=          I_BUILDING
    ,ROOM=              I_ROOM
    ,LOCATION_NOTES=    I_LOCATION_NOTES
    ,FIRST_AVL_DATETIME=I_FIRST_AVL_DATETIME
    --,TARGSTARTDATE=      TARGSTARTDATE_T
    --,TARGCOMPDATE=       TARGCOMPDATE_T
    ,SCHED_ISSUES=      I_SCHED_ISSUES
    ,SCHED_ISSUES_DTL=  I_SCHED_ISSUES_DTL
    ,BUILDING_MAINT=    I_BUILDING_MAINT
    --,GLACCOUNT=         I_GLACCOUNT
    --,DESCRIPTION=       I_DESCRIPTION
    ,ACCOMP_COND_PROB=  I_ACCOMP_COND_PROB
    --,COMMODITYGROUP=    I_COMMODITYGROUP
    --,COMMODITY=         I_COMMODITY
    ,PRIOR_WO=          I_PRIOR_WO
    ,PRIOR_WONUM=       I_PRIOR_WONUM
    ,ASSET_DESC=        I_ASSET_DESC
    ,WARRANTY_ISSUE=    I_WARRANTY_ISSUE
    ,WARRANTY_ISS_DTL=  I_WARRANTY_ISS_DTL
    ,ESTIMATE_REQD=     I_ESTIMATE_REQD
    ,SAFETY_ISSUE=      I_SAFETY_ISSUE
    ,HAZARDS=           I_HAZARDS
    ,HAZARDS_DTL=       I_HAZARDS_DTL
    ,FOLLOW_STOP_WO=    I_FOLLOW_STOP_WO
    ,FOLLOW_STOP_WONUM= I_FOLLOW_STOP_WONUM
    ,FOLLOW_STOP_DTL=   I_FOLLOW_STOP_DTL
    ,SELF_WO=           I_SELF_WO
    ,EST_HRS=           I_EST_HRS
    ,PARENT_WO_EXISTS= I_PARENT_WO_EXISTS
    ,PARENT_WONUM=     I_PARENT_WONUM
    ,CHANGEDATE=CURRENTDATE_T
    , REPORTEDBY_MOBILE=         I_REPORTEDBY_MOBILE
    , WO1_MOBILE=                I_wo1_mobile
    , GLACCOUNT=I_GLACCOUNT
    WHERE ORGID='LBNL'
    AND   SITEID='FAC'
    AND   WONUM=I_WONUM;

   -- FOR MAXIMO RELEASE 7.5

   IF (LOCATION_T IS NOT NULL) THEN

    BEGIN
     SELECT LOCATION  INTO OLD_LOCATION_T
     FROM   MULTIASSETLOCCI
     WHERE  RECORDKEY=I_WONUM
     AND    RECORDCLASS='WORKORDER'
     AND    ORGID='LBNL'
     AND    SITEID='FAC';

     IF (OLD_LOCATION_T !=LOCATION_T) THEN

      UPDATE   MULTIASSETLOCCI
      SET      LOCATION=LOCATION_T
      WHERE    RECORDKEY=I_WONUM
      AND      RECORDCLASS='WORKORDER'
      AND      ORGID='LBNL'
      AND      SITEID='FAC';

    END IF;

   EXCEPTION WHEN NO_DATA_FOUND THEN

    IF (LOCATION_T IS NOT NULL) THEN
        INSERT INTO MULTIASSETLOCCI
          (RECORDKEY,
           PROGRESS,
          LOCATION,
          REPLACEMENTSITE,
          LANGCODE,
          HASLD,
          ISPRIMARY,
          WORKORGID,
          MULTIID,
          PERFORMMOVETO,
          WORKSITEID,
          ORGID,
          SITEID,
          RECORDCLASS,
          TOTALWORKUNITS
          ) VALUES
          (I_WONUM,
           0,
           LOCATION_T,
           'FAC',
           'EN',
           0,
           1,
           'LBNL',
           MULTIASSETLOCCISEQ.NEXTVAL,
           0,
           'FAC',
           'LBNL',
           'FAC',
           'WORKORDER',
           1);
       END IF;
    END;
  END IF;  -- IF (LOCATION_T IS NOT NULL) THEN





 END IF; --  IF UPPER(MODE_I) !='DELETE' THEN

 RETURN I_WONUM;


 END;


--***************************************************************************
-- FUNCTION TO UPDATE CUSTODIAL WORK REQUEST TO THE WORKORDER RELATED TABLES.
--  AFTER SUCCESSFUL INSERT, IT RETURNS WORK ORDER NUMBER
--***************************************************************************
FUNCTION UPDATE_CUSTD_WORKREQ(
  MODE_I             IN VARCHAR2,
  WONUM_I            IN MAXIMO.WORKORDER.WONUM%TYPE,
  REPORTEDBY_I       IN BATCH_MAXIMO.LBL_WORKREQ.REPORTEDBY%TYPE,
  PHONE_I            IN BATCH_MAXIMO.LBL_WORKREQ.PHONE%TYPE,
  WO1_I              IN BATCH_MAXIMO.LBL_WORKREQ.WO1%TYPE,
  BUILDING_I         IN MAXIMO.LOCATIONS.LOCATION%TYPE,
  ROOM_I             IN MAXIMO.LOCATIONS.LOCATION%TYPE,
  LOCATION_NOTES_I   IN BATCH_MAXIMO.LBL_WORKREQ.LOCATION_NOTES%TYPE,
  ROUTINE_CUSTODIAL_I   IN BATCH_MAXIMO.LBL_WORKREQ.ROUTINE_CUSTODIAL%TYPE,
  GLACCOUNT_I        IN BATCH_MAXIMO.LBL_WORKREQ.GLACCOUNT%TYPE,
  DESCRIPTION_I      IN BATCH_MAXIMO.LBL_WORKREQ.DESCRIPTION%TYPE,
  COMMENTS_I         IN VARCHAR2,
  TARGCOMPDATE_I     IN VARCHAR2,
  CHANGEBY_I         IN BATCH_MAXIMO.LBL_WORKREQ.CHANGEBY%TYPE)
 RETURN MAXIMO.WORKORDER.WONUM%TYPE

 IS


 TARGSTARTDATE_T MAXIMO.WORKORDER.TARGSTARTDATE%TYPE;
 CURRENTDATE_T   MAXIMO.WORKORDER.TARGSTARTDATE%TYPE;
 TARGCOMPDATE_T  MAXIMO.WORKORDER.TARGCOMPDATE%TYPE;
 ROUTINE_CUSTODIAL_T BATCH_MAXIMO.LBL_WORKREQ.ROUTINE_CUSTODIAL%TYPE;
 GLACCOUNT_T         BATCH_MAXIMO.LBL_WORKREQ.GLACCOUNT%TYPE;
 STATUS_T            MAXIMO.WORKORDER.STATUS%TYPE;
 LDKEY_T             MAXIMO.LONGDESCRIPTION.LDKEY%TYPE;
 LDKEY_T2            MAXIMO.LONGDESCRIPTION.LDKEY%TYPE :=NULL;
 LDTEXT_T            MAXIMO.LONGDESCRIPTION.LDTEXT%TYPE;
 LOCATION_T          MAXIMO.WORKORDER.LOCATION%TYPE;
 OLD_LOCATION_T          MAXIMO.WORKORDER.LOCATION%TYPE;

 BEGIN

 SELECT SYSDATE INTO CURRENTDATE_T FROM DUAL;


  IF UPPER(MODE_I)='DELETE' THEN

      -- CANCEL THE WORK ORDER
     INSERT INTO MAXIMO.WOSTATUS
     (WONUM, STATUS, CHANGEDATE, CHANGEBY,
      ORGID, SITEID, WOSTATUS.WOSTATUSID)
     VALUES
     (WONUM_I, 'CAN',CURRENTDATE_T, CHANGEBY_I,
     'LBNL','FAC',MAXIMO.WOSTATUSSEQ.NEXTVAL);

     UPDATE MAXIMO.WORKORDER
     SET STATUS='CAN', STATUSDATE=CURRENTDATE_T,
     CHANGEDATE=CURRENTDATE_T,
     CHANGEBY=CHANGEBY_I, HISTORYFLAG=1
     WHERE   ORGID='LBNL'
     AND     SITEID='FAC'
     AND     WONUM=WONUM_I;

     -- MXES 7/9/09
    UPDATE MAXIMO.WORKVIEW
    SET STATUS='CAN',HISTORYFLAG=1
    WHERE RECORDKEY=WONUM_I
    AND   CLASS='WORKORDER'
    AND   SITEID='FAC'
    AND   ORGID='LBNL'  ;


  END IF;   --  IF UPPER(MODE_I)='DELETE' THEN

 IF UPPER(MODE_I) !='DELETE' THEN

   -- IF THE VALUE OF OLD GLACCOUNT AND ROUTINE_CUSTODIAL ARE DIFFERENT
   -- THAN THE NEW ONE, AND IT IS APPROVED THEN, SET THE STATUS OF THE WORK
   -- ORDER TO WAPPR

   SELECT  A.ROUTINE_CUSTODIAL, A.GLACCOUNT, B.STATUS,
           B.WORKORDERID, A.LDKEY
   INTO    ROUTINE_CUSTODIAL_T, GLACCOUNT_T, STATUS_T,
           LDKEY_T, LDKEY_T2
   FROM    BATCH_MAXIMO.LBL_WORKREQ A, MAXIMO.WORKORDER B
   WHERE   A.WONUM=B.WONUM
   AND     A.WONUM=WONUM_I;


   IF (((ROUTINE_CUSTODIAL_T || GLACCOUNT_T ) !=
       (ROUTINE_CUSTODIAL_I  || GLACCOUNT_I )) AND
       STATUS_T NOT IN ('WAPPR','RFI'))
    THEN

    -- NEW STATUS
    STATUS_T := 'WAPPR';

    -- CHANGE THE STATUS OF WORK ORDER TO WAPPR
     INSERT INTO MAXIMO.WOSTATUS
     (WONUM, STATUS, CHANGEDATE, CHANGEBY,
      ORGID, SITEID, WOSTATUS.WOSTATUSID, GLACCOUNT)
     VALUES
     (WONUM_I, STATUS_T, CURRENTDATE_T, CHANGEBY_I,
     'LBNL','FAC', MAXIMO.WOSTATUSSEQ.NEXTVAL, RTRIM(LTRIM(GLACCOUNT_I)));
   END IF;

  SELECT TO_DATE(TARGCOMPDATE_I,'MM/DD/YYYY'),
         TO_DATE(TARGCOMPDATE_I,'MM/DD/YYYY')
  INTO  TARGSTARTDATE_T, TARGCOMPDATE_T
  FROM DUAL;


  -- NOW START UPDATING TABLES


  IF (COMMENTS_I IS NOT NULL OR LENGTH(LTRIM(RTRIM(COMMENTS_I))) > 0)
    THEN

      BEGIN

      SELECT LDTEXT INTO LDTEXT_T FROM BATCH_MAXIMO.LBL_LONGDESCRIPTION
      WHERE LDKEY=LDKEY_T2
      AND   LDOWNERTABLE='LBL_WORKREQ'
      AND   LDOWNERCOL='DESCRIPTION';


       UPDATE BATCH_MAXIMO.LBL_LONGDESCRIPTION
       SET LDTEXT=TO_CLOB(COMMENTS_I)
       WHERE LDKEY=LDKEY_T2
       AND   LDOWNERTABLE='LBL_WORKREQ'
       AND   LDOWNERCOL='DESCRIPTION';


      EXCEPTION WHEN OTHERS
       THEN

         LDKEY_T2 := LDKEY_T;

         INSERT INTO BATCH_MAXIMO.LBL_LONGDESCRIPTION
        (LDKEY,LDOWNERTABLE, LDOWNERCOL,LDTEXT)
         VALUES
        (LDKEY_T2,'LBL_WORKREQ','DESCRIPTION',TO_CLOB(COMMENTS_I));
     END;


    ELSE -- IF COMMENTS_I IS NULL

     BEGIN

      DELETE FROM BATCH_MAXIMO.LBL_LONGDESCRIPTION
      WHERE LDKEY=LDKEY_T2
      AND   LDOWNERTABLE='LBL_WORKREQ'
      AND   LDOWNERCOL='DESCRIPTION';


      EXCEPTION WHEN OTHERS THEN
        NULL;
      END;

   END IF; --  IF (COMMENT_I IS NOT NULL OR LENGTH(LTRIM(RTRIM(COMMENTS_I))) > 0)

  UPDATE BATCH_MAXIMO.LBL_WORKREQ
  SET WO1=LTRIM(RTRIM(WO1_I)), BUILDING=BUILDING_I, ROOM=ROOM_I,
  LOCATION_NOTES=LOCATION_NOTES_I,
  ROUTINE_CUSTODIAL=ROUTINE_CUSTODIAL_I, GLACCOUNT=RTRIM(LTRIM(GLACCOUNT_I)),
  TARGSTARTDATE=TARGSTARTDATE_T, TARGCOMPDATE=TARGCOMPDATE_T,
  CHANGEDATE=CURRENTDATE_T, CHANGEBY=CHANGEBY_I, LDKEY=LDKEY_T2
  WHERE WONUM=WONUM_I;


 IF (BUILDING_I IS NOT NULL AND LTRIM(BUILDING_I) !='--SELECT--' ) THEN
    LOCATION_T := BUILDING_I;
  END IF;

  IF (BUILDING_I IS NOT NULL AND LTRIM(BUILDING_I) !='--SELECT--' AND
      ROOM_I     IS NOT NULL AND LTRIM(ROOM_I)     !='--SELECT--' ) THEN
      LOCATION_T := RTRIM(LTRIM(LOCATION_T || '-' || ROOM_I));
  END IF;

  -- PREPARE LONG DESCRIPTION
  LDTEXT_T :=' ';

 IF (NVL(ROUTINE_CUSTODIAL_I,' ') ='Y') THEN
      LDTEXT_T :=LDTEXT_T || 'ROUTINE CUSTODIAL SERVICES: YES ' || LDTEXT_DELIMIT_T;
  ELSE
      LDTEXT_T :=LDTEXT_T || 'ROUTINE CUSTODIAL SERVICES: NO '  || LDTEXT_DELIMIT_T;
  END IF;

  IF (LOCATION_NOTES_I IS NOT NULL) THEN
    LDTEXT_T :=LDTEXT_T || 'LOCATION NOTES: '  || LOCATION_NOTES_I || LDTEXT_DELIMIT_T;
  ELSE
    LDTEXT_T :=LDTEXT_T || 'LOCATION NOTES: NOT SPECIFIED' || LDTEXT_DELIMIT_T;
  END IF;

  LDTEXT_T :=LDTEXT_T || 'DATE NEEDED: ' || TO_CHAR(TARGCOMPDATE_T,'MM/DD/YYYY') || LDTEXT_DELIMIT_T;

  IF (COMMENTS_I IS NOT NULL) THEN
     LDTEXT_T :=LDTEXT_T || 'COMMENTS: ' || COMMENTS_I || LDTEXT_DELIMIT_T;
  END IF;

   LDTEXT_T :=LTRIM(RTRIM(LDTEXT_T));

   UPDATE MAXIMO.LONGDESCRIPTION
   SET LDTEXT=TO_CLOB(LDTEXT_T)
   WHERE LDKEY=LDKEY_T
   AND  LDOWNERTABLE='WORKORDER'
   AND  LDOWNERCOL='DESCRIPTION';

   UPDATE MAXIMO.WORKORDER
   SET WO1=LTRIM(RTRIM(WO1_I)), STATUS=STATUS_T,
   TARGSTARTDATE=TARGSTARTDATE_T, TARGCOMPDATE=TARGCOMPDATE_T,
   PHONE=PHONE_I, GLACCOUNT=RTRIM(LTRIM(GLACCOUNT_I)), LOCATION=LOCATION_T,
   CHANGEDATE=CURRENTDATE_T, CHANGEBY=CHANGEBY_I,
   LBL_RELEASE_STATUS=LBL_WORKREQ_PKG.get_release_location(location_T),
   CALCPRIORITY= LBL_WORKREQ_PKG.get_loc_priority(LOCATION_T),
   ASSETLOCPRIORITY= LBL_WORKREQ_PKG.get_loc_priority(LOCATION_T)
   WHERE ORGID='LBNL'
   AND   SITEID='FAC'
   AND   WONUM=WONUM_I;

     -- FOR MAXIMO RELEASE 7.5

   IF (LOCATION_T IS NOT NULL) THEN

    BEGIN
     SELECT LOCATION  INTO OLD_LOCATION_T
     FROM   MULTIASSETLOCCI
     WHERE  RECORDKEY=WONUM_I
     AND    RECORDCLASS='WORKORDER'
     AND    ORGID='LBNL'
     AND    SITEID='FAC';

     IF (OLD_LOCATION_T !=LOCATION_T) THEN

      UPDATE   MULTIASSETLOCCI
      SET      LOCATION=LOCATION_T
      WHERE    RECORDKEY=WONUM_I
      AND      RECORDCLASS='WORKORDER'
      AND      ORGID='LBNL'
      AND      SITEID='FAC';

    END IF;

   EXCEPTION WHEN NO_DATA_FOUND THEN

    IF (LOCATION_T IS NOT NULL) THEN
        INSERT INTO MULTIASSETLOCCI
          (RECORDKEY,
           PROGRESS,
          LOCATION,
          REPLACEMENTSITE,
          LANGCODE,
          HASLD,
          ISPRIMARY,
          WORKORGID,
          MULTIID,
          PERFORMMOVETO,
          WORKSITEID,
          ORGID,
          SITEID,
          RECORDCLASS,
          TOTALWORKUNITS
          ) VALUES
          (WONUM_I,
           0,
           LOCATION_T,
           'FAC',
           'EN',
           0,
           1,
           'LBNL',
           MULTIASSETLOCCISEQ.NEXTVAL,
           0,
           'FAC',
           'LBNL',
           'FAC',
           'WORKORDER',
           1);
       END IF;
    END;
  END IF;  -- IF (LOCATION_T IS NOT NULL) THEN



 END IF; --  IF UPPER(MODE_I) !='DELETE' THEN

 RETURN WONUM_I;

 END;

--****************************************************************************
--* FUNCTION TO UDATE PEOPLE MOVE WORK REQUEST TO THE WORKORDER RELATED TABLES.
--  AFTER SUCCESSFUL INSERT, IT RETURNS WORK ORDER NUMBER
--****************************************************************************
FUNCTION UPDATE_PEOPLE_WORKREQ(
  MODE_I             IN VARCHAR2,
  WONUM_I            IN MAXIMO.WORKORDER.WONUM%TYPE,
  REPORTEDBY_I       IN BATCH_MAXIMO.LBL_WORKREQ.REPORTEDBY%TYPE,
  PHONE_I            IN BATCH_MAXIMO.LBL_WORKREQ.PHONE%TYPE,
  WO1_I              IN BATCH_MAXIMO.LBL_WORKREQ.WO1%TYPE,
  BUILDING_I         IN MAXIMO.LOCATIONS.LOCATION%TYPE,
  ROOM_I             IN MAXIMO.LOCATIONS.LOCATION%TYPE,
  TO_BUILDING_I      IN MAXIMO.LOCATIONS.LOCATION%TYPE,
  TO_ROOM_I          IN MAXIMO.LOCATIONS.LOCATION%TYPE,
  LOCATION_NOTES_I   IN BATCH_MAXIMO.LBL_WORKREQ.LOCATION_NOTES%TYPE,
  HAZARDS_I          IN BATCH_MAXIMO.LBL_WORKREQ.HAZARDS%TYPE,
  GLACCOUNT_I        IN BATCH_MAXIMO.LBL_WORKREQ.GLACCOUNT%TYPE,
  DESCRIPTION_I      IN BATCH_MAXIMO.LBL_WORKREQ.DESCRIPTION%TYPE,
  COMMENTS_I         IN VARCHAR2,
  TARGCOMPDATE_I     IN VARCHAR2,
  CHANGEBY_I         IN BATCH_MAXIMO.LBL_WORKREQ.CHANGEBY%TYPE)
RETURN MAXIMO.WORKORDER.WONUM%TYPE

IS

   WONUM_T   MAXIMO.WORKORDER.WONUM%TYPE;
   GLACCOUNT_T  BATCH_MAXIMO.LBL_WORKREQ.GLACCOUNT%TYPE;
   STATUS_T     MAXIMO.WORKORDER.STATUS%TYPE;
   LDKEY_T   MAXIMO.LONGDESCRIPTION.LDKEY%TYPE;
   LDKEY_T2  MAXIMO.LONGDESCRIPTION.LDKEY%TYPE := NULL;
   LOCATION_T MAXIMO.WORKORDER.LOCATION%TYPE;
   WOREQ_NUM_T BATCH_MAXIMO.LBL_WORKREQ.WORKREQ_NUM%TYPE;
   LDTEXT_T  MAXIMO.LONGDESCRIPTION.LDTEXT%TYPE;
   TARGSTARTDATE_T MAXIMO.WORKORDER.TARGSTARTDATE%TYPE;
   CURRENTDATE_T   MAXIMO.WORKORDER.TARGSTARTDATE%TYPE;
   TARGCOMPDATE_T  MAXIMO.WORKORDER.TARGCOMPDATE%TYPE;
   LEADCRAFT_T    MAXIMO.WORKORDER.LEADCRAFT%TYPE :=NULL;
   SUPERVISOR_T   MAXIMO.WORKORDER.SUPERVISOR%TYPE :=NULL;
   DESCRIPTION_T  MAXIMO.WORKORDER.DESCRIPTION%TYPE :=NULL;
   OLD_LOCATION_T MAXIMO.WORKORDER.LOCATION%TYPE;

BEGIN
  SELECT SYSDATE INTO CURRENTDATE_T FROM DUAL;


  IF UPPER(MODE_I)='DELETE' THEN
 -- CANCEL THE WORK ORDER
     INSERT INTO MAXIMO.WOSTATUS
     (WONUM, STATUS, CHANGEDATE, CHANGEBY,
      ORGID, SITEID, WOSTATUS.WOSTATUSID)
     VALUES
     (WONUM_I, 'CAN',CURRENTDATE_T, CHANGEBY_I,
     'LBNL','FAC',MAXIMO.WOSTATUSSEQ.NEXTVAL);

     UPDATE MAXIMO.WORKORDER
     SET STATUS='CAN', STATUSDATE=CURRENTDATE_T,
     CHANGEDATE=CURRENTDATE_T,
     CHANGEBY=CHANGEBY_I, HISTORYFLAG=1
     WHERE   ORGID='LBNL'
     AND     SITEID='FAC'
     AND     WONUM=WONUM_I;

     -- MXES 7/9/09
    UPDATE MAXIMO.WORKVIEW
    SET STATUS='CAN',HISTORYFLAG=1
    WHERE RECORDKEY=WONUM_I
    AND   CLASS='WORKORDER'
    AND   SITEID='FAC'
    AND   ORGID='LBNL'  ;

  END IF;   --  IF UPPER(MODE_I)='DELETE' THEN

 IF UPPER(MODE_I) !='DELETE' THEN

   -- IF THE VALUE OF OLD GLACCOUNT IS DIFFERENT THAN THE NEW ONE,
   -- AND IT IS APPROVED THEN, SET THE STATUS OF THE WORK
   -- ORDER TO WAPPR

   SELECT  A.GLACCOUNT, B.STATUS,
           B.WORKORDERID, A.LDKEY
   INTO    GLACCOUNT_T, STATUS_T,
           LDKEY_T, LDKEY_T2
   FROM    BATCH_MAXIMO.LBL_WORKREQ A, MAXIMO.WORKORDER B
   WHERE   A.WONUM=B.WONUM
   AND     A.WONUM=WONUM_I;


   IF ((GLACCOUNT_T  != GLACCOUNT_I ) AND
       STATUS_T NOT IN ('WAPPR','RFI'))
    THEN

    -- NEW STATUS
    STATUS_T := 'WAPPR';

    -- CHANGE THE STATUS OF WORK ORDER TO WAPPR
     INSERT INTO MAXIMO.WOSTATUS
     (WONUM, STATUS, CHANGEDATE, CHANGEBY,
      ORGID, SITEID, WOSTATUS.WOSTATUSID, GLACCOUNT)
     VALUES
     (WONUM_I, STATUS_T, CURRENTDATE_T, CHANGEBY_I,
     'LBNL','FAC', MAXIMO.WOSTATUSSEQ.NEXTVAL, GLACCOUNT_T);
   END IF;

  SELECT TO_DATE(TARGCOMPDATE_I,'MM/DD/YYYY'),
         TO_DATE(TARGCOMPDATE_I,'MM/DD/YYYY')
  INTO  TARGSTARTDATE_T, TARGCOMPDATE_T
  FROM DUAL;


  -- NOW START UPDATING TABLES

    IF (COMMENTS_I IS NOT NULL OR LENGTH(LTRIM(RTRIM(COMMENTS_I))) > 0)
    THEN

      BEGIN

      SELECT LDTEXT INTO LDTEXT_T FROM BATCH_MAXIMO.LBL_LONGDESCRIPTION
      WHERE LDKEY=LDKEY_T2
      AND   LDOWNERTABLE='LBL_WORKREQ'
      AND   LDOWNERCOL='DESCRIPTION';


       UPDATE BATCH_MAXIMO.LBL_LONGDESCRIPTION
       SET LDTEXT=TO_CLOB(COMMENTS_I)
       WHERE LDKEY=LDKEY_T2
       AND   LDOWNERTABLE='LBL_WORKREQ'
       AND   LDOWNERCOL='DESCRIPTION';


      EXCEPTION WHEN OTHERS
       THEN

         LDKEY_T2 := LDKEY_T;

         INSERT INTO BATCH_MAXIMO.LBL_LONGDESCRIPTION
        (LDKEY,LDOWNERTABLE, LDOWNERCOL,LDTEXT)
         VALUES
        (LDKEY_T2,'LBL_WORKREQ','DESCRIPTION',TO_CLOB(COMMENTS_I));
     END;

     LDKEY_T2 := LDKEY_T;

    ELSE -- IF COMMENTS_I IS NULL

     BEGIN

      DELETE FROM BATCH_MAXIMO.LBL_LONGDESCRIPTION
      WHERE LDKEY=LDKEY_T2
      AND   LDOWNERTABLE='LBL_WORKREQ'
      AND   LDOWNERCOL='DESCRIPTION';

      EXCEPTION WHEN OTHERS THEN
        NULL;
      END;

   END IF; --  IF (COMMENT_I IS NOT NULL OR LENGTH(LTRIM(RTRIM(COMMENTS_I))) > 0)

  UPDATE BATCH_MAXIMO.LBL_WORKREQ
  SET WO1=LTRIM(RTRIM(WO1_I)), BUILDING=BUILDING_I, ROOM=ROOM_I,
  LOCATION_NOTES=LOCATION_NOTES_I, HAZARDS=HAZARDS_I,
  GLACCOUNT=RTRIM(LTRIM(GLACCOUNT_I)),
  FROM_BUILDING=BUILDING_I, FROM_ROOM=ROOM_I,
  TO_BUILDING=TO_BUILDING_I,  TO_ROOM=TO_ROOM_I,
  TARGSTARTDATE=TARGSTARTDATE_T, TARGCOMPDATE=TARGCOMPDATE_T,
  CHANGEDATE=CURRENTDATE_T, CHANGEBY=CHANGEBY_I, LDKEY=LDKEY_T2
  WHERE WONUM=WONUM_I;


 IF (BUILDING_I IS NOT NULL AND LTRIM(BUILDING_I) !='--SELECT--' ) THEN
    LOCATION_T := BUILDING_I;
  END IF;

  IF (BUILDING_I IS NOT NULL AND LTRIM(BUILDING_I) !='--SELECT--' AND
      ROOM_I     IS NOT NULL AND LTRIM(ROOM_I)     !='--SELECT--' ) THEN
      LOCATION_T := RTRIM(LTRIM(LOCATION_T || '-' || ROOM_I));
  END IF;


  -- PREPARE LONG DESCRIPTION
  LDTEXT_T :=' ';

  LDTEXT_T := LDTEXT_T || 'FROM BUILDING: ' || BUILDING_I ||LDTEXT_DELIMIT_T;
  LDTEXT_T := LDTEXT_T || 'FROM ROOM: '     || ROOM_I ||LDTEXT_DELIMIT_T;
  LDTEXT_T := LDTEXT_T || 'TO BUILDING: '   || TO_BUILDING_I ||LDTEXT_DELIMIT_T;
  LDTEXT_T := LDTEXT_T || 'TO ROOM: '       || TO_ROOM_I ||LDTEXT_DELIMIT_T;

  IF (NVL(HAZARDS_I,'Y') ='Y') THEN
      LDTEXT_T :=LDTEXT_T || 'HAZARDS EXIST: YES ' || LDTEXT_DELIMIT_T;
  ELSE
      LDTEXT_T :=LDTEXT_T || 'HAZARDS EXISTS: NO '  || LDTEXT_DELIMIT_T;
  END IF;

  IF LOCATION_NOTES_I IS NOT NULL
   THEN
    LDTEXT_T := LDTEXT_T || 'LOCATION NOTES: ' || LOCATION_NOTES_I ||LDTEXT_DELIMIT_T;
  ELSE
    LDTEXT_T := LDTEXT_T || 'LOCATION NOTES: NOT SPECIFIED '||LDTEXT_DELIMIT_T;
  END IF;

  LDTEXT_T :=LDTEXT_T || 'DATE NEEDED: ' || TO_CHAR(TARGCOMPDATE_T,'MM/DD/YYYY') || LDTEXT_DELIMIT_T;

  IF (COMMENTS_I IS NOT NULL) THEN
     LDTEXT_T :=LDTEXT_T || 'COMMENTS: ' || COMMENTS_I || LDTEXT_DELIMIT_T;
  END IF;

  -- PREPARE SHORT DESCRIPTION
   DESCRIPTION_T :='PEOPLE MOVE REQUEST FROM  ' || LOCATION_T;

   IF (TO_BUILDING_I IS NOT NULL AND LTRIM(TO_BUILDING_I) !='--SELECT--' ) THEN
      DESCRIPTION_T := DESCRIPTION_T || ' TO ' || TO_BUILDING_I;
   END IF;

  IF (TO_BUILDING_I IS NOT NULL AND LTRIM(TO_BUILDING_I) !='--SELECT--' AND
      TO_ROOM_I     IS NOT NULL AND LTRIM(TO_ROOM_I)     !='--SELECT--' ) THEN
      DESCRIPTION_T := DESCRIPTION_T || '-' || TO_ROOM_I;
  END IF;

   LDTEXT_T :=LTRIM(RTRIM(LDTEXT_T));

   UPDATE MAXIMO.LONGDESCRIPTION
   SET LDTEXT=TO_CLOB(LDTEXT_T)
   WHERE LDKEY=LDKEY_T
   AND  LDOWNERTABLE='WORKORDER'
   AND  LDOWNERCOL='DESCRIPTION';

   UPDATE MAXIMO.WORKORDER
   SET DESCRIPTION=DESCRIPTION_T, WO1=LTRIM(RTRIM(WO1_I)), STATUS=STATUS_T,
   TARGSTARTDATE=TARGSTARTDATE_T, TARGCOMPDATE=TARGCOMPDATE_T,
   PHONE=PHONE_I, GLACCOUNT=RTRIM(LTRIM(GLACCOUNT_I)), LOCATION=LOCATION_T,
   CHANGEDATE=CURRENTDATE_T, CHANGEBY=CHANGEBY_I,
   LBL_RELEASE_STATUS=LBL_WORKREQ_PKG.get_release_location(location_T),
   CALCPRIORITY= LBL_WORKREQ_PKG.get_loc_priority(LOCATION_T),
   ASSETLOCPRIORITY= LBL_WORKREQ_PKG.get_loc_priority(LOCATION_T)
   WHERE ORGID='LBNL'
   AND   SITEID='FAC'
   AND   WONUM=WONUM_I;

   -- MXES 7/9/09
    UPDATE MAXIMO.WORKVIEW
    SET  DESCRIPTION=DESCRIPTION_T, STATUS=STATUS_T,
    PRIORITY= LBL_WORKREQ_PKG.get_loc_priority(LOCATION_T)
    WHERE RECORDKEY=WONUM_I
    AND   CLASS='WORKORDER'
    AND   SITEID='FAC'
    AND   ORGID='LBNL'  ;

  -- FOR MAXIMO RELEASE 7.5

   IF (LOCATION_T IS NOT NULL) THEN

    BEGIN
     SELECT LOCATION  INTO OLD_LOCATION_T
     FROM   MULTIASSETLOCCI
     WHERE  RECORDKEY=WONUM_I
     AND    RECORDCLASS='WORKORDER'
     AND    ORGID='LBNL'
     AND    SITEID='FAC';

     IF (OLD_LOCATION_T !=LOCATION_T) THEN

      UPDATE   MULTIASSETLOCCI
      SET      LOCATION=LOCATION_T
      WHERE    RECORDKEY=WONUM_I
      AND      RECORDCLASS='WORKORDER'
      AND      ORGID='LBNL'
      AND      SITEID='FAC';

    END IF;

   EXCEPTION WHEN NO_DATA_FOUND THEN

    IF (LOCATION_T IS NOT NULL) THEN
        INSERT INTO MULTIASSETLOCCI
          (RECORDKEY,
           PROGRESS,
          LOCATION,
          REPLACEMENTSITE,
          LANGCODE,
          HASLD,
          ISPRIMARY,
          WORKORGID,
          MULTIID,
          PERFORMMOVETO,
          WORKSITEID,
          ORGID,
          SITEID,
          RECORDCLASS,
          TOTALWORKUNITS
          ) VALUES
          (WONUM_I,
           0,
           LOCATION_T,
           'FAC',
           'EN',
           0,
           1,
           'LBNL',
           MULTIASSETLOCCISEQ.NEXTVAL,
           0,
           'FAC',
           'LBNL',
           'FAC',
           'WORKORDER',
           1);
       END IF;
    END;
  END IF;  -- IF (LOCATION_T IS NOT NULL) THEN


 END IF; --  IF UPPER(MODE_I) !='DELETE' THEN

 RETURN WONUM_I;

 END;

--****************************************************************************
--* FUNCTION TO UPDATE CONF ROOM WORK REQUEST TO THE WORKORDER RELATED TABLES.
--  AFTER SUCCESSFUL INSERT, IT RETURNS WORK ORDER NUMBER
--****************************************************************************-
FUNCTION UPDATE_CONF_WORKREQ(
  MODE_I             IN VARCHAR2,
  WONUM_I            IN MAXIMO.WORKORDER.WONUM%TYPE,
  REPORTEDBY_I       IN BATCH_MAXIMO.LBL_WORKREQ.REPORTEDBY%TYPE,
  PHONE_I            IN BATCH_MAXIMO.LBL_WORKREQ.PHONE%TYPE,
  WO1_I              IN BATCH_MAXIMO.LBL_WORKREQ.WO1%TYPE,
  BUILDING_I         IN MAXIMO.LOCATIONS.LOCATION%TYPE,
  ROOM_I             IN MAXIMO.LOCATIONS.LOCATION%TYPE,
  GLACCOUNT_I        IN BATCH_MAXIMO.LBL_WORKREQ.GLACCOUNT%TYPE,
  DESCRIPTION_I      IN BATCH_MAXIMO.LBL_WORKREQ.DESCRIPTION%TYPE,
  COMMENTS_I         IN VARCHAR2,
  TARGSTARTDATE_I    IN VARCHAR2,
  TARGSTARTTIME_I    IN VARCHAR2,
  TARGCOMPDATE_I     IN VARCHAR2,
  TARGCOMPTIME_I     IN VARCHAR2,
  CONF_BUILDING_I    IN BATCH_MAXIMO.LBL_WORKREQ.CONF_BUILDING%TYPE,
  CONF_ROOM_NUMBER_I IN BATCH_MAXIMO.LBL_WORKREQ.CONF_ROOM_NUMBER%TYPE,
  NUMBER_OF_TABLES_I  IN BATCH_MAXIMO.LBL_WORKREQ.NUMBER_OF_TABLES%TYPE,
  NUMBER_OF_CHAIRS_I IN BATCH_MAXIMO.LBL_WORKREQ.NUMBER_OF_CHAIRS%TYPE,
  CONF_ROOM_OPTION_I IN BATCH_MAXIMO.LBL_WORKREQ.CONF_ROOM_OPTION%TYPE,
  TABLES_CHAIRS_REQD_I IN BATCH_MAXIMO.LBL_WORKREQ.TABLES_CHAIRS_REQD%TYPE,
  CHANGEBY_I         IN BATCH_MAXIMO.LBL_WORKREQ.CHANGEBY%TYPE)
RETURN MAXIMO.WORKORDER.WONUM%TYPE

 IS

   STATUS_T      MAXIMO.WORKORDER.STATUS%TYPE;
   GLACCOUNT_T   MAXIMO.WORKORDER.GLACCOUNT%TYPE;
   LDKEY_T       MAXIMO.LONGDESCRIPTION.LDKEY%TYPE;
   LDKEY_T2      MAXIMO.LONGDESCRIPTION.LDKEY%TYPE := NULL;
   LOCATION_T    MAXIMO.WORKORDER.LOCATION%TYPE;
   LDTEXT_T      MAXIMO.LONGDESCRIPTION.LDTEXT%TYPE;
   TARGSTARTDATE_T MAXIMO.WORKORDER.TARGSTARTDATE%TYPE;
   TARGCOMPDATE_T  MAXIMO.WORKORDER.TARGCOMPDATE%TYPE;
   CURRENTDATE_T   MAXIMO.WORKORDER.TARGSTARTDATE%TYPE;
   LEADCRAFT_T     MAXIMO.WORKORDER.LEADCRAFT%TYPE :=NULL;
   SUPERVISOR_T    MAXIMO.WORKORDER.SUPERVISOR%TYPE :=NULL;
   SELECTLIST1_T   MAXIMO.MAXVARS.VARVALUE%TYPE;
   SELECTLIST2_T   MAXIMO.MAXVARS.VARVALUE%TYPE;
   SELECTLIST3_T   MAXIMO.MAXVARS.VARVALUE%TYPE;
   DESCRIPTION_T   MAXIMO.WORKORDER.DESCRIPTION%TYPE;
   OLD_LOCATION_T    MAXIMO.WORKORDER.LOCATION%TYPE;

 BEGIN

 SELECT SYSDATE INTO CURRENTDATE_T FROM DUAL;


  IF UPPER(MODE_I)='DELETE' THEN

      -- CANCEL THE WORK ORDER
     INSERT INTO MAXIMO.WOSTATUS
     (WONUM, STATUS, CHANGEDATE, CHANGEBY,
      ORGID, SITEID, WOSTATUS.WOSTATUSID)
     VALUES
     (WONUM_I, 'CAN',CURRENTDATE_T, CHANGEBY_I,
     'LBNL','FAC', MAXIMO.WOSTATUSSEQ.NEXTVAL);

     UPDATE MAXIMO.WORKORDER
     SET STATUS='CAN', STATUSDATE=CURRENTDATE_T,
     CHANGEDATE=CURRENTDATE_T,
     CHANGEBY=CHANGEBY_I, HISTORYFLAG=1
     WHERE   ORGID='LBNL'
     AND     SITEID='FAC'
     AND     WONUM=WONUM_I;

    -- MXES 7/9/09
    UPDATE MAXIMO.WORKVIEW
    SET STATUS='CAN',HISTORYFLAG=1
    WHERE RECORDKEY=WONUM_I
    AND   CLASS='WORKORDER'
    AND   SITEID='FAC'
    AND   ORGID='LBNL'  ;

  END IF;   --  IF UPPER(MODE_I)='DELETE' THEN

 IF UPPER(MODE_I) !='DELETE' THEN

    -- IF THE VALUE OF OLD GLACCOUNT IS DIFFERENT THAN THE NEW ONE,
   -- AND IT IS APPROVED THEN, SET THE STATUS OF THE WORK
   -- ORDER TO WAPPR

   SELECT  A.GLACCOUNT, B.STATUS,
           B.WORKORDERID, A.LDKEY
   INTO    GLACCOUNT_T, STATUS_T,
           LDKEY_T, LDKEY_T2
   FROM    BATCH_MAXIMO.LBL_WORKREQ A, MAXIMO.WORKORDER B
   WHERE   A.WONUM=B.WONUM
   AND     A.WONUM=WONUM_I;


   IF ((GLACCOUNT_T  != GLACCOUNT_I ) AND
       STATUS_T NOT IN ('WAPPR','RFI'))
    THEN

    -- NEW STATUS
    STATUS_T := 'WAPPR';

    -- CHANGE THE STATUS OF WORK ORDER TO WAPPR
     INSERT INTO MAXIMO.WOSTATUS
     (WONUM, STATUS, CHANGEDATE, CHANGEBY,
      ORGID, SITEID, WOSTATUS.WOSTATUSID, GLACCOUNT)
     VALUES
     (WONUM_I, STATUS_T, CURRENTDATE_T, CHANGEBY_I,
     'LBNL','FAC', MAXIMO.WOSTATUSSEQ.NEXTVAL, GLACCOUNT_I);
   END IF;

  -- NOW START UPDATING TABLES


  IF (COMMENTS_I IS NOT NULL OR LENGTH(LTRIM(RTRIM(COMMENTS_I))) > 0)
    THEN

      BEGIN

      SELECT LDTEXT INTO LDTEXT_T FROM BATCH_MAXIMO.LBL_LONGDESCRIPTION
      WHERE LDKEY=LDKEY_T2
      AND   LDOWNERTABLE='LBL_WORKREQ'
      AND   LDOWNERCOL='DESCRIPTION';


       UPDATE BATCH_MAXIMO.LBL_LONGDESCRIPTION
       SET LDTEXT=TO_CLOB(COMMENTS_I)
       WHERE LDKEY=LDKEY_T2
       AND   LDOWNERTABLE='LBL_WORKREQ'
       AND   LDOWNERCOL='DESCRIPTION';

      EXCEPTION WHEN OTHERS
       THEN

         LDKEY_T2 := LDKEY_T;

         INSERT INTO BATCH_MAXIMO.LBL_LONGDESCRIPTION
        (LDKEY,LDOWNERTABLE, LDOWNERCOL,LDTEXT)
         VALUES
        (LDKEY_T2,'LBL_WORKREQ','DESCRIPTION',TO_CLOB(COMMENTS_I));
     END;


    ELSE -- IF COMMENTS_I IS NULL

     BEGIN

      DELETE FROM BATCH_MAXIMO.LBL_LONGDESCRIPTION
      WHERE LDKEY=LDKEY_T2
      AND   LDOWNERTABLE='LBL_WORKREQ'
      AND   LDOWNERCOL='DESCRIPTION';

      EXCEPTION WHEN OTHERS THEN
        NULL;
      END;

   END IF; --  IF (COMMENT_I IS NOT NULL OR LENGTH(LTRIM(RTRIM(COMMENTS_I))) > 0)

  -- PREPARE TARGET START AND TARGET COMPLETE DATE BASED ON
  -- TIME COMPONENTS

  IF (TARGSTARTTIME_I IS NOT NULL AND LENGTH(TARGSTARTTIME_I)>0)
   THEN
      SELECTLIST1_T := ' TO_DATE(' || '''' || TARGSTARTDATE_I || ' ' || TARGSTARTTIME_I
                      || '''' || ',' || '''' || 'MM/DD/YYYY HH:MI AM' || '''' ||  ')';
  ELSE
      SELECTLIST1_T := ' TO_DATE(' || '''' || TARGSTARTDATE_I ||
                       '''' ||  ','  || '''' || 'MM/DD/YYYY' || '''' || ')';
  END IF;

  IF (TARGCOMPTIME_I IS NOT NULL AND LENGTH(TARGCOMPTIME_I)>0)
   THEN
      SELECTLIST2_T := ' TO_DATE(' || '''' || TARGCOMPDATE_I ||
                       ' ' || TARGCOMPTIME_I || ''''||
                       ',' || '''' || 'MM/DD/YYYY HH:MI AM' || '''' ||
                       ')';
  ELSE
      SELECTLIST2_T := ' TO_DATE(' || '''' || TARGCOMPDATE_I ||
                       '''' ||  ','  || '''' || 'MM/DD/YYYY' || '''' || ')';
  END IF;


  SELECTLIST3_T   :=' SELECT ' || SELECTLIST1_T || ' , ' || SELECTLIST2_T ;
  SELECTLIST3_T   := SELECTLIST3_T  || ' FROM DUAL';

  EXECUTE IMMEDIATE SELECTLIST3_T INTO TARGSTARTDATE_T, TARGCOMPDATE_T;

  SELECT SYSDATE
  INTO CURRENTDATE_T
  FROM DUAL;


  -- NOW START UPDATING TABLES
  -- PREPARE LOCATION ECORD INTO THE WORK ORDER RELATED TABLES

  IF (CONF_BUILDING_I IS NOT NULL AND LTRIM(CONF_BUILDING_I) !='--SELECT--' ) THEN
    LOCATION_T := CONF_BUILDING_I;
  END IF;

  IF (CONF_BUILDING_I IS NOT NULL     AND LTRIM(CONF_BUILDING_I) !='--SELECT--' AND
      CONF_ROOM_NUMBER_I  IS NOT NULL AND LTRIM(CONF_ROOM_NUMBER_I)  !='--SELECT--' ) THEN
    LOCATION_T := RTRIM(LTRIM(LOCATION_T || '-' || CONF_ROOM_NUMBER_I));
  END IF;

  -- PREPARE LONG DESCRIPTION
  LDTEXT_T :=' ';

   IF (CONF_BUILDING_I IS NOT NULL) THEN
     LDTEXT_T :=LDTEXT_T || 'CONFERENCE BUILDING: ' || CONF_BUILDING_I || LDTEXT_DELIMIT_T;
  END IF;

  IF (LTRIM(CONF_ROOM_NUMBER_I) !='--SELECT--') THEN
     LDTEXT_T :=LDTEXT_T || 'CONFERENCE ROOM: ' || CONF_ROOM_NUMBER_I || LDTEXT_DELIMIT_T;
  ELSE
     LDTEXT_T :=LDTEXT_T || 'CONFERENCE ROOM: NOT SPECIFIED' || LDTEXT_DELIMIT_T;
  END IF;

  IF (CONF_ROOM_OPTION_I IS NOT NULL) THEN
     LDTEXT_T :=LDTEXT_T || 'CONFERENCE ROOM OPTION: ' || CONF_ROOM_OPTION_I || LDTEXT_DELIMIT_T;
  END IF;

  IF (TABLES_CHAIRS_REQD_I='Y') THEN
     LDTEXT_T :=LDTEXT_T || 'TABLES AND CHAIRS REQUIRED : ' || 'YES' || LDTEXT_DELIMIT_T;
  ELSE
     LDTEXT_T :=LDTEXT_T || 'TABLES AND CHAIRS REQUIRED : ' || 'NO'  || LDTEXT_DELIMIT_T;
  END IF;

  IF (NUMBER_OF_TABLES_I IS NOT NULL) THEN
     LDTEXT_T :=LDTEXT_T || 'NUMBER OF TABLES : ' || NUMBER_OF_TABLES_I || LDTEXT_DELIMIT_T;
  ELSE
     LDTEXT_T :=LDTEXT_T || 'NUMBER OF TABLES : ' || 'NOT SPECIFIED'  || LDTEXT_DELIMIT_T;
  END IF;


  IF (NUMBER_OF_CHAIRS_I IS NOT NULL) THEN
     LDTEXT_T :=LDTEXT_T || 'NUMBER OF CHAIRS : ' || NUMBER_OF_CHAIRS_I || LDTEXT_DELIMIT_T;
  ELSE
     LDTEXT_T :=LDTEXT_T || 'NUMBER OF CHAIRS : ' || 'NOT SPECIFIED'  || LDTEXT_DELIMIT_T;
  END IF;

 IF (TARGSTARTDATE_I IS NOT NULL) THEN
    LDTEXT_T := LDTEXT_T ||'CONFERENCE ROOM SETUP START DATE/TIME: ' ||
                TARGSTARTDATE_I || ' '|| NVL(TARGSTARTTIME_I,' ')
                || LDTEXT_DELIMIT_T;
 END IF;

 IF (TARGCOMPDATE_I IS NOT NULL) THEN
    LDTEXT_T := LDTEXT_T ||  'CONFERENCE ROOM BREAKUP DATE/TIME: ' ||
                TARGCOMPDATE_I || ' '|| NVL(TARGCOMPTIME_I,' ')
                || LDTEXT_DELIMIT_T;
 END IF;

  IF (COMMENTS_I IS NOT NULL) THEN
     LDTEXT_T :=LDTEXT_T || 'COMMENTS: ' || COMMENTS_I || LDTEXT_DELIMIT_T;
  END IF;

  LDTEXT_T :=LTRIM(RTRIM(LDTEXT_T));

  IF (TABLES_CHAIRS_REQD_I ='Y') THEN

    SELECT VARVALUE  INTO LEADCRAFT_T
    FROM MAXIMO.LBL_MAXVARS
    WHERE VARNAME='WOREQ_CONF_TABLES_LEADCRAFT';


    SELECT VARVALUE  INTO SUPERVISOR_T
    FROM MAXIMO.LBL_MAXVARS
    WHERE VARNAME='WOREQ_CONF_TABLES_SUPERVISOR';

  ELSE
    SELECT VARVALUE  INTO LEADCRAFT_T
    FROM MAXIMO.LBL_MAXVARS
    WHERE VARNAME='WOREQ_CONF_NON_TABLES_LEADCRAFT';


    SELECT VARVALUE  INTO SUPERVISOR_T
    FROM MAXIMO.LBL_MAXVARS
    WHERE VARNAME='WOREQ_CONF_NON_TABLES_SUPERVISOR';

  END IF;

   DESCRIPTION_T :='CONFERENCE ROOM SETUP FOR ' || LOCATION_T;

   UPDATE BATCH_MAXIMO.LBL_WORKREQ
   SET WO1=LTRIM(RTRIM(WO1_I)), BUILDING=BUILDING_I,
   ROOM=DECODE(LTRIM(CONF_ROOM_NUMBER_I),'--SELECT--',NULL,CONF_ROOM_NUMBER_I),
   GLACCOUNT=RTRIM(LTRIM(GLACCOUNT_I)),
   TARGSTARTDATE=TARGSTARTDATE_T, TARGCOMPDATE=TARGCOMPDATE_T,
   TARGSTARTTIME=TARGSTARTTIME_I , TARGCOMPTIME=TARGCOMPTIME_I,
   CHANGEDATE=CURRENTDATE_T, CHANGEBY=CHANGEBY_I, LDKEY=LDKEY_T2,
   CONF_ROOM_NUMBER=DECODE(LTRIM(CONF_ROOM_NUMBER_I),'--SELECT--','NOT SPECIFIED',CONF_ROOM_NUMBER_I),
   CONF_ROOM_OPTION=CONF_ROOM_OPTION_I,
   TABLES_CHAIRS_REQD=TABLES_CHAIRS_REQD_I,
   CONF_BUILDING=CONF_BUILDING_I, NUMBER_OF_TABLES=NUMBER_OF_TABLES_I,
   NUMBER_OF_CHAIRS=NUMBER_OF_CHAIRS_I
   WHERE WONUM=WONUM_I;

   UPDATE MAXIMO.LONGDESCRIPTION
   SET LDTEXT=TO_CLOB(LDTEXT_T)
   WHERE LDKEY=LDKEY_T
   AND  LDOWNERTABLE='WORKORDER'
   AND  LDOWNERCOL='DESCRIPTION';

   UPDATE MAXIMO.WORKORDER
   SET WO1=LTRIM(RTRIM(WO1_I)), STATUS=STATUS_T, DESCRIPTION=DESCRIPTION_T,
   TARGSTARTDATE=TARGSTARTDATE_T, TARGCOMPDATE=TARGCOMPDATE_T,
   PHONE=PHONE_I, GLACCOUNT=RTRIM(LTRIM(GLACCOUNT_I)), LOCATION=LOCATION_T,
   CHANGEDATE=CURRENTDATE_T, CHANGEBY=CHANGEBY_I, SUPERVISOR=SUPERVISOR_T,
   LEADCRAFT=LEADCRAFT_T,
   LBL_RELEASE_STATUS=LBL_WORKREQ_PKG.get_release_location(location_T),
   CALCPRIORITY= LBL_WORKREQ_PKG.get_loc_priority(LOCATION_T),
   ASSETLOCPRIORITY= LBL_WORKREQ_PKG.get_loc_priority(LOCATION_T)
   WHERE ORGID='LBNL'
   AND   SITEID='FAC'
   AND   WONUM=WONUM_I;

   -- MXES 7/9/09
   UPDATE MAXIMO.WORKVIEW
   SET DESCRIPTION=DESCRIPTION_T, STATUS=STATUS_T,
   PRIORITY= LBL_WORKREQ_PKG.get_loc_priority(LOCATION_T)
   WHERE RECORDKEY=WONUM_I
   AND   CLASS='WORKORDER'
   AND   SITEID='FAC'
   AND   ORGID='LBNL';


    -- FOR MAXIMO RELEASE 7.5

   IF (LOCATION_T IS NOT NULL) THEN

    BEGIN
     SELECT LOCATION  INTO OLD_LOCATION_T
     FROM   MULTIASSETLOCCI
     WHERE  RECORDKEY=WONUM_I
     AND    RECORDCLASS='WORKORDER'
     AND    ORGID='LBNL'
     AND    SITEID='FAC';

     IF (OLD_LOCATION_T !=LOCATION_T) THEN

      UPDATE   MULTIASSETLOCCI
      SET      LOCATION=LOCATION_T
      WHERE    RECORDKEY=WONUM_I
      AND      RECORDCLASS='WORKORDER'
      AND      ORGID='LBNL'
      AND      SITEID='FAC';

    END IF;

   EXCEPTION WHEN NO_DATA_FOUND THEN

    IF (LOCATION_T IS NOT NULL) THEN
        INSERT INTO MULTIASSETLOCCI
          (RECORDKEY,
           PROGRESS,
          LOCATION,
          REPLACEMENTSITE,
          LANGCODE,
          HASLD,
          ISPRIMARY,
          WORKORGID,
          MULTIID,
          PERFORMMOVETO,
          WORKSITEID,
          ORGID,
          SITEID,
          RECORDCLASS,
          TOTALWORKUNITS
          ) VALUES
          (WONUM_I,
           0,
           LOCATION_T,
           'FAC',
           'EN',
           0,
           1,
           'LBNL',
           MULTIASSETLOCCISEQ.NEXTVAL,
           0,
           'FAC',
           'LBNL',
           'FAC',
           'WORKORDER',
           1);
       END IF;
    END;
  END IF;  -- IF (LOCATION_T IS NOT NULL) THEN


 END IF; --  IF UPPER(MODE_I) !='DELETE' THEN


 RETURN WONUM_I;

END;

--****************************************************************************
--* FUNCTION TO UPDATE TRANSPORTATION WORK REQUEST TO THE WORKORDER RELATED TABLES.
--  AFTER SUCCESSFUL INSERT, IT RETURNS WORK ORDER NUMBER
--****************************************************************************
FUNCTION UPDATE_TRANSP_WORKREQ(
  MODE_I             IN VARCHAR2,
  WONUM_I            IN MAXIMO.WORKORDER.WONUM%TYPE,
  REPORTEDBY_I       IN BATCH_MAXIMO.LBL_WORKREQ.REPORTEDBY%TYPE,
  PHONE_I            IN BATCH_MAXIMO.LBL_WORKREQ.PHONE%TYPE,
  WO1_I              IN BATCH_MAXIMO.LBL_WORKREQ.WO1%TYPE,
  BUILDING_I         IN MAXIMO.LOCATIONS.LOCATION%TYPE,
  ROOM_I             IN MAXIMO.LOCATIONS.LOCATION%TYPE,
  FROM_BUILDING_I    IN MAXIMO.LOCATIONS.LOCATION%TYPE,
  FROM_ROOM_I        IN MAXIMO.LOCATIONS.LOCATION%TYPE,
  TO_BUILDING_I      IN MAXIMO.LOCATIONS.LOCATION%TYPE,
  TO_ROOM_I          IN MAXIMO.LOCATIONS.LOCATION%TYPE,
  LOCATION_NOTES_I   IN BATCH_MAXIMO.LBL_WORKREQ.LOCATION_NOTES%TYPE,
  NUMBER_OF_ITEMS_I  IN BATCH_MAXIMO.LBL_WORKREQ.NUMBER_OF_ITEMS%TYPE,
  TYPE_OF_ITEM_I     IN BATCH_MAXIMO.LBL_WORKREQ.TYPE_OF_ITEM%TYPE,
  ITEM_WEIGHT_I      IN BATCH_MAXIMO.LBL_WORKREQ.ITEM_WEIGHT%TYPE,
  RECYCLE_PICKUP_I   IN BATCH_MAXIMO.LBL_WORKREQ.RECYCLE_PICKUP%TYPE,
  HAZARDS_I          IN BATCH_MAXIMO.LBL_WORKREQ.HAZARDS%TYPE,
  GLACCOUNT_I        IN BATCH_MAXIMO.LBL_WORKREQ.GLACCOUNT%TYPE,
  DESCRIPTION_I      IN BATCH_MAXIMO.LBL_WORKREQ.DESCRIPTION%TYPE,
  COMMENTS_I         IN VARCHAR2,
  TARGCOMPDATE_I     IN VARCHAR2,
  CLEANUP_I          IN BATCH_MAXIMO.LBL_WORKREQ.CLEANUP%TYPE,
  CHANGEBY_I         IN BATCH_MAXIMO.LBL_WORKREQ.CHANGEBY%TYPE)
 RETURN MAXIMO.WORKORDER.WONUM%TYPE

 IS

   STATUS_T      MAXIMO.WORKORDER.STATUS%TYPE;
   GLACCOUNT_T   MAXIMO.WORKORDER.GLACCOUNT%TYPE;
   LDKEY_T       MAXIMO.LONGDESCRIPTION.LDKEY%TYPE;
   LDKEY_T2      MAXIMO.LONGDESCRIPTION.LDKEY%TYPE := NULL;
   LOCATION_T    MAXIMO.WORKORDER.LOCATION%TYPE;
   LDTEXT_T      MAXIMO.LONGDESCRIPTION.LDTEXT%TYPE;
   TARGSTARTDATE_T MAXIMO.WORKORDER.TARGSTARTDATE%TYPE;
   TARGCOMPDATE_T  MAXIMO.WORKORDER.TARGCOMPDATE%TYPE;
   CURRENTDATE_T   MAXIMO.WORKORDER.TARGSTARTDATE%TYPE;
   LEADCRAFT_T     MAXIMO.WORKORDER.LEADCRAFT%TYPE :=NULL;
   SUPERVISOR_T    MAXIMO.WORKORDER.SUPERVISOR%TYPE :=NULL;
   RECYCLE_PICKUP_T BATCH_MAXIMO.LBL_WORKREQ.RECYCLE_PICKUP%TYPE;
   PICKUP_FROM_T  MAXIMO.WORKORDER.DESCRIPTION%TYPE :=NULL;
   DELIVER_TO_T   MAXIMO.WORKORDER.DESCRIPTION%TYPE :=NULL;
   DESCRIPTION_T  MAXIMO.WORKORDER.DESCRIPTION%TYPE :=NULL;
   OLD_LOCATION_T  MAXIMO.WORKORDER.LOCATION%TYPE;

BEGIN

  SELECT TO_DATE(TARGCOMPDATE_I,'MM/DD/YYYY'),
         TO_DATE(TARGCOMPDATE_I,'MM/DD/YYYY'),
         SYSDATE
  INTO  TARGSTARTDATE_T, TARGCOMPDATE_T, CURRENTDATE_T
  FROM DUAL;

  IF UPPER(MODE_I)='DELETE' THEN

      -- CANCEL THE WORK ORDER
     INSERT INTO MAXIMO.WOSTATUS
     (WONUM, STATUS, CHANGEDATE, CHANGEBY,
      ORGID, SITEID, WOSTATUS.WOSTATUSID)
     VALUES
     (WONUM_I, 'CAN',CURRENTDATE_T, CHANGEBY_I,
     'LBNL','FAC', MAXIMO.WOSTATUSSEQ.NEXTVAL);

     UPDATE MAXIMO.WORKORDER
     SET STATUS='CAN', STATUSDATE=CURRENTDATE_T,
     CHANGEDATE=CURRENTDATE_T,
     CHANGEBY=CHANGEBY_I, HISTORYFLAG=1
     WHERE   ORGID='LBNL'
     AND     SITEID='FAC'
     AND     WONUM=WONUM_I;

    -- MXES 7/9/09
    UPDATE MAXIMO.WORKVIEW
    SET STATUS='CAN',HISTORYFLAG=1
    WHERE RECORDKEY=WONUM_I
    AND   CLASS='WORKORDER'
    AND   SITEID='FAC'
    AND   ORGID='LBNL'  ;

  END IF;   --  IF UPPER(MODE_I)='DELETE' THEN

 IF UPPER(MODE_I) !='DELETE' THEN

    -- IF THE VALUE OF OLD GLACCOUNT IS DIFFERENT THAN THE NEW ONE,
   -- AND IT IS APPROVED THEN, SET THE STATUS OF THE WORK
   -- ORDER TO WAPPR

   SELECT  A.GLACCOUNT, B.STATUS, NVL(A.RECYCLE_PICKUP,'N') RECYCLE_PICKUP,
           B.WORKORDERID, A.LDKEY
   INTO    GLACCOUNT_T, STATUS_T, RECYCLE_PICKUP_T,
           LDKEY_T, LDKEY_T2
   FROM    BATCH_MAXIMO.LBL_WORKREQ A, MAXIMO.WORKORDER B
   WHERE   A.WONUM=B.WONUM
   AND     A.WONUM=WONUM_I;


   IF ((GLACCOUNT_T || RECYCLE_PICKUP_T  != GLACCOUNT_I || NVL(RECYCLE_PICKUP_I,'N')) AND
       STATUS_T NOT IN ('WAPPR','RFI'))
    THEN

    -- NEW STATUS
    STATUS_T := 'WAPPR';

    -- CHANGE THE STATUS OF WORK ORDER TO WAPPR
     INSERT INTO MAXIMO.WOSTATUS
     (WONUM, STATUS, CHANGEDATE, CHANGEBY,
      ORGID, SITEID, WOSTATUS.WOSTATUSID, GLACCOUNT)
     VALUES
     (WONUM_I, STATUS_T, CURRENTDATE_T, CHANGEBY_I,
     'LBNL','FAC', MAXIMO.WOSTATUSSEQ.NEXTVAL,GLACCOUNT_I);
   END IF;

  -- NOW START UPDATING TABLES


  IF (COMMENTS_I IS NOT NULL OR LENGTH(LTRIM(RTRIM(COMMENTS_I))) > 0)
    THEN

      BEGIN

      SELECT LDTEXT INTO LDTEXT_T FROM BATCH_MAXIMO.LBL_LONGDESCRIPTION
      WHERE LDKEY=LDKEY_T2
      AND   LDOWNERTABLE='LBL_WORKREQ'
      AND   LDOWNERCOL='DESCRIPTION';


       UPDATE BATCH_MAXIMO.LBL_LONGDESCRIPTION
       SET LDTEXT=TO_CLOB(COMMENTS_I)
       WHERE LDKEY=LDKEY_T2
       AND   LDOWNERTABLE='LBL_WORKREQ'
       AND   LDOWNERCOL='DESCRIPTION';


      EXCEPTION WHEN OTHERS
       THEN

         LDKEY_T2 := LDKEY_T;

         INSERT INTO BATCH_MAXIMO.LBL_LONGDESCRIPTION
        (LDKEY,LDOWNERTABLE, LDOWNERCOL,LDTEXT)
         VALUES
        (LDKEY_T2,'LBL_WORKREQ','DESCRIPTION',TO_CLOB(COMMENTS_I));
     END;


    ELSE -- IF COMMENTS_I IS NULL

     BEGIN

      DELETE FROM BATCH_MAXIMO.LBL_LONGDESCRIPTION
      WHERE LDKEY=LDKEY_T2
      AND   LDOWNERTABLE='LBL_WORKREQ'
      AND   LDOWNERCOL='DESCRIPTION';


      EXCEPTION WHEN OTHERS THEN
        NULL;
      END;
   END IF; --  IF (COMMENT_I IS NOT NULL OR LENGTH(LTRIM(RTRIM(COMMENTS_I))) > 0)


  -- PREPARE LOCATION OF THE REQUESTOR
  IF (BUILDING_I IS NOT NULL)  THEN
    LOCATION_T := BUILDING_I;
  END IF;

  IF (BUILDING_I IS NOT NULL AND
      ROOM_I IS NOT NULL) THEN
    LOCATION_T := RTRIM(LTRIM(LOCATION_T || '-' || ROOM_I));
  END IF;

  -- PREPARE LONG DESCRIPTION
  LDTEXT_T :=' ';

  LDTEXT_T :=LDTEXT_T || 'NUMBER OF ITEMS BEING MOVED: '
              || NVL(NUMBER_OF_ITEMS_I,'NOT SPECIFIED') || LDTEXT_DELIMIT_T;

  LDTEXT_T :=LDTEXT_T || 'TYPE OF ITEMS BEING MOVED: '
              || NVL(TYPE_OF_ITEM_I,'NOT SPECIFIED') || LDTEXT_DELIMIT_T;

  LDTEXT_T :=LDTEXT_T || 'APPROXIMATE WEIGHT OF THE ITEMS BEING MOVED: '
              || NVL(ITEM_WEIGHT_I,'NOT SPECIFIED') || LDTEXT_DELIMIT_T;

  PICKUP_FROM_T := NULL;
  DELIVER_TO_T  := NULL;

  IF (NVL(LTRIM(FROM_BUILDING_I),'--SELECT--') != '--SELECT--') THEN
       PICKUP_FROM_T := FROM_BUILDING_I;
  END IF;

  IF  (NVL(LTRIM(FROM_ROOM_I),'--SELECT--') != '--SELECT--') THEN
      PICKUP_FROM_T := FROM_BUILDING_I || '-' || FROM_ROOM_I;
  END IF;

  IF (NVL(LTRIM(TO_BUILDING_I),'--SELECT--') != '--SELECT--') THEN
       DELIVER_TO_T := TO_BUILDING_I;
  END IF;

  IF  (NVL(LTRIM(TO_ROOM_I),'--SELECT--') != '--SELECT--') THEN
      DELIVER_TO_T := TO_BUILDING_I || '-' || TO_ROOM_I;
  END IF;

 LDTEXT_T :=LDTEXT_T || 'PICK UP FROM :'
          || NVL(PICKUP_FROM_T,'NOT SPECIFIED') || LDTEXT_DELIMIT_T;

 LDTEXT_T := LDTEXT_T || 'DELIVER TO  :'
          || NVL(DELIVER_TO_T,'NOT SPECIFIED') || LDTEXT_DELIMIT_T;

  IF (NVL(RECYCLE_PICKUP_I,'N') ='Y') THEN
      LDTEXT_T :=LDTEXT_T || 'RECYCLE PICKUP: YES ' || LDTEXT_DELIMIT_T;
  ELSE
      LDTEXT_T :=LDTEXT_T || 'RECYCLE PICKUP: NO '  || LDTEXT_DELIMIT_T;
  END IF;

  IF (NVL(HAZARDS_I,'Y') ='Y') THEN
      LDTEXT_T :=LDTEXT_T || 'HAZARDS EXIST: YES ' || LDTEXT_DELIMIT_T;
  ELSE
      LDTEXT_T :=LDTEXT_T || 'HAZARDS EXISTS: NO '  || LDTEXT_DELIMIT_T;
  END IF;

  IF (LOCATION_NOTES_I IS NOT NULL) THEN
    LDTEXT_T :=LDTEXT_T || 'LOCATION NOTES: '  || LOCATION_NOTES_I || LDTEXT_DELIMIT_T;
  ELSE
    LDTEXT_T :=LDTEXT_T || 'LOCATION NOTES: NOT SPECIFIED' || LDTEXT_DELIMIT_T;
  END IF;

  LDTEXT_T :=LDTEXT_T || 'DATE NEEDED: ' || TO_CHAR(TARGCOMPDATE_T,'MM/DD/YYYY') || LDTEXT_DELIMIT_T;

  IF (COMMENTS_I IS NOT NULL) THEN
     LDTEXT_T :=LDTEXT_T || 'COMMENTS: ' || COMMENTS_I || LDTEXT_DELIMIT_T;
  END IF;

  LDTEXT_T :=LTRIM(RTRIM(LDTEXT_T));

 -- FIND OUT SUPERVISOR AND LEADCRAFT BASED ON
 -- APPROXIMATE WEIGHT OF THE ITEM

 IF (ITEM_WEIGHT_I IN ('< 100 LBS', '> 100 LBS < 250 LBS')) THEN

    SELECT VARVALUE  INTO LEADCRAFT_T
    FROM  MAXIMO.LBL_MAXVARS
    WHERE VARNAME='WOREQ_TRANSP_<250_LEADCRAFT';


    SELECT VARVALUE  INTO SUPERVISOR_T
    FROM MAXIMO.LBL_MAXVARS
    WHERE VARNAME='WOREQ_TRANSP_<250_SUPERVISOR';


ELSE

    SELECT VARVALUE  INTO LEADCRAFT_T
    FROM MAXIMO.LBL_MAXVARS
    WHERE VARNAME ='WOREQ_TRANSP_>250_LEADCRAFT';

    SELECT VARVALUE  INTO SUPERVISOR_T
    FROM MAXIMO.LBL_MAXVARS
    WHERE VARNAME='WOREQ_TRANSP_>250_SUPERVISOR';

END IF;


    DESCRIPTION_T :=SUBSTR(('MOVE'
          || ' ' || NUMBER_OF_ITEMS_I
          || ' ' || TYPE_OF_ITEM_I
          || ' FROM '
          || NVL(PICKUP_FROM_T,'N/A')
          || ' TO '
          || NVL(DELIVER_TO_T,'N/A')),1, 50) ;
   -- START UPDATING THE TABLES

   UPDATE MAXIMO.WORKORDER
   SET DESCRIPTION=DESCRIPTION_T, LEADCRAFT=LEADCRAFT_T,
       SUPERVISOR=SUPERVISOR_T, GLACCOUNT=RTRIM(LTRIM(GLACCOUNT_I)),
       TARGSTARTDATE=TARGSTARTDATE_T, TARGCOMPDATE=TARGCOMPDATE_T,
       CHANGEDATE=CURRENTDATE_T, CHANGEBY=CHANGEBY_I,
       PHONE=PHONE_I, WO1=LTRIM(RTRIM(WO1_I)), STATUS=STATUS_T,  -- RT# 58753
       LBL_RELEASE_STATUS=LBL_WORKREQ_PKG.get_release_location(location_T),
       CALCPRIORITY= LBL_WORKREQ_PKG.get_loc_priority(LOCATION_T),
       ASSETLOCPRIORITY= LBL_WORKREQ_PKG.get_loc_priority(LOCATION_T)
   WHERE ORGID='LBNL'
   AND   SITEID='FAC'
   AND   WONUM=WONUM_I;

   UPDATE MAXIMO.LONGDESCRIPTION
   SET LDTEXT=TO_CLOB(LDTEXT_T)
   WHERE LDKEY=LDKEY_T
   AND  LDOWNERTABLE='WORKORDER'
   AND  LDOWNERCOL='DESCRIPTION';


   UPDATE BATCH_MAXIMO.LBL_WORKREQ
   SET REPORTEDBY=REPORTEDBY_I, PHONE=PHONE_I,
       WO1=LTRIM(RTRIM(WO1_I)), BUILDING=BUILDING_I, ROOM=ROOM_I,
       LOCATION_NOTES=LOCATION_NOTES_I,
       RECYCLE_PICKUP=RECYCLE_PICKUP_I,GLACCOUNT=RTRIM(LTRIM(GLACCOUNT_I)),
       DESCRIPTION=DESCRIPTION_T,LDKEY=LDKEY_T2,
       HAZARDS=HAZARDS_I, TARGSTARTDATE=TARGSTARTDATE_T,
       TARGCOMPDATE=TARGCOMPDATE_T,
       NUMBER_OF_ITEMS=NUMBER_OF_ITEMS_I, TYPE_OF_ITEM=TYPE_OF_ITEM_I,
       ITEM_WEIGHT=ITEM_WEIGHT_I,
       FROM_BUILDING=FROM_BUILDING_I,FROM_ROOM=FROM_ROOM_I,
       TO_BUILDING=TO_BUILDING_I, TO_ROOM=TO_ROOM_I, CLEANUP=CLEANUP_I,
       CHANGEDATE=CURRENTDATE_T, CHANGEBY=CHANGEBY_I
 WHERE WONUM=WONUM_I;

   -- MXES 7/9/09
   UPDATE MAXIMO.WORKVIEW
   SET DESCRIPTION=DESCRIPTION_T, STATUS=STATUS_T,
    PRIORITY=LBL_WORKREQ_PKG.get_loc_priority(LOCATION_T)
   WHERE RECORDKEY=WONUM_I
   AND   CLASS='WORKORDER'
   AND   SITEID='FAC'
   AND   ORGID='LBNL';

    -- FOR MAXIMO RELEASE 7.5

   IF (LOCATION_T IS NOT NULL) THEN

    BEGIN
     SELECT LOCATION  INTO OLD_LOCATION_T
     FROM   MULTIASSETLOCCI
     WHERE  RECORDKEY=WONUM_I
     AND    RECORDCLASS='WORKORDER'
     AND    ORGID='LBNL'
     AND    SITEID='FAC';

     IF (OLD_LOCATION_T !=LOCATION_T) THEN

      UPDATE   MULTIASSETLOCCI
      SET      LOCATION=LOCATION_T
      WHERE    RECORDKEY=WONUM_I
      AND      RECORDCLASS='WORKORDER'
      AND      ORGID='LBNL'
      AND      SITEID='FAC';

    END IF;

   EXCEPTION WHEN NO_DATA_FOUND THEN

    IF (LOCATION_T IS NOT NULL) THEN
        INSERT INTO MULTIASSETLOCCI
          (RECORDKEY,
           PROGRESS,
          LOCATION,
          REPLACEMENTSITE,
          LANGCODE,
          HASLD,
          ISPRIMARY,
          WORKORGID,
          MULTIID,
          PERFORMMOVETO,
          WORKSITEID,
          ORGID,
          SITEID,
          RECORDCLASS,
          TOTALWORKUNITS
          ) VALUES
          (WONUM_I,
           0,
           LOCATION_T,
           'FAC',
           'EN',
           0,
           1,
           'LBNL',
           MULTIASSETLOCCISEQ.NEXTVAL,
           0,
           'FAC',
           'LBNL',
           'FAC',
           'WORKORDER',
           1);
       END IF;
    END;
  END IF;  -- IF (LOCATION_T IS NOT NULL) THEN



 END IF; -- IF MODE_I !='DELETE"
 RETURN WONUM_I;
END;

--****************************************************************************
--* FUNCTION TO GET EMPLOYEE DETAILS (NAME, PHONE, EMAIL ETC)
--****************************************************************************
FUNCTION GET_EMPLOYEE_DETAILS(
  PERSONID_I             IN PERSON.PERSONID%TYPE,
  TYPE_I                 IN WORKORDER.DESCRIPTION%TYPE)
  RETURN MAXIMO.WORKORDER.DESCRIPTION%TYPE

  IS
   RETURN_T MAXIMO.WORKORDER.DESCRIPTION%TYPE;
  BEGIN

   IF (TYPE_I='NAME') THEN
    BEGIN

     SELECT A.DISPLAYNAME INTO RETURN_T
     FROM PERSON A
     WHERE A.PERSONID=PERSONID_I;

    EXCEPTION WHEN OTHERS THEN
      RETURN_T :=' ';
    END;

   END IF; -- IF (TYPE_I='NAME') THEN

   IF (TYPE_I='PHONE') THEN
     BEGIN
       SELECT A.PHONENUM INTO RETURN_T
       FROM PHONE A
       WHERE A.PERSONID=PERSONID_I
       AND   A.ISPRIMARY=1;

       EXCEPTION WHEN OTHERS THEN
        RETURN_T :=' ';
     END;
   END IF; -- (TYPE_I='PHONE') THEN

   IF (TYPE_I='EMAIL') THEN
     BEGIN
       SELECT A.EMAILADDRESS INTO RETURN_T
       FROM EMAIL A
       WHERE A.PERSONID=PERSONID_I
       AND   A.ISPRIMARY=1;

       EXCEPTION WHEN OTHERS THEN
        RETURN_T :=' ';
     END;
   END IF; -- (TYPE_I='EMAIL') THEN

   RETURN RETURN_T;

  END;

--*******************************************************************
-- COMMON PROCEDURE TO PREPARE FIELD VALUES (USED IN ADD/MODIFY)
--*******************************************************************
PROCEDURE PREPARE_GENWORK_VALUES
(
    I_REPORTEDBY                IN    WORKORDER.REPORTEDBY%TYPE,
    I_PHONE                     IN    WORKORDER.PHONE%TYPE,
    I_WO1                       IN    WORKORDER.WO1%TYPE,
    I_WO1_PHONE                 IN    LBL_WORKORDEREXT.WO1_PHONE%TYPE,
    I_BUILDING                  IN    LBL_WORKORDEREXT.BUILDING%TYPE,
    I_ROOM                      IN    LBL_WORKORDEREXT.ROOM%TYPE,
    I_LOCATION_NOTES            IN    LBL_WORKORDEREXT.LOCATION_NOTES%TYPE,
    I_FIRST_AVL_DATETIME        IN    LBL_WORKORDEREXT.FIRST_AVL_DATETIME%TYPE,
    I_TARGSTARTDATE             IN    VARCHAR2, --LBL_WORKORDEREXT.TARGSTARTDATE%TYPE,
    I_TARGCOMPDATE              IN    VARCHAR2, --LBL_WORKORDEREXT.TARGCOMPDATE%TYPE,
    I_SCHED_ISSUES              IN    LBL_WORKORDEREXT.SCHED_ISSUES%TYPE,
    I_SCHED_ISSUES_DTL          IN    LBL_WORKORDEREXT.SCHED_ISSUES_DTL%TYPE,
    I_BUILDING_MAINT            IN    LBL_WORKORDEREXT.BUILDING_MAINT%TYPE,
    I_GLACCOUNT                 IN    WORKORDER.GLACCOUNT%TYPE,
    I_DESCRIPTION               IN    WORKORDER.DESCRIPTION%TYPE,
    I_ACCOMP_COND_PROB          IN    LBL_WORKORDEREXT.ACCOMP_COND_PROB%TYPE,
    I_COMMODITYGROUP            IN    WORKORDER.COMMODITYGROUP%TYPE,
    I_COMMODITY                 IN    WORKORDER.COMMODITY%TYPE,
    I_PRIOR_WO                  IN    LBL_WORKORDEREXT.PRIOR_WO%TYPE,
    I_PRIOR_WONUM               IN    LBL_WORKORDEREXT.PRIOR_WONUM%TYPE,
    I_ASSET_DESC                IN    LBL_WORKORDEREXT.ASSET_DESC%TYPE,
    I_WARRANTY_ISSUE            IN    LBL_WORKORDEREXT.WARRANTY_ISSUE%TYPE,
    I_WARRANTY_ISS_DTL          IN    LBL_WORKORDEREXT.WARRANTY_ISS_DTL%TYPE,
    I_ESTIMATE_REQD             IN    LBL_WORKORDEREXT.ESTIMATE_REQD%TYPE,
    I_SAFETY_ISSUE              IN    LBL_WORKORDEREXT.SAFETY_ISSUE%TYPE,
    I_HAZARDS                   IN    LBL_WORKORDEREXT.HAZARDS%TYPE,
    I_HAZARDS_DTL               IN    LBL_WORKORDEREXT.HAZARDS_DTL%TYPE,
    I_FOLLOW_STOP_WO            IN    LBL_WORKORDEREXT.FOLLOW_STOP_WO%TYPE,
    I_FOLLOW_STOP_WONUM         IN    LBL_WORKORDEREXT.FOLLOW_STOP_WONUM%TYPE,
    I_FOLLOW_STOP_DTL           IN    LBL_WORKORDEREXT.FOLLOW_STOP_DTL%TYPE,
    I_SELF_WO                   IN    LBL_WORKORDEREXT.SELF_WO%TYPE,
    I_EST_HRS                   IN    LBL_WORKORDEREXT.EST_HRS%TYPE,
    I_PARENT_WO_EXISTS          IN    LBL_WORKORDEREXT.PARENT_WO_EXISTS%TYPE,
    I_PARENT_WONUM              IN    LBL_WORKORDEREXT.PARENT_WONUM%TYPE,
    LOCATION_T                  OUT   WORKORDER.LOCATION%TYPE,
    TARGSTARTDATE_T             OUT   WORKORDER.TARGSTARTDATE%TYPE,
    TARGCOMPDATE_T              OUT   WORKORDER.TARGCOMPDATE%TYPE,
    T_LBL_RELEASE_STATUS        OUT   WORKORDER.LBL_RELEASE_STATUS%TYPE,
    LDTEXT_T                    OUT   LONGDESCRIPTION.LDTEXT%TYPE,
    CURRENTDATE_T               OUT   WORKORDER.CHANGEDATE%TYPE
 )
 AS

 BEGIN

 IF ( I_TARGSTARTDATE IS NOT NULL) THEN
    SELECT   TO_DATE(I_TARGSTARTDATE,'MM/DD/YYYY') INTO  TARGSTARTDATE_T
    FROM DUAL;
  END IF;

  IF ( I_TARGCOMPDATE IS NOT NULL) THEN
    SELECT   TO_DATE(I_TARGCOMPDATE,'MM/DD/YYYY') INTO  TARGCOMPDATE_T
    FROM DUAL;
  END IF;

  SELECT  SYSDATE  INTO  CURRENTDATE_T   FROM DUAL;

   -- PREPARE LOCATION
  IF (I_BUILDING IS NOT NULL AND LTRIM(I_BUILDING) !='--SELECT--' ) THEN
    LOCATION_T := I_BUILDING;
  END IF;

  IF (I_BUILDING IS NOT NULL AND LTRIM(I_BUILDING) !='--SELECT--' AND
      I_ROOM     IS NOT NULL AND LTRIM(I_ROOM)     !='--SELECT--' ) THEN
    LOCATION_T := RTRIM(LTRIM(LOCATION_T || '-' || I_ROOM));
  END IF;

  IF (LOCATION_T IS NOT NULL) THEN
     T_LBL_RELEASE_STATUS := LBL_WORKREQ_PKG.GET_RELEASE_LOCATION(LOCATION_T);
  ELSE
     T_LBL_RELEASE_STATUS := 'UNKNOWN';
  END IF;

  -- PREPARE LONG DESCRIPTION
  LDTEXT_T :=' ';

  IF (I_LOCATION_NOTES IS NOT NULL) THEN
    LDTEXT_T :=LDTEXT_T || 'LOCATION NOTES: '  || I_LOCATION_NOTES || LDTEXT_DELIMIT_T;
  ELSE
    LDTEXT_T :=LDTEXT_T || 'LOCATION NOTES: NOT SPECIFIED' || LDTEXT_DELIMIT_T;
  END IF;

  IF (I_FIRST_AVL_DATETIME =1) THEN
    LDTEXT_T :=LDTEXT_T || 'FIRST AVAILABLE DATETIME: YES '    || LDTEXT_DELIMIT_T;
  ELSE
    LDTEXT_T :=LDTEXT_T || 'FIRST AVAILABLE DATETIME: NO ' || LDTEXT_DELIMIT_T;
  END IF;

  IF (I_TARGSTARTDATE IS NOT NULL) THEN
     LDTEXT_T :=LDTEXT_T || 'TARGET START DATE: '  || I_TARGSTARTDATE || LDTEXT_DELIMIT_T;
  ELSE
     LDTEXT_T :=LDTEXT_T || 'TARGET START DATE: NOT SPECIFIED' || LDTEXT_DELIMIT_T;
  END IF;

  IF (I_TARGCOMPDATE IS NOT NULL) THEN
     LDTEXT_T :=LDTEXT_T || 'TARGET COMPLETION  DATE: '  || I_TARGCOMPDATE || LDTEXT_DELIMIT_T;
  ELSE
     LDTEXT_T :=LDTEXT_T || 'TARGET COMPLETION DATE: NOT SPECIFIED' || LDTEXT_DELIMIT_T;
  END IF;

  IF (I_SCHED_ISSUES =1) THEN
    LDTEXT_T :=LDTEXT_T || 'SCHEDULING ISSUES : YES '  ||   LDTEXT_DELIMIT_T;
  ELSE
    LDTEXT_T :=LDTEXT_T || 'SCHEDULING ISSUES : NO ' || LDTEXT_DELIMIT_T;
  END IF;

  IF (I_SCHED_ISSUES_DTL IS NOT NULL) THEN
     LDTEXT_T :=LDTEXT_T || 'SCHEDULING ISSUES DETAILS: '  || I_SCHED_ISSUES_DTL || LDTEXT_DELIMIT_T;
  ELSE
     LDTEXT_T :=LDTEXT_T || 'SCHEDULING ISSUES DETAILS : NOT SPECIFIED' || LDTEXT_DELIMIT_T;
  END IF;

  IF (I_BUILDING_MAINT=1) THEN
      LDTEXT_T :=LDTEXT_T || 'BUILDING MAINTENANCE: YES ' || LDTEXT_DELIMIT_T;
  ELSE
      LDTEXT_T :=LDTEXT_T || 'BUILDING MAINTENANCE: NO '  || LDTEXT_DELIMIT_T;
  END IF;

  IF (I_DESCRIPTION IS NOT NULL) THEN
     LDTEXT_T :=LDTEXT_T || 'DESCRIPTION OF WORK : '  || I_DESCRIPTION || LDTEXT_DELIMIT_T;
  ELSE
     LDTEXT_T :=LDTEXT_T || 'DESCRIPTION OF WORK : NOT SPECIFIED' || LDTEXT_DELIMIT_T;
  END IF;

  IF (I_ACCOMP_COND_PROB IS NOT NULL) THEN
     LDTEXT_T :=LDTEXT_T || 'WHAT IS TO BE ACCOMPLISHED : '  || I_ACCOMP_COND_PROB || LDTEXT_DELIMIT_T;
  ELSE
     LDTEXT_T :=LDTEXT_T || 'WHAT IS TO BE ACCOMPLISHED : NOT SPECIFIED' || LDTEXT_DELIMIT_T;
  END IF;

  IF (I_PRIOR_WO=1 ) THEN
     LDTEXT_T :=LDTEXT_T || 'ANOTHER WORK ORDER: YES  WORK ORDER NUMBER: '  || NVL(I_PRIOR_WONUM,' ') || LDTEXT_DELIMIT_T;
  ELSE
     LDTEXT_T :=LDTEXT_T || 'ANOTHER WORK ORDER: NO' || LDTEXT_DELIMIT_T;
  END IF;

  IF (I_ASSET_DESC IS NOT NULL) THEN
     LDTEXT_T :=LDTEXT_T || 'EQUIPMENT IDENTIFICATION: '  || I_ASSET_DESC || LDTEXT_DELIMIT_T;
  ELSE
     LDTEXT_T :=LDTEXT_T || 'EQUIPMENT IDENTIFICATION: NOT SPECIFIED' || LDTEXT_DELIMIT_T;
  END IF;

  IF (I_WARRANTY_ISSUE=1) THEN
      LDTEXT_T :=LDTEXT_T || 'WARRANTY ISSUE: YES ' || LDTEXT_DELIMIT_T;
  ELSE
      LDTEXT_T :=LDTEXT_T || 'WARRANT ISSUE: NO '  || LDTEXT_DELIMIT_T;
  END IF;

  IF (I_WARRANTY_ISS_DTL IS NOT NULL) THEN
     LDTEXT_T :=LDTEXT_T || 'WARRANTY ISSUE DETAILS: '  || I_WARRANTY_ISS_DTL || LDTEXT_DELIMIT_T;
  ELSE
     LDTEXT_T :=LDTEXT_T || 'WARRANTY ISSUE DETAILS: NOT SPECIFIED' || LDTEXT_DELIMIT_T;
  END IF;

  IF (I_ESTIMATE_REQD =1) THEN
      LDTEXT_T :=LDTEXT_T || 'ESTIMATE REQUIRED: YES' || LDTEXT_DELIMIT_T;
  ELSE
      LDTEXT_T :=LDTEXT_T || 'ESTIMATE REQUIRED: NO' || LDTEXT_DELIMIT_T;
  END IF;

  IF (I_SAFETY_ISSUE =1) THEN
      LDTEXT_T :=LDTEXT_T || 'SAFETY ISSUE: YES' || LDTEXT_DELIMIT_T;
  ELSE
      LDTEXT_T :=LDTEXT_T || 'SAFETY ISSUE: NO' || LDTEXT_DELIMIT_T;
  END IF;

  IF (I_HAZARDS =1) THEN
      LDTEXT_T :=LDTEXT_T || 'ANY HAZARDS/CONDITIONS: YES' || LDTEXT_DELIMIT_T;
  ELSE
      LDTEXT_T :=LDTEXT_T || 'ANY HAZARDS/CONDITIONS: NO' || LDTEXT_DELIMIT_T;
  END IF;

  IF (I_HAZARDS_DTL IS NOT NULL) THEN
     LDTEXT_T :=LDTEXT_T || 'HAZARDS/CONDITIONS DETAILS: '  || I_HAZARDS_DTL || LDTEXT_DELIMIT_T;
  ELSE
     LDTEXT_T :=LDTEXT_T || 'HAZARDS/CONDITIONS DETAILS: NOT SPECIFIED' || LDTEXT_DELIMIT_T;
  END IF;


  IF (I_FOLLOW_STOP_WO =1) THEN
      LDTEXT_T :=LDTEXT_T || 'FOLLOW-UP WORK ORDER/RESPONSE TO STOP WORK WORK ORDER: YES  ' || 'WORK ORDER NUMBER: ' || NVL(I_FOLLOW_STOP_WONUM,' ') || LDTEXT_DELIMIT_T;
  ELSE
      LDTEXT_T :=LDTEXT_T || 'FOLLOW-UP WORK ORDER/RESPONSE TO STOP WORK WORK ORDER:  NO' || LDTEXT_DELIMIT_T;
  END IF;

  IF (I_FOLLOW_STOP_DTL IS NOT NULL) THEN
     LDTEXT_T :=LDTEXT_T || 'FOLLOW-UP/STOP WORK ORDER DETAILS: '  || I_HAZARDS_DTL || LDTEXT_DELIMIT_T;
  ELSE
     LDTEXT_T :=LDTEXT_T || 'FOLLOW-UP/STOP WORK ORDER DETAILS: NOT SPECIFIED' || LDTEXT_DELIMIT_T;
  END IF;

   IF (I_SELF_WO =1) THEN
      LDTEXT_T :=LDTEXT_T || 'FACILITIES INTERNAL WORK ORDER: YES' || LDTEXT_DELIMIT_T;
  ELSE
      LDTEXT_T :=LDTEXT_T || 'FACILITIES INTERNAL WORK ORDER: NO' || LDTEXT_DELIMIT_T;
  END IF;

   IF (I_EST_HRS IS NOT NULL) THEN
     LDTEXT_T :=LDTEXT_T || 'ESTIMATED NUMBER OF HOURS: '  || I_EST_HRS || LDTEXT_DELIMIT_T;
  ELSE
     LDTEXT_T :=LDTEXT_T || 'ESTIMATED NUMBER OF HOURS: NOT SPECIFIED' || LDTEXT_DELIMIT_T;
  END IF;

  IF (I_PARENT_WO_EXISTS =0) THEN
     LDTEXT_T :=LDTEXT_T || 'PARENT WORK ORDER EXISTS: '  || 'NO' || LDTEXT_DELIMIT_T;
  ELSE
    LDTEXT_T :=LDTEXT_T || 'PARENT WORK ORDER EXISTS: '  || 'YES' || LDTEXT_DELIMIT_T;
    LDTEXT_T :=LDTEXT_T || 'PARENT WORK ORDER#: '  || I_PARENT_WONUM || LDTEXT_DELIMIT_T;
  END IF;



 END;


--*******************************************************************
-- COMMON PROCEDURE TO PREPARE FIELD VALUES (USED IN ADD/MODIFY)
--*******************************************************************
PROCEDURE PREPARE_ESTWORK_VALUES
(
    I_REPORTEDBY                IN    WORKORDER.REPORTEDBY%TYPE,
    I_PHONE                     IN    WORKORDER.PHONE%TYPE,
    I_WO1                       IN    WORKORDER.WO1%TYPE,
    I_WO1_PHONE                 IN    LBL_WORKORDEREXT.WO1_PHONE%TYPE,
    I_BUILDING                  IN    LBL_WORKORDEREXT.BUILDING%TYPE,
    I_ROOM                      IN    LBL_WORKORDEREXT.ROOM%TYPE,
    I_LOCATION_NOTES            IN    LBL_WORKORDEREXT.LOCATION_NOTES%TYPE,
    I_TARGSTARTDATE             IN    VARCHAR2, --LBL_WORKORDEREXT.TARGSTARTDATE%TYPE,
    I_TARGCOMPDATE              IN    VARCHAR2, --LBL_WORKORDEREXT.TARGCOMPDATE%TYPE
    I_SCHED_ISSUES_DTL          IN    LBL_WORKORDEREXT.SCHED_ISSUES_DTL%TYPE,
    I_GLACCOUNT                 IN    WORKORDER.GLACCOUNT%TYPE,
    I_DESCRIPTION               IN    WORKORDER.DESCRIPTION%TYPE,
    I_ACCOMP_COND_PROB          IN    LBL_WORKORDEREXT.ACCOMP_COND_PROB%TYPE,
    I_COMMODITYGROUP            IN    WORKORDER.COMMODITYGROUP%TYPE,
    I_COMMODITY                 IN    WORKORDER.COMMODITY%TYPE,
    I_NEEDESTBYDATE             IN    VARCHAR2, -- ESTIMATE NEEDED BY DATE MM/DD/YYYY
    I_OTHERSTAKEID              IN    WORKORDER.REPORTEDBY%TYPE,
    I_OTHERSTAKEPHONE           IN    WORKORDER.PHONE%TYPE,
    I_OTHERSTAKEMOBILE          IN    LBL_WORKORDEREXT.WO1_MOBILE%TYPE,
    LOCATION_T                  OUT   WORKORDER.LOCATION%TYPE,
    TARGSTARTDATE_T             OUT   WORKORDER.TARGSTARTDATE%TYPE,
    TARGCOMPDATE_T              OUT   WORKORDER.TARGCOMPDATE%TYPE,
    LDTEXT_T                    OUT   LONGDESCRIPTION.LDTEXT%TYPE,
    CURRENTDATE_T               OUT   WORKORDER.CHANGEDATE%TYPE,
    T_LBL_RELEASE_STATUS        OUT   WORKORDER.LBL_RELEASE_STATUS%TYPE
)


 AS
   T_COMMODITYDESC COMMODITIES.description%type;

 BEGIN


 IF ( I_TARGSTARTDATE IS NOT NULL) THEN
    SELECT   TO_DATE(I_TARGSTARTDATE,'MM/DD/YYYY') INTO  TARGSTARTDATE_T
    FROM DUAL;
  END IF;

  IF ( I_TARGCOMPDATE IS NOT NULL) THEN
    SELECT   TO_DATE(I_TARGCOMPDATE,'MM/DD/YYYY') INTO  TARGCOMPDATE_T
    FROM DUAL;
  END IF;

  SELECT  SYSDATE  INTO  CURRENTDATE_T   FROM DUAL;

   -- PREPARE LOCATION
  IF (I_BUILDING IS NOT NULL AND LTRIM(I_BUILDING) !='--SELECT--' ) THEN
    LOCATION_T := I_BUILDING;
  END IF;

  IF (I_BUILDING IS NOT NULL AND LTRIM(I_BUILDING) !='--SELECT--' AND
      I_ROOM     IS NOT NULL AND LTRIM(I_ROOM)     !='--SELECT--' ) THEN
    LOCATION_T := RTRIM(LTRIM(LOCATION_T || '-' || I_ROOM));
  END IF;

  IF (LOCATION_T IS NOT NULL) THEN
     T_LBL_RELEASE_STATUS := LBL_WORKREQ_PKG.GET_RELEASE_LOCATION(LOCATION_T);
  ELSE
     T_LBL_RELEASE_STATUS := 'UNKNOWN';
  END IF;


  BEGIN
    SELECT   DESCRIPTION
    INTO T_COMMODITYDESC
    FROM MAXIMO.COMMODITIES
    WHERE PARENT=I_COMMODITYGROUP
    AND   COMMODITY=I_COMMODITY;
   EXCEPTION WHEN OTHERS THEN
      NULL;
  END;



  -- PREPARE LONG DESCRIPTION
  LDTEXT_T :=' ';

  IF (I_LOCATION_NOTES IS NOT NULL) THEN
    LDTEXT_T :=LDTEXT_T || 'LOCATION NOTES: '  || I_LOCATION_NOTES || LDTEXT_DELIMIT_T;
  ELSE
    LDTEXT_T :=LDTEXT_T || 'LOCATION NOTES: NOT SPECIFIED' || LDTEXT_DELIMIT_T;
  END IF;

   IF (I_OTHERSTAKEID IS NOT NULL) THEN
     LDTEXT_T :=LDTEXT_T || 'OTHER STAKEHOLDER ID: '  || I_OTHERSTAKEID || LDTEXT_DELIMIT_T;
  ELSE
     LDTEXT_T :=LDTEXT_T || 'OTHER STAKEHOLDER ID: NOT SPECIFIED' || LDTEXT_DELIMIT_T;
  END IF;

  IF (I_OTHERSTAKEPHONE IS NOT NULL) THEN
     LDTEXT_T :=LDTEXT_T || 'OTHER STAKEHOLDER PHONE: '  || I_OTHERSTAKEPHONE || LDTEXT_DELIMIT_T;
  ELSE
     LDTEXT_T :=LDTEXT_T || 'OTHER STAKEHOLDER PHONE: NOT SPECIFIED' || LDTEXT_DELIMIT_T;
  END IF;

   IF (I_OTHERSTAKEMOBILE IS NOT NULL) THEN
     LDTEXT_T :=LDTEXT_T || 'OTHER STAKEHOLDER MOBILE: '  || I_OTHERSTAKEMOBILE || LDTEXT_DELIMIT_T;
  ELSE
     LDTEXT_T :=LDTEXT_T || 'OTHER STAKEHOLDER MOBILE: NOT SPECIFIED' || LDTEXT_DELIMIT_T;
  END IF;

  IF (T_COMMODITYDESC IS NOT NULL) THEN
     LDTEXT_T :=LDTEXT_T || 'PURPOSE OF ESTIMATED WORK : '  || T_COMMODITYDESC || LDTEXT_DELIMIT_T;
  ELSE
     LDTEXT_T :=LDTEXT_T || 'PURPOSE OF ESTIMATED WORK: NOT SPECIFIED' || LDTEXT_DELIMIT_T;
  END IF;


   IF (I_NEEDESTBYDATE IS NOT NULL) THEN
     LDTEXT_T :=LDTEXT_T || 'NEED ESTIMATE BY DATE: '  || I_NEEDESTBYDATE || LDTEXT_DELIMIT_T;
  ELSE
     LDTEXT_T :=LDTEXT_T || 'NEED ESTIMATE BY DATE: NOT SPECIFIED' || LDTEXT_DELIMIT_T;
  END IF;

  IF (I_TARGSTARTDATE IS NOT NULL) THEN
     LDTEXT_T :=LDTEXT_T || 'TARGET START DATE: '  || I_TARGSTARTDATE || LDTEXT_DELIMIT_T;
  ELSE
     LDTEXT_T :=LDTEXT_T || 'TARGET START DATE: NOT SPECIFIED' || LDTEXT_DELIMIT_T;
  END IF;

  IF (I_TARGCOMPDATE IS NOT NULL) THEN
     LDTEXT_T :=LDTEXT_T || 'TARGET COMPLETION  DATE: '  || I_TARGCOMPDATE || LDTEXT_DELIMIT_T;
  ELSE
     LDTEXT_T :=LDTEXT_T || 'TARGET COMPLETION DATE: NOT SPECIFIED' || LDTEXT_DELIMIT_T;
  END IF;



  IF (I_SCHED_ISSUES_DTL IS NOT NULL) THEN
     LDTEXT_T :=LDTEXT_T || 'SCHEDULING ISSUES DETAILS: '  || I_SCHED_ISSUES_DTL || LDTEXT_DELIMIT_T;
  ELSE
     LDTEXT_T :=LDTEXT_T || 'SCHEDULING ISSUES DETAILS : NOT SPECIFIED' || LDTEXT_DELIMIT_T;
  END IF;


  IF (I_DESCRIPTION IS NOT NULL) THEN
     LDTEXT_T :=LDTEXT_T || 'SCOPE OF WORK : '  || I_DESCRIPTION || LDTEXT_DELIMIT_T;
  ELSE
     LDTEXT_T :=LDTEXT_T || 'SCOPE OF WORK : NOT SPECIFIED' || LDTEXT_DELIMIT_T;
  END IF;

  IF (I_ACCOMP_COND_PROB IS NOT NULL) THEN
     LDTEXT_T :=LDTEXT_T || 'WORK TO BE ESTIMATED : '  || I_ACCOMP_COND_PROB || LDTEXT_DELIMIT_T;
  ELSE
     LDTEXT_T :=LDTEXT_T || 'WORK TO BE ESTIMATED : NOT SPECIFIED' || LDTEXT_DELIMIT_T;
  END IF;



 END;


--********************************************
-- FUNCTION TO INSERT ESTIMATING WORK REQUEST
--********************************************
FUNCTION INSERT_EST_WORKREQ(
    I_REPORTEDBY                IN    WORKORDER.REPORTEDBY%TYPE,
    I_PHONE                     IN    WORKORDER.PHONE%TYPE,
    I_WO1                       IN    WORKORDER.WO1%TYPE, -- POINT OF CONTACT (POC)
    I_WO1_PHONE                 IN    LBL_WORKORDEREXT.WO1_PHONE%TYPE, -- POC PHONE
    I_BUILDING                  IN    LBL_WORKORDEREXT.BUILDING%TYPE,
    I_ROOM                      IN    LBL_WORKORDEREXT.ROOM%TYPE,
    I_LOCATION_NOTES            IN    LBL_WORKORDEREXT.LOCATION_NOTES%TYPE,
    I_TARGSTARTDATE             IN    VARCHAR2, --LBL_WORKORDEREXT.TARGSTARTDATE%TYPE - MM/DD/YYYY
    I_TARGCOMPDATE              IN    VARCHAR2, --LBL_WORKORDEREXT.TARGCOMPDATE%TYPE - MM/DD/YYYY
    I_SCHED_ISSUES_DTL          IN    LBL_WORKORDEREXT.SCHED_ISSUES_DTL%TYPE, -- SCHEDULING CONSTRAINTS
    I_GLACCOUNT                 IN    WORKORDER.GLACCOUNT%TYPE,
    I_DESCRIPTION               IN    WORKORDER.DESCRIPTION%TYPE,
    I_ACCOMP_COND_PROB          IN    LBL_WORKORDEREXT.ACCOMP_COND_PROB%TYPE,-- DESC OF WORK TO BE ESTIMATED
    I_COMMODITYGROUP            IN    WORKORDER.COMMODITYGROUP%TYPE,  -- "FAESTIMATE"
    I_COMMODITY                 IN    WORKORDER.COMMODITY%TYPE, -- PURPOSE OF ESTIMATE WORK 1/2/3/4
    I_NEEDESTBYDATE             IN    VARCHAR2, -- ESTIMATE NEEDED BY DATE MM/DD/YYYY
    I_WORKREQ_TYPE              IN    LBL_WORKORDEREXT.WORKREQ_TYPE%TYPE, --"WRE"
    I_CHANGEBY                  IN    LBL_WORKORDEREXT.CHANGEBY%TYPE,
    I_REPORTEDBY_MOBILE         IN    LBL_WORKORDEREXT.REPORTEDBY_MOBILE%TYPE,
    I_WO1_MOBILE                IN    LBL_WORKORDEREXT.WO1_MOBILE%TYPE,
    I_OTHERSTAKEID              IN    WORKORDER.REPORTEDBY%TYPE,
    I_OTHERSTAKEPHONE           IN    WORKORDER.PHONE%TYPE,
    I_OTHERSTAKEMOBILE          IN    LBL_WORKORDEREXT.WO1_MOBILE%TYPE

)
 RETURN MAXIMO.WORKORDER.WONUM%TYPE

IS

   WONUM_T   MAXIMO.WORKORDER.WONUM%TYPE;
   LDKEY_T   MAXIMO.LONGDESCRIPTION.LDKEY%TYPE;
   LOCATION_T MAXIMO.WORKORDER.LOCATION%TYPE;
   WOREQ_NUM_T LBL_WORKORDEREXT.WORKREQ_NUM%TYPE;
   LDTEXT_T  MAXIMO.LONGDESCRIPTION.LDTEXT%TYPE;
   TARGSTARTDATE_T MAXIMO.WORKORDER.TARGSTARTDATE%TYPE;
   CURRENTDATE_T   MAXIMO.WORKORDER.TARGSTARTDATE%TYPE;
   TARGCOMPDATE_T  MAXIMO.WORKORDER.TARGCOMPDATE%TYPE;
   HASLD_T         MAXIMO.WORKORDER.HASLD%TYPE :=0;
   COMMODITY_T    MAXIMO.WORKORDER.COMMODITY%TYPE;
   T_LBL_RELEASE_STATUS  MAXIMO.WORKORDER.LBL_RELEASE_STATUS%TYPE;
   T_SUPERVISOR   MAXIMO.WORKORDER.SUPERVISOR%TYPE :=NULL;
   T_LEAD         MAXIMO.WORKORDER.LEAD%TYPE :=NULL;
   CONTENTUID_T   MAXIMO.LONGDESCRIPTION.CONTENTUID%TYPE;
   LDSEQ_T        MAXIMO.LONGDESCRIPTION.LDKEY%TYPE;


   T_LBL_ESCORT_REQD    MAXIMO.WORKORDER.LBL_ESCORT_REQD%TYPE;
   T_LBL_CONDITION_REL  MAXIMO.WORKORDER.LBL_CONDITION_REL%TYPE;
   T_LBL_COMMENTS_CONDR MAXIMO.LOCATIONS.LBL_COMMENTS_CONDR%TYPE;

   -- ADDED BY PANKAJ ON 8/6/15
  T_FAMID      MAXIMO.WORKORDER.LBL_FAMID%TYPE;
  T_FAMMANAGER MAXIMO.WORKORDER.LBL_FAMMANAGER%TYPE;

  T_NEEDESTBYDATE  MAXIMO.WORKORDER.TARGSTARTDATE%TYPE;

   BEGIN

   WONUM_T     := MAXIMO.LBL_WORKREQ_PKG.GET_NEXT_NUMBER('WONUM');
   WOREQ_NUM_T := I_WORKREQ_TYPE || '7-'||  --  FOR MAXIMO 7.5 NEWER SERIES
                 LPAD(MAXIMO.LBL_WORKREQ_PKG.GET_NEXT_NUMBER('WOREQ'),6,'0');

   BEGIN

     SELECT VARVALUE
     INTO T_SUPERVISOR
     FROM MAXIMO.LBL_MAXVARS
     WHERE VARNAME='WOESTREQ_SUPERVISOR';

    EXCEPTION WHEN OTHERS THEN
      NULL;
   END;

    BEGIN

     SELECT VARVALUE
     INTO T_LEAD
     FROM MAXIMO.LBL_MAXVARS
     WHERE VARNAME='WOESTREQ_LEAD';

    EXCEPTION WHEN OTHERS THEN
      NULL;
   END;


  -- PREPARE VALUES REQUIRED FOR TABLES (COMMON FOR ADD AND MODIFY)
  PREPARE_ESTWORK_VALUES
  (
    I_REPORTEDBY                ,
    I_PHONE                     ,
    I_WO1                       ,
    I_WO1_PHONE                 ,
    I_BUILDING                  ,
    I_ROOM                      ,
    I_LOCATION_NOTES            ,
    I_TARGSTARTDATE             ,
    I_TARGCOMPDATE              ,
    I_SCHED_ISSUES_DTL          ,
    I_GLACCOUNT                 ,
    I_DESCRIPTION               ,
    I_ACCOMP_COND_PROB          ,
    I_COMMODITYGROUP            ,
    I_COMMODITY                 ,
    I_NEEDESTBYDATE             ,
    I_OTHERSTAKEID              ,
    I_OTHERSTAKEPHONE           ,
    I_OTHERSTAKEMOBILE          ,
    LOCATION_T                  ,
    TARGSTARTDATE_T             ,
    TARGCOMPDATE_T              ,
    LDTEXT_T                    ,
    CURRENTDATE_T               ,
    T_LBL_RELEASE_STATUS
    );



  LDTEXT_T :=LTRIM(RTRIM(LDTEXT_T));

  --SELECT MAXSEQ.NEXTVAL
  LDKEY_T :=NULL;


  SELECT MAXIMO.WORKORDERSEQ.NEXTVAL
  INTO LDKEY_T
  FROM SYS.DUAL;

  IF (LDTEXT_T IS NOT NULL AND LENGTH(LDTEXT_T) > 0)
   THEN
     HASLD_T :=1;
  END IF;

   -- ADDED BY PANKAJ ON 11/25/15
  IF (LOCATION_T IS NOT NULL) THEN
    BEGIN
      SELECT LBL_ESCORT_REQD, LBL_COND_RELEASE, LBL_COMMENTS_CONDR
      INTO T_LBL_ESCORT_REQD, T_LBL_CONDITION_REL, T_LBL_COMMENTS_CONDR
      FROM MAXIMO.LOCATIONS
      WHERE SITEID='FAC'
      AND   LOCATION=LOCATION_T;

    EXCEPTION WHEN OTHERS THEN
      NULL;
    END;
  END IF;

  INSERT INTO MAXIMO.WORKORDER
  (ORGID, SITEID, WONUM, STATUS, STATUSDATE,
   DESCRIPTION, CHANGEBY, CHANGEDATE,
   WORKTYPE,
   WO4,
   ESTDUR, ESTLABHRS, ESTLABCOST, ESTMATCOST, ESTTOOLCOST,
   ACTLABHRS, ACTLABCOST, ACTMATCOST, ACTTOOLCOST,
   HASCHILDREN, OUTLABCOST, OUTMATCOST, OUTTOOLCOST,
   HISTORYFLAG,
   WO1, WO5, REPORTEDBY, REPORTDATE, PHONE,
   DOWNTIME, CHARGESTORE, GLACCOUNT,
   ESTSERVCOST,ACTSERVCOST,DISABLED,ESTATAPPRLABHRS,
   ESTATAPPRLABCOST,ESTATAPPRMATCOST,ESTATAPPRTOOLCOST,
   ESTATAPPRSERVCOST, HASFOLLOWUPWORK,
   ISTASK, LOCATION, HASLD,
   TARGSTARTDATE, TARGCOMPDATE,
   -- MXES
   WORKORDERID, WOCLASS, WOACCEPTSCHARGES,
   --PERFORMMOVETO,  -- NOT REQD  IN REL 7.5
   PARENTCHGSSTATUS,
   LANGCODE, INTERRUPTIBLE,
   WOGROUP,
   COMMODITY,COMMODITYGROUP,
   LBL_RELEASE_STATUS,
   CALCPRIORITY,
   ASSETLOCPRIORITY,
   SUPERVISOR,
   LEAD,
   WOISSWAP ,  --   REVISIONS FOR REL 7.5
   LASTCOPYLINKDATE,
   FLOWCONTROLLED,
   IGNOREDIAVAIL,
   PLUSCLOOP,
   SUSPENDFLOW,
   FLOWACTIONASSIST,
   AOS ,
   NESTEDJPINPROCESS,
   AMS,
   REQASSTDWNTIME,
   ACTINTLABCOST,
   PLUSCISMOBILE,
   APPTREQUIRED,
   INCTASKSINSCHED,
   ACTINTLABHRS,
   IGNORESRMAVAIL ,
   LMS,
   NEWCHILDCLASS,
   LOS,
   REPAIRLOCFLAG,
   LBL_ESCORT_REQD, -- ADDED BY PANKAJ ON 11/25/15
   LBL_CONDITION_REL,
   LBL_FAMID,           -- ADDED BY PANKAJ ON 8/6/16
   LBL_FAMMANAGER,
   LBL_WALKDOWN,
   LBL_CODECOMPLIANCE,
   LBL_ISPMCRITICAL,
   DJPAPPLIED
   )
   VALUES
  ('LBNL','FAC',WONUM_T, 'WAPPR', CURRENTDATE_T,
   I_DESCRIPTION, I_CHANGEBY, CURRENTDATE_T,
   'ET', -- WORK TYPE
   WOREQ_NUM_T,
   0,0,0,0,0,
   0,0,0,0,
   0, 0,0,0,
   0,
    LTRIM(RTRIM(I_WO1)), '3',I_REPORTEDBY, CURRENTDATE_T, I_PHONE,
    0,0,RTRIM(LTRIM(I_GLACCOUNT)),
    0,0,0,0,
    0,0,0,
    0,0,
    0,LOCATION_T, HASLD_T,
    TARGSTARTDATE_T, TARGCOMPDATE_T,
    LDKEY_T, 'WORKORDER', 1,
    --0, -- NOT REQD for MAXIMO 7.5
    0,   -- CHANGED ON 7/18/17
    'EN',0,
    WONUM_T,
    I_COMMODITY, I_COMMODITYGROUP,
    T_LBL_RELEASE_STATUS,
    LBL_WORKREQ_PKG.GET_LOC_PRIORITY(LOCATION_T),
    LBL_WORKREQ_PKG.GET_LOC_PRIORITY(LOCATION_T),
   -- DECODE(I_COMMODITY,'09','PSSO-L','03','PSSO-R',NULL) --09 LOCKSHOP, 03-RADIO SHOP
   T_SUPERVISOR,
   T_LEAD,
   0,             --WOISSWAP
   SYSDATE,       --LASTCOPYLINKDATE
   0,             -- FLOWCONTROLLED
   0,             --IGNOREDIAVAIL
   0,             --PLUSCLOOP
   0,             --SUSPENDFLOW
   0,             --FLOWACTIONASSIST
   0,             --AOS
   0,             -- NESTEDJPINPROCESS
   0,             -- AMS
   0,             -- REQASSTDWNTIME
   0,             -- ACTINTLABCOST
   0,             --PLUSCISMOBILE
   0,             --APPTREQUIRED
   0,             --INCTASKSINSCHED
   0,             --ACTINTLABHRS
   1,             --IGNORESRMAVAIL
   0,             --LMS
   'WORKORDER',    --   NEWCHILDCLASS
   0,               --   LOS
   0,               --REPAIRLOCFLA,
   T_LBL_ESCORT_REQD,
   T_LBL_CONDITION_REL,
   T_FAMID,
   T_FAMMANAGER,
   0,
   0,     --CODE COMPLIANCE
   0, --  pm critical
   'NO'
   --LBL_ORGCODE)
   );

    -- REQUIRED FOR RELEASE 7.5
    SELECT MAXIMO.LONGDESCRIPTIONSEQ.NEXTVAL
    INTO   LDSEQ_T
    FROM DUAL;

    CONTENTUID_T :='BMXAA' || LTRIM(TO_CHAR(LDSEQ_T));

    IF (HASLD_T =1) THEN
       INSERT INTO MAXIMO.LONGDESCRIPTION
       (LDKEY, LDOWNERTABLE, LDOWNERCOL, LDTEXT, LONGDESCRIPTION.LONGDESCRIPTIONID,
       LONGDESCRIPTION.LANGCODE, CONTENTUID)
        VALUES (LDKEY_T, 'WORKORDER','DESCRIPTION',
        TO_CLOB(LDTEXT_T), LDSEQ_T,
        'EN', CONTENTUID_T);
    END IF;




    -- ADDED BY PANKAJ ON 11/25/15
    IF (T_LBL_COMMENTS_CONDR IS NOT NULL AND LENGTH(T_LBL_COMMENTS_CONDR) >0) THEN
      SELECT MAXIMO.LONGDESCRIPTIONSEQ.NEXTVAL
      INTO   LDSEQ_T
      FROM DUAL;

      CONTENTUID_T :='BMXAA' || LTRIM(TO_CHAR(LDSEQ_T));
      HASLD_T :=1 ;


       INSERT INTO MAXIMO.LONGDESCRIPTION
       (LDKEY, LDOWNERTABLE, LDOWNERCOL, LDTEXT, LONGDESCRIPTION.LONGDESCRIPTIONID,
       LONGDESCRIPTION.LANGCODE, CONTENTUID)
        VALUES (LDKEY_T, 'WORKORDER','LBL_CONDITION_REL',
        TO_CLOB(T_LBL_COMMENTS_CONDR), LDSEQ_T,
        'EN', CONTENTUID_T);
    END IF;

    INSERT INTO MAXIMO.WOSTATUS
    (WONUM, STATUS, CHANGEDATE, CHANGEBY,
     ORGID, SITEID, WOSTATUS.WOSTATUSID, GLACCOUNT)
     VALUES
     (WONUM_T, 'WAPPR',CURRENTDATE_T, I_CHANGEBY,
     'LBNL','FAC', MAXIMO.WOSTATUSSEQ.NEXTVAL, RTRIM(LTRIM(I_GLACCOUNT)));


     INSERT INTO MAXIMO.WOANCESTOR WOANCESTOR
     (ORGID,SITEID, WONUM, ANCESTOR,
      HIERARCHYLEVELS, WOANCESTOR.WOANCESTORID) VALUES
      ('LBNL','FAC',WONUM_T,WONUM_T,
      0, WOANCESTORSEQ.NEXTVAL);

   -- ADDED BY PANKAJ 7/8/09 FOR MXES

   INSERT INTO MAXIMO.WORKVIEW(
   APP, CLASS, DESCRIPTION, HISTORYFLAG, ISTASK, ORGID,
   RECORDKEY, REPORTDATE, REPORTEDBY,
   REPORTEDBYNAME,
   SITEID, STATUS, WORKVIEWID,
   PRIORITY) -- ADDED BY PANKAJ ON 1/15/13
   VALUES
   ('WOTRACK','WORKORDER', I_DESCRIPTION, 0, 0, 'LBNL',
     WONUM_T, CURRENTDATE_T, I_REPORTEDBY,
     MAXIMO.LBL_MAXIMO_PKG.GET_EMPLOYEE_NAME(I_REPORTEDBY),
     'FAC','WAPPR', WORKVIEWSEQ.NEXTVAL,
      LBL_WORKREQ_PKG.GET_LOC_PRIORITY(LOCATION_T)
   );

   T_NEEDESTBYDATE := NULL;
   IF ( I_NEEDESTBYDATE IS NOT NULL) THEN
    SELECT   TO_DATE(I_NEEDESTBYDATE,'MM/DD/YYYY') INTO  T_NEEDESTBYDATE
    FROM DUAL;
  END IF;

     INSERT INTO BATCH_MAXIMO.LBL_WORKREQ(
     WORKREQ_NUM, WORKREQ_TYPE,REPORTEDBY, PHONE,
     WO1, BUILDING, ROOM,LOCATION_NOTES,
     GLACCOUNT,DESCRIPTION,
     TARGSTARTDATE, TARGCOMPDATE ,
     CHANGEBY,CHANGEDATE, WONUM,
     DATEFIRSTINSERTED,
     ORGID,SITEID,
     COMMODITY, COMMODITYGROUP,
      --) VALUES -- ADDED ON 4/21/10
      -- ADDED ON 7/11/13 FOR WPC-2 PROJECT
      WO1_PHONE,
      SCHED_ISSUES_DTL ,
      ACCOMP_COND_PROB,
      REPORTEDBY_MOBILE,
      wo1_mobile,
      needestbydate,
      OTHERSTAKEID              ,
      OTHERSTAKEPHONE           ,
      OTHERSTAKEMOBILE
      ) VALUES
     (WOREQ_NUM_T, I_WORKREQ_TYPE, I_REPORTEDBY, I_PHONE,
      LTRIM(RTRIM(I_WO1)),  I_BUILDING, I_ROOM,I_LOCATION_NOTES,
      RTRIM(LTRIM(I_GLACCOUNT)),I_DESCRIPTION,
      TARGSTARTDATE_T, TARGCOMPDATE_T,
      I_CHANGEBY, CURRENTDATE_T, WONUM_T,
      SYSDATE,
      'LBNL','FAC',
      I_COMMODITY, I_COMMODITYGROUP,
      -- ADDED BY PANKAJ ON 7/11/13 FOR WPC PHASE-2 PROJECT
      I_WO1_PHONE,
      I_SCHED_ISSUES_DTL ,
      I_ACCOMP_COND_PROB,
      I_REPORTEDBY_MOBILE,
      I_WO1_MOBILE,
      T_NEEDESTBYDATE,
      I_OTHERSTAKEID              ,
      I_OTHERSTAKEPHONE           ,
      I_OTHERSTAKEMOBILE
      );

       --  REVISIONS FOR MAXIMO 7.5
        INSERT INTO WOSERVICEADDRESS (ADDRESSISCHANGED,
        SITEID,
        WOSERVICEADDRESSID,
        LANGCODE,
        WONUM,
        HASLD,
        ORGID) values
        (0,
         'FAC',
         WOSERVICEADDRESSSEQ.NEXTVAL,
         'EN',
          WONUM_T,
          0,
         'LBNL');

        IF (LOCATION_T IS NOT NULL) THEN
          INSERT INTO MULTIASSETLOCCI
          (RECORDKEY,
           PROGRESS,
          LOCATION,
          REPLACEMENTSITE,
          LANGCODE,
          HASLD,
          ISPRIMARY,
          WORKORGID,
          MULTIID,
          PERFORMMOVETO,
          WORKSITEID,
          ORGID,
          SITEID,
          RECORDCLASS,
          TOTALWORKUNITS
          ) VALUES
          (WONUM_T,
           0,
           LOCATION_T,
           'FAC',
           'EN',
           0,
           1,
           'LBNL',

           MULTIASSETLOCCISEQ.NEXTVAL,
           0,
           'FAC',
           'LBNL',
           'FAC',
           'WORKORDER',
           1);
       END IF;

RETURN WONUM_T;

END;


--********************************************
-- FUNCTION TO UPDATE  ESTIMATING WORK REQUEST
--********************************************
FUNCTION UPDATE_EST_WORKREQ(
    I_MODE                      IN    VARCHAR2,
    I_WONUM                     IN    MAXIMO.WORKORDER.WONUM%TYPE,
    I_REPORTEDBY                IN    WORKORDER.REPORTEDBY%TYPE,
    I_PHONE                     IN    WORKORDER.PHONE%TYPE,
    I_WO1                       IN    WORKORDER.WO1%TYPE, -- POINT OF CONTACT
    I_WO1_PHONE                 IN    LBL_WORKORDEREXT.WO1_PHONE%TYPE, -- POC PHONE
    I_BUILDING                  IN    LBL_WORKORDEREXT.BUILDING%TYPE,
    I_ROOM                      IN    LBL_WORKORDEREXT.ROOM%TYPE,
    I_LOCATION_NOTES            IN    LBL_WORKORDEREXT.LOCATION_NOTES%TYPE,
    I_TARGSTARTDATE             IN    VARCHAR2, --LBL_WORKORDEREXT.TARGSTARTDATE%TYPE, MM/DD/YYYY
    I_TARGCOMPDATE              IN    VARCHAR2, --LBL_WORKORDEREXT.TARGCOMPDATE%TYPE, MM/DD/YYYY
    I_SCHED_ISSUES_DTL          IN    LBL_WORKORDEREXT.SCHED_ISSUES_DTL%TYPE, -- SCHEDULING CONSTRAINTS
    I_GLACCOUNT                 IN    WORKORDER.GLACCOUNT%TYPE,
    I_DESCRIPTION               IN    WORKORDER.DESCRIPTION%TYPE,
    I_ACCOMP_COND_PROB          IN    LBL_WORKORDEREXT.ACCOMP_COND_PROB%TYPE,-- DESC OF WORK TO BE ESTIMATED
    I_COMMODITYGROUP            IN    WORKORDER.COMMODITYGROUP%TYPE,
    I_COMMODITY                 IN    WORKORDER.COMMODITY%TYPE, -- PURPOSE OF ESTIMATE WORK
    I_NEEDESTBYDATE             IN    VARCHAR2, -- ESTIMATE NEEDED BY DATE MM/DD/YYYY
    I_WORKREQ_TYPE              IN    LBL_WORKORDEREXT.WORKREQ_TYPE%TYPE, -- WET
    I_CHANGEBY                  IN    LBL_WORKORDEREXT.CHANGEBY%TYPE,
    I_REPORTEDBY_MOBILE         IN    LBL_WORKORDEREXT.REPORTEDBY_MOBILE%TYPE,
    I_WO1_MOBILE                IN    LBL_WORKORDEREXT.WO1_MOBILE%TYPE,
    I_OTHERSTAKEID              IN    WORKORDER.REPORTEDBY%TYPE,
    I_OTHERSTAKEPHONE           IN    WORKORDER.PHONE%TYPE,
    I_OTHERSTAKEMOBILE          IN    LBL_WORKORDEREXT.WO1_MOBILE%TYPE

  )
    RETURN MAXIMO.WORKORDER.WONUM%TYPE


 IS

 TARGSTARTDATE_T MAXIMO.WORKORDER.TARGSTARTDATE%TYPE;
 CURRENTDATE_T   MAXIMO.WORKORDER.TARGSTARTDATE%TYPE;
 TARGCOMPDATE_T  MAXIMO.WORKORDER.TARGCOMPDATE%TYPE;
 BUILDING_MAINT_T    LBL_WORKORDEREXT.BUILDING_MAINT%TYPE;
 GLACCOUNT_T         WORKORDER.GLACCOUNT%TYPE;
 STATUS_T            MAXIMO.WORKORDER.STATUS%TYPE;
 LDKEY_T             MAXIMO.LONGDESCRIPTION.LDKEY%TYPE;
 T_LBL_RELEASE_STATUS  MAXIMO.WORKORDER.LBL_RELEASE_STATUS%TYPE;
 LDTEXT_T            MAXIMO.LONGDESCRIPTION.LDTEXT%TYPE;
 LOCATION_T          MAXIMO.WORKORDER.LOCATION%TYPE;
 T_SUPERVISOR        MAXIMO.WORKORDER.SUPERVISOR%TYPE;
 OLD_LOCATION_T      MAXIMO.WORKORDER.LOCATION%TYPE;



   T_LBL_ESCORT_REQD    MAXIMO.WORKORDER.LBL_ESCORT_REQD%TYPE;
   T_LBL_CONDITION_REL  MAXIMO.WORKORDER.LBL_CONDITION_REL%TYPE;
   T_LBL_COMMENTS_CONDR MAXIMO.LOCATIONS.LBL_COMMENTS_CONDR%TYPE;
   T_NEEDESTBYDATE      MAXIMO.WORKORDER.TARGSTARTDATE%TYPE;


 BEGIN

 SELECT SYSDATE INTO CURRENTDATE_T FROM DUAL;


  IF UPPER(I_MODE)='DELETE' THEN

      -- CANCEL THE WORK ORDER
     INSERT INTO MAXIMO.WOSTATUS
     (WONUM, STATUS, CHANGEDATE, CHANGEBY,
      ORGID, SITEID, WOSTATUS.WOSTATUSID)
     VALUES
     (I_WONUM, 'CAN',CURRENTDATE_T, I_CHANGEBY,
     'LBNL','FAC', MAXIMO.WOSTATUSSEQ.NEXTVAL);

     UPDATE MAXIMO.WORKORDER
     SET STATUS='CAN', STATUSDATE=CURRENTDATE_T,
     CHANGEDATE=CURRENTDATE_T,
     CHANGEBY=I_CHANGEBY, HISTORYFLAG=1
     WHERE   ORGID='LBNL'
     AND     SITEID='FAC'
     AND     WONUM=I_WONUM;

     -- MXES 7/9/09
    UPDATE MAXIMO.WORKVIEW
    SET STATUS='CAN',HISTORYFLAG=1
    WHERE RECORDKEY=I_WONUM
    AND   CLASS='WORKORDER'
    AND   SITEID='FAC'
    AND   ORGID='LBNL';


  END IF;   --  IF UPPER(IMODE)='DELETE' THEN

 IF UPPER(I_MODE) !='DELETE' THEN

   -- PREPARE VALUES REQUIRED FOR TABLES (COMMON FOR ADD AND MODIFY)
  PREPARE_ESTWORK_VALUES
  (
    I_REPORTEDBY                ,
    I_PHONE                     ,
    I_WO1                       ,
    I_WO1_PHONE                 ,
    I_BUILDING                  ,
    I_ROOM                      ,
    I_LOCATION_NOTES            ,
    I_TARGSTARTDATE             ,
    I_TARGCOMPDATE              ,
    I_SCHED_ISSUES_DTL          ,
    I_GLACCOUNT                 ,
    I_DESCRIPTION               ,
    I_ACCOMP_COND_PROB          ,
    I_COMMODITYGROUP            ,
    I_COMMODITY                 ,
    I_NEEDESTBYDATE             ,
    I_OTHERSTAKEID              ,
    I_OTHERSTAKEPHONE           ,
    I_OTHERSTAKEMOBILE          ,
    LOCATION_T                  ,
    TARGSTARTDATE_T             ,
    TARGCOMPDATE_T              ,
    LDTEXT_T                    ,
    CURRENTDATE_T               ,
    T_LBL_RELEASE_STATUS
    );


    LDTEXT_T :=LTRIM(RTRIM(LDTEXT_T));

   --********************************
   -- NOW START UPDATING TABLES
   --********************************

   T_NEEDESTBYDATE := NULL;
   IF ( I_NEEDESTBYDATE IS NOT NULL) THEN
    SELECT   TO_DATE(I_NEEDESTBYDATE,'MM/DD/YYYY') INTO  T_NEEDESTBYDATE
    FROM DUAL;
  END IF;

   UPDATE BATCH_MAXIMO.LBL_WORKREQ
   SET WO1=LTRIM(RTRIM(I_WO1)), BUILDING=I_BUILDING, ROOM=I_ROOM,
   LOCATION_NOTES=I_LOCATION_NOTES,
   GLACCOUNT=RTRIM(LTRIM(I_GLACCOUNT)),
   DESCRIPTION=I_DESCRIPTION,
   TARGSTARTDATE=TARGSTARTDATE_T, TARGCOMPDATE=TARGCOMPDATE_T,
   CHANGEDATE=CURRENTDATE_T, CHANGEBY=I_CHANGEBY,
   COMMODITYGROUP=I_COMMODITYGROUP,COMMODITY=I_COMMODITY,
   WO1_PHONE                     =I_WO1_PHONE,
   SCHED_ISSUES_DTL              =I_SCHED_ISSUES_DTL,
   ACCOMP_COND_PROB              =I_ACCOMP_COND_PROB,
   needestbydate                 =T_NEEDESTBYDATE,
   OTHERSTAKEID                  =I_OTHERSTAKEID,
   OTHERSTAKEPHONE               =I_OTHERSTAKEPHONE,
   OTHERSTAKEMOBILE              =OTHERSTAKEMOBILE
   WHERE WONUM=I_WONUM;


   UPDATE MAXIMO.LONGDESCRIPTION
   SET LDTEXT=TO_CLOB(LDTEXT_T)
   WHERE LDKEY IN (SELECT B.WORKORDERID FROM WORKORDER B
   WHERE ORGID='LBNL' AND SITEID='FAC' AND WONUM=I_WONUM)
   AND  LDOWNERTABLE='WORKORDER'
   AND  LDOWNERCOL='DESCRIPTION';




  -- ADDED BY PANKAJ ON 11/25/15
  IF (LOCATION_T IS NOT NULL) THEN
    BEGIN
      SELECT LBL_ESCORT_REQD, LBL_COND_RELEASE, LBL_COMMENTS_CONDR
      INTO T_LBL_ESCORT_REQD, T_LBL_CONDITION_REL, T_LBL_COMMENTS_CONDR
      FROM MAXIMO.LOCATIONS
      WHERE SITEID='FAC'
      AND   LOCATION=LOCATION_T;

    EXCEPTION WHEN OTHERS THEN
      NULL;
    END;
  END IF;


   UPDATE MAXIMO.WORKORDER
   SET WO1=LTRIM(RTRIM(I_WO1)),
   TARGSTARTDATE=TARGSTARTDATE_T, TARGCOMPDATE=TARGCOMPDATE_T,
   PHONE=I_PHONE, GLACCOUNT=RTRIM(LTRIM(I_GLACCOUNT)), LOCATION=LOCATION_T,
   DESCRIPTION=I_DESCRIPTION,CHANGEDATE=CURRENTDATE_T, CHANGEBY=I_CHANGEBY,
   COMMODITYGROUP=I_COMMODITYGROUP,COMMODITY=I_COMMODITY,
   LBL_RELEASE_STATUS=LBL_WORKREQ_PKG.GET_RELEASE_LOCATION(LOCATION_T),
   CALCPRIORITY= LBL_WORKREQ_PKG.GET_LOC_PRIORITY(LOCATION_T),
   ASSETLOCPRIORITY=LBL_WORKREQ_PKG.GET_LOC_PRIORITY(LOCATION_T),
   LBL_ESCORT_REQD=T_LBL_ESCORT_REQD, LBL_CONDITION_REL=T_LBL_CONDITION_REL
   WHERE ORGID='LBNL'
   AND   SITEID='FAC'
   AND   WONUM=I_WONUM;

   -- MXES 7/9/09
   UPDATE MAXIMO.WORKVIEW
   SET DESCRIPTION=I_DESCRIPTION,
   PRIORITY= LBL_WORKREQ_PKG.GET_LOC_PRIORITY(LOCATION_T)
   WHERE RECORDKEY=I_WONUM
   AND   CLASS='WORKORDER'
   AND   SITEID='FAC'
   AND   ORGID='LBNL';




   IF (LOCATION_T IS NOT NULL) THEN

    BEGIN
     SELECT LOCATION  INTO OLD_LOCATION_T
     FROM   MULTIASSETLOCCI
     WHERE  RECORDKEY=I_WONUM
     AND    RECORDCLASS='WORKORDER'
     AND    ORGID='LBNL'
     AND    SITEID='FAC';

     IF (OLD_LOCATION_T !=LOCATION_T) THEN

      UPDATE   MULTIASSETLOCCI
      SET      LOCATION=LOCATION_T
      WHERE    RECORDKEY=I_WONUM
      AND      RECORDCLASS='WORKORDER'
      AND      ORGID='LBNL'
      AND      SITEID='FAC';

    END IF;

   EXCEPTION WHEN NO_DATA_FOUND THEN

    IF (LOCATION_T IS NOT NULL) THEN
        INSERT INTO MULTIASSETLOCCI
          (RECORDKEY,
           PROGRESS,
          LOCATION,
          REPLACEMENTSITE,
          LANGCODE,
          HASLD,
          ISPRIMARY,
          WORKORGID,
          MULTIID,
          PERFORMMOVETO,
          WORKSITEID,
          ORGID,
          SITEID,
          RECORDCLASS,
          TOTALWORKUNITS -- 7.6.1.1
          ) VALUES
          (I_WONUM,
           0,
           LOCATION_T,
           'FAC',
           'EN',
           0,
           1,
           'LBNL',
           MULTIASSETLOCCISEQ.NEXTVAL,
           0,
           'FAC',
           'LBNL',
           'FAC',
           'WORKORDER',
           1);
       END IF;
    END;
  END IF;  -- IF (LOCATION_T IS NOT NULL) THEN


 END IF; --  IF UPPER(MODE_I) !='DELETE' THEN

 RETURN I_WONUM;

 END;



END;
