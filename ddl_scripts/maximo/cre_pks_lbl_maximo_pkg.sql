CREATE OR REPLACE PACKAGE lbl_maximo_pkg
IS
/*****************************************************************************
 PROGRAM NAME           : CRE_PKB_LBL_MAXIMO_PKG.SQL

 DATE WRITTEN           : 01-JUL-2008

 AUTHOR                 : PANKAJ BHIDE

 PURPOSE                : PACKAGE SPEC FOR LBL_MAXIMO_PKG
*****************************************************************************/

FUNCTION GET_TARGSTARTDATE(ORGID_I  IN MAXIMO.WORKORDER.ORGID%TYPE,
                           SITEID_I IN MAXIMO.WORKORDER.SITEID%TYPE,
                           WONUM_I  IN MAXIMO.WORKORDER.WONUM%TYPE)
          RETURN MAXIMO.WORKORDER.TARGSTARTDATE%TYPE;

FUNCTION GET_DESCRIPTION(ORGID_I  IN MAXIMO.WORKORDER.ORGID%TYPE,
                         SITEID_I IN MAXIMO.WORKORDER.SITEID%TYPE,
                         WONUM_I    IN MAXIMO.WORKORDER.WONUM%TYPE)
          RETURN MAXIMO.WORKORDER.DESCRIPTION%TYPE;

/* PROCEDURE TO GET EMPLOYEE NAME */

FUNCTION GET_EMPLOYEE_NAME(PERSONID_I IN MAXIMO.PERSON.PERSONID%TYPE)
          RETURN MAXIMO.PERSON.DISPLAYNAME%TYPE;

FUNCTION GET_FRST_APPR_DATE(ORGID_I  IN MAXIMO.WORKORDER.ORGID%TYPE,
                            SITEID_I IN MAXIMO.WORKORDER.SITEID%TYPE,
                            WONUM_I    IN MAXIMO.WORKORDER.WONUM%TYPE)
          RETURN MAXIMO.WORKORDER.CHANGEDATE%TYPE;

FUNCTION GET_GISPARAM1(ORGID_I  IN MAXIMO.LOCATIONS.ORGID%TYPE,
                       SITEID_I IN MAXIMO.LOCATIONS.SITEID%TYPE,
                       LOCATION_I  IN MAXIMO.LOCATIONS.LOCATION%TYPE)
          RETURN MAXIMO.LOCATIONS.GISPARAM1%TYPE;

FUNCTION GET_PARENT(ORGID_I  IN MAXIMO.LOCATIONS.ORGID%TYPE,
                    SITEID_I IN MAXIMO.LOCATIONS.SITEID%TYPE,
                    LOCATION_I  IN MAXIMO.LOCATIONS.LOCATION%TYPE)
          RETURN MAXIMO.LOCHIERARCHY.PARENT%TYPE;

FUNCTION GET_BUILDING(ORGID_I  IN MAXIMO.LOCATIONS.ORGID%TYPE,
                      SITEID_I IN MAXIMO.LOCATIONS.SITEID%TYPE,
                      LOCATION_I  IN MAXIMO.LOCATIONS.LOCATION%TYPE)
          RETURN MAXIMO.LOCATIONS.LOCATION%TYPE;

FUNCTION GET_LEADCRAFT_INFO(ORGID_I  IN MAXIMO.WORKORDER.ORGID%TYPE,
                            LEADCRAFT_I IN MAXIMO.WORKORDER.LEADCRAFT%TYPE,
                            INFO_TYPE_I IN MAXIMO.WORKORDER.STATUS%TYPE)
         RETURN MAXIMO.CRAFT.DESCRIPTION%TYPE;

FUNCTION GET_LAST_MILEAGE(ORGID_I    IN MAXIMO.ASSET.ORGID%TYPE,
                          SITEID_I   IN MAXIMO.ASSET.SITEID%TYPE,
                          ASSETNUM_I IN MAXIMO.ASSET.ASSETNUM%TYPE,
                          READINGDATE_I IN BATCH_MAXIMO.LBL_VEHMILEHISTORY.READINGDATE%TYPE)
          RETURN MAXIMO.ASSETMETER.LASTREADING%TYPE;

FUNCTION GET_MILEAGE_4_PERIOD(ORGID_I    IN MAXIMO.ASSET.ORGID%TYPE,
                              SITEID_I   IN MAXIMO.ASSET.SITEID%TYPE,
                              ASSETNUM_I IN MAXIMO.ASSET.ASSETNUM%TYPE,
                              FINANCIALPERIOD_I IN MAXIMO.FINANCIALPERIODS.FINANCIALPERIOD%TYPE)
          RETURN MAXIMO.ASSETMETER.LASTREADING%TYPE;


/* PROCEDURE TO GET NAME OF PROJECT */
FUNCTION GET_PROJECT_NAME(PROJECT_ID_I  IN LBL_V_PROJACT.GLACCOUNT%TYPE)
                         RETURN LBL_V_PROJACT.ACCOUNTNAME%TYPE;

/* FUNCTION TO GET THE TOTAL AREA OF THE BUILDING */
FUNCTION GET_BUILDING_AREA(BUILDING_NUMBER_I  IN  SPADM.SPACE_ROOM.BUILDING_NUMBER%TYPE)
                          RETURN MAXIMO.POLINE.CONVERSION%TYPE;

/* FUNCTION TO GET DESCRIPTION FOR THE VALUELIST */
FUNCTION GET_VALUELIST_DESCRIPTION(ORGID_I    IN MAXIMO.ALNDOMAIN.ORGID%TYPE,
                                   SITEID_I   IN MAXIMO.ASSET.SITEID%TYPE,
                                   LISTNAME_I  IN  MAXIMO.ALNDOMAIN.DOMAINID%TYPE,
                                   VALUE_I     IN  MAXIMO.ALNDOMAIN.VALUE%TYPE)
                          RETURN MAXIMO.ALNDOMAIN.DESCRIPTION%TYPE;

/* FUNCTION TO GET ROLLEDUP VALUES FOR THE GIVEN COLUMN */
FUNCTION GET_ROLLUP_VALUE(ORGID_I  IN MAXIMO.WORKORDER.ORGID%TYPE,
                          SITEID_I IN MAXIMO.WORKORDER.SITEID%TYPE,
                          P_WONUM   IN MAXIMO.WORKORDER.WONUM%TYPE,
                          P_COLUMN  IN VARCHAR2)
                          RETURN NUMBER;

/* FUNCTION TO GET THE VALIDITY OF THIS PROJECT FOR THE GIVEN DATE */
FUNCTION IS_PS_PROJECT_VALID(PROJECT_ID_I  IN varchar2,
                             DATE_I     IN DATE)
                          RETURN VARCHAR2;

/* FUNCTION TO FIND OUT WHETHER TO SEND ACK/NOTIFICATION */
FUNCTION ACK_NOTIFY_SENT(DATE_I IN MAXIMO.WORKORDER.CHANGEDATE%TYPE)
                         RETURN VARCHAR2;

/* FUNCTION TO GET LONG DESCRIPTION TEXT FOR GIVEN ENTITY */
FUNCTION GET_LONGDESCRIPTION(LDKEY_I IN MAXIMO.LONGDESCRIPTION.ldkey%TYPE,
                             LDOWNERTABLE_I  IN MAXIMO.LONGDESCRIPTION.LDOWNERTABLE%TYPE,
                             LDOWNERCOL_I    IN MAXIMO.LONGDESCRIPTION.LDOWNERCOL%TYPE)
                         RETURN VARCHAR2;

/* FUNCTION TO NEW PROJECT ID AND ACTIVITY ID COMBO FOR A GIVEN GLACCOUNT */
FUNCTION GET_PROJACTCOMBO(GLACCOUNT_I MAXIMO.WORKORDER.GLACCOUNT%TYPE)
                         RETURN VARCHAR2;

/* FUNCTION TO GET THE ID OF INTEGRATION USER */
FUNCTION GET_MXINT_USERID
       RETURN VARCHAR2;

/* FUNCTION TO RESET SEQUENCE */
FUNCTION RESET_SEQUENCE(SEQNAME_I VARCHAR2)
       RETURN VARCHAR2;


PROCEDURE SEND_MAIL_HTML(P_TO  IN VARCHAR2,
                                       P_FROM      IN VARCHAR2,
                                       P_SUBJECT   IN VARCHAR2,
                                       P_TEXT_MSG  IN VARCHAR2 DEFAULT NULL,
                                       P_HTML_MSG  IN VARCHAR2 DEFAULT NULL,
                                       P_SMTP_HOST IN VARCHAR2,
                                       P_SMTP_PORT IN NUMBER DEFAULT 25);


PROCEDURE SEND_MAIL_HTML_CLOB(P_TO  IN VARCHAR2,
                                       P_FROM      IN VARCHAR2,
                                       P_SUBJECT   IN VARCHAR2,
                                       P_CLOB_MSG  IN CLOB,
                                       P_SMTP_HOST IN VARCHAR2,
                                       P_SMTP_PORT IN NUMBER DEFAULT 25);


FUNCTION CONVERT_TO_HOURS (IN_HOURS IN FLOAT) RETURN VARCHAR ;


FUNCTION REPLACE_NON_ASCII(INPUT_STR_T VARCHAR, REPLACE_WITH_T VARCHAR) RETURN VARCHAR;

FUNCTION REPLACE_NON_ASCII(INPUT_STR_T VARCHAR) RETURN VARCHAR;

FUNCTION GET_ROUTE(LOCATION_I LOCATIONS.LOCATION%TYPE) RETURN LOCATIONSPEC.ALNVALUE%type;

-- PROCEDURE TO GET PROPERTY VALUE OF A GIVEN PROPERTY

PROCEDURE GET_PROPERTY_VALUE
(
  P_PROPERTY   IN   MAXPROPVALUE.propname%TYPE,
  P_PROPVALUE  OUT  MAXPROPVALUE.propvalue%TYPE
 );


PRAGMA RESTRICT_REFERENCES (GET_EMPLOYEE_NAME, WNDS,RNPS,WNPS);
PRAGMA RESTRICT_REFERENCES (GET_FRST_APPR_DATE, WNDS,RNPS,WNPS);
PRAGMA RESTRICT_REFERENCES (GET_GISPARAM1, WNDS,RNPS,WNPS);
PRAGMA RESTRICT_REFERENCES (GET_PARENT, WNDS,RNPS,WNPS);
PRAGMA RESTRICT_REFERENCES (GET_BUILDING, WNDS,RNPS,WNPS);
PRAGMA RESTRICT_REFERENCES (GET_LEADCRAFT_INFO, WNDS,RNPS,WNPS);
PRAGMA RESTRICT_REFERENCES (GET_LAST_MILEAGE, WNDS,RNPS,WNPS);
PRAGMA RESTRICT_REFERENCES (GET_MILEAGE_4_PERIOD, WNDS,RNPS,WNPS);
PRAGMA RESTRICT_REFERENCES (GET_PROJECT_NAME, WNDS);
PRAGMA RESTRICT_REFERENCES (GET_BUILDING_AREA,WNDS);
PRAGMA RESTRICT_REFERENCES (GET_VALUELIST_DESCRIPTION,WNDS);
PRAGMA RESTRICT_REFERENCES (GET_ROLLUP_VALUE,WNDS);
PRAGMA RESTRICT_REFERENCES (CONVERT_TO_HOURS,WNDS);
PRAGMA RESTRICT_REFERENCES (IS_PS_PROJECT_VALID,WNDS);


END;
